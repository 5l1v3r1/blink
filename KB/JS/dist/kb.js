!function(e){var t={};function a(o){if(t[o])return t[o].exports;var l=t[o]={i:o,l:!1,exports:{}};return e[o].call(l.exports,l,l.exports,a),l.l=!0,l.exports}a.m=e,a.c=t,a.d=function(e,t,o){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(a.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)a.d(o,l,function(t){return e[t]}.bind(null,l));return o},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=0)}([function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=new(a(1).default);document.body.append(o.element),o.focus(!0),window._onKB=o.onKB,window._kb=o,o.ready()},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=a(2),l=a(3),n=a(4),r=o.KBActions.CANCEL,s=o.KBActions.DEFAULT,i=o.KBActions.PASS,d=o.KBActions.STRIP;function c(e){switch(e){case"escape":return{keyCode:27,code:"[ESC]",key:"[ESC]"};case"tab":return{keyCode:9,code:"[TAB]",key:"[TAB]"};default:return null}}const y="20:0";function m(e){let t=229==e.keyCode?0:e.keyCode,a=e.location;return t?`${t}:${a}`:`${t}:${a}:${(e.key||"").toLowerCase()}`}function p(e,t){let a=Object.assign(Object.assign({},t),{op:e});window.webkit.messageHandlers._kb.postMessage(a)}function C(e){e&&(e.preventDefault(),e.stopPropagation())}const h={KeyC:67,c:67,KeyI:73,i:73,KeyH:72,h:72,KeyM:77,m:77,BracketLeft:219,"[":77,KeyN:78,n:78,KeyU:85,u:85,KeyE:69,e:69};t.default=class{constructor(){this.element=document.createElement("input"),this._keyMap=new o.default(this),this._bindings=new n.default,this._lang="en",this._lastKeyDownEvent=null,this._capsLockRemapped=!1,this._shiftRemapped=!1,this._metaSendsEscape=!0,this._altSendsWhat="escape",this._ignoreAccents={AltLeft:!0,AltRight:!0},this._modsMap={ShiftLeft:"Shift",ShiftRight:"Shift",AltLeft:"Escape",AltRight:"Escape",MetaLeft:"Meta",MetaRight:"Meta",ControlLeft:"Control",ControlRight:"Control",CapsLock:""},this._downMap={},this._upMap={},this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set},this._up=new Set,this._down=new Set,this._captureMode=!1,this._voiceString="",this._updateUIKitModsIfNeeded=e=>{let t=e.code;if(this._capsLockRemapped){let a;p("mods",{mods:a="keyup"==e.type&&"CapsLock"==t?0:l.default(e)})}"AltLeft"!=t&&"AltRight"!=t||this._ignoreAccents[t]&&("keydown"==e.type?p("guard-ime-on",{}):p("guard-ime-off",{}),C(e))},this._onKeyDown=e=>{if(e.isComposing)return void(this._lastKeyDownEvent=null);let t=e;if(229===e.keyCode){if(!this._lastKeyDownEvent)return;t=this._lastKeyDownEvent}else this._lastKeyDownEvent=e;if(this._captureMode){let a=m+"-"+t.code;return this._down.add(a),this._capture(),this._updateUIKitModsIfNeeded(t),void C(e)}let a=m(t);this._down.add(a);let o=this._bindings.match(this._down.values);if(o)return void this._execBinding(o);let l=this._downMap[a],n=this._mod(this._modsMap[t.code]),r=!1;l&&((r=!(n&&this._mods[n].has(a)))||(this._handleKeyDownKey(l,e),r=!0)),n&&this._mods[n].add(a),this._upMap[a]&&this._up.add(a),this._updateUIKitModsIfNeeded(t),r||this._handleKeyDown(t.keyCode,e)},this._onBeforeInput=e=>{"dictation"!=this._lang?("insertText"==e.inputType&&this._output(e.data),C(e)):this._voiceString=e.data},this._onInput=e=>C(e),this._onKeyUp=e=>{if(this._lastKeyDownEvent=null,this._captureMode){let t=m+"-"+e.code;return this._down.delete(t),this._capture(),this._updateUIKitModsIfNeeded(e),void C(e)}let t=m(e);this._down.delete(t);let a=this._mod(this._modsMap[e.code]);a&&this._mods[a].delete(t),this._updateUIKitModsIfNeeded(e);let o=this._upMap[t];o&&this._up.has(t)&&this._handleKeyDownKey(o,null),C(e)},this._handleKeyDown=(e,t)=>{let a={keyCode:e,key:"",code:"Unidentified"};t&&(a.code=t.code,a.key=t.key),this._handleKeyDownKey(a,t)},this._handleKeyDownKey=(e,t)=>{let a=this._keyMap,o=this._mods.Alt.size>0,l=this._mods.Control.size>0,n=this._mods.Meta.size>0,c=this._mods.Shift.size>0,y=e.code,m=e.key,p=function(e,t){return t?(t.ctrlKey&&(9==t.keyCode&&"KeyI"==t.code||8==t.keyCode&&"KeyH"==t.code||13==t.keyCode&&"KeyC"==t.code||13==t.keyCode&&"KeyM"==t.code||27==t.keyCode&&"BracketLeft"==t.code)&&(e.keyCode=h[t.code]||e.keyCode),e):e}({key:m,code:y,keyCode:e.keyCode,alt:o,ctrl:l,meta:n,shift:c},t),k=a.getKeyDef(p.keyCode);var u=null;function _(e){u=e;var t=k[e];return"function"==typeof t&&(t=t.call(a,p,k)),t===s&&"normal"!=e&&(t=_("normal")),t}let f;if((f=_(l?"ctrl":o?"alt":n?"meta":"normal"))===i||f===s&&!(l||o||n)){if(f===i)return;if(/^\[\w+\]$/.test(k.keyCap))return;let e=function(e){let t=e.normalize("NFD").replace(/[\u0300-\u036f]/g,""),a=t.replace(/^[\u02c6\u00a8\u00b4\u02dc\u0060]/,"");return a&&(t=a),t}(m);return this._capsLockRemapped||this._shiftRemapped?this._output(c?e.toUpperCase():e.toLowerCase()):this._output(e),void C(t)}if(f===d&&(o=l=!1,"function"==typeof(f=k.normal)&&(f=f.call(a,p,k)),f==s&&2==k.keyCap.length&&(f=k.keyCap.substr(c?1:0,1))),C(t),f!==r)if(f===s||"string"==typeof f){if("ctrl"==u?l=!1:"alt"==u?o=!1:"meta"==u&&(n=!1),c=p.shift,(o||l||c||n)&&"string"==typeof f&&"["==f.substr(0,2)){let e=1;c&&(e+=1),o&&(e+=2),l&&(e+=4),n&&(e+=8);let t=";"+e;f=3==f.length?"[1"+t+f.substr(2,1):f.substr(0,f.length-1)+t+f.substr(f.length-1)}else{if(f===s&&(f=k.keyCap.substr(c?1:0,1),l)){let e=k.keyCap.substr(0,1).charCodeAt(0);e>=64&&e<=95&&(f=String.fromCharCode(e-64))}let e=f.toString();if(o&&"8-bit"==this._altSendsWhat&&1==e.length){let t=e.charCodeAt(0)+128;f=String.fromCharCode(t)}(o&&"escape"==this._altSendsWhat||n&&this._metaSendsEscape)&&(f=""+e)}"string"==typeof f?this._output(f):console.warn("action is not a string",f)}else console.log("Invalid action: "+JSON.stringify(f))},this._onIME=e=>{let t=e.type,a=e.data||"";p("ime",{type:t,data:a}),"compositionend"==t&&this._output(a)},this._output=e=>{this._up.clear(),e&&p("out",{data:e})},this._capture=()=>p("capture",{keyIds:this._down.values}),this._configKey=e=>{let t=e.code,a=c(e.down);a&&(this._upMap[t.id]=a),this._mod(e.mod)&&(this._modsMap[t.code]=e.mod);let o=c(e.up);o&&(this._upMap[t.id]=o),"AltRight"!=t.code&&"AltLeft"!=t.code||(this._ignoreAccents[t.code]=e.ignoreAccents)},this._config=e=>{this._reset(),this._configKey(e.capsLock),this._configKey(e.command.left),this._configKey(e.command.right),this._configKey(e.control.left),this._configKey(e.control.right),this._configKey(e.option.left),this._configKey(e.option.right),this._configKey(e.shift.left),this._configKey(e.shift.right)},this._toggleCaptureMode=e=>this._captureMode=!!e,this.onKB=(e,t)=>{switch(e){case"mods-down":this._handleCapsLockDown(!0);break;case"mods-up":this._handleCapsLockDown(!1);break;case"lang":this._handleLang(t);break;case"guard-up":this._handleGuard(!0,t);break;case"guard-down":this._handleGuard(!1,t);break;case"capture":this._toggleCaptureMode(t);break;case"focus":this.focus(t);break;case"config":this._config(t)}};let e=this.element;e.setAttribute("autocomplete","off"),e.setAttribute("spellcheck","false"),e.setAttribute("autocorrect","off"),e.setAttribute("autocapitalize","none"),e.setAttribute("autofocus","true"),e.value=" ",e.addEventListener("keydown",this._onKeyDown),e.addEventListener("keyup",this._onKeyUp),e.addEventListener("compositionstart",this._onIME),e.addEventListener("compositionupdate",this._onIME),e.addEventListener("compositionend",this._onIME),e.addEventListener("beforeinput",this._onBeforeInput),e.addEventListener("input",this._onInput),this._capsLockRemapped=null!=this._modsMap.CapsLock||null!=this._downMap[y]||null!=this._upMap[y],this._shiftRemapped=null!=this._modsMap.Shift||"Shift"!==this._modsMap.Shift}_mod(e){switch(e){case"Escape":return this._altSendsWhat="escape","Alt";case"8-bit":return this._altSendsWhat="8-bit","Alt";case"Shift":return"Shift";case"Control":return"Control";case"Meta":return this._metaSendsEscape=!1,"Meta";case"Meta-Escape":return this._metaSendsEscape=!0,"Meta";default:return null}}focus(e){e?this.element.focus():this.element.blur()}ready(){p("ready",{})}_handleCapsLockDown(e){if(this._captureMode)return e?this._down.delete(y+"-capslock"):this._down.add(y+"-capslock"),void this._capture();let t=this._modsMap.CapsLock;if(e){this._down.add(y);let e=this._downMap[y];return!e||t&&this._mods[t].has(y)||this._handleKeyDownKey(e,null),t&&this._mods[t].add(y),void(this._upMap[y]&&this._up.add(y))}this._down.delete(y),t&&this._mods[t].delete(y);let a=this._upMap[y];a&&this._up.has(y)&&this._handleKeyDownKey(a,null)}_handleLang(e){this._down.clear(),this._up.clear(),this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set},this.element.value=" ",this._lang=e}_handleGuard(e,t){this.element.value=" ";let a=h[t||""]||0,o=`${a}:0`;this._captureMode&&(o+="-Key"+t.toUpperCase()),e?this._down.delete(o):this._down.add(o),this._captureMode?this._capture():e||this._handleKeyDown(a,null)}_reset(){this._modsMap={},this._downMap={},this._upMap={},this._up.clear(),this._down.clear(),this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set},this._ignoreAccents={AltLeft:!0,AltRight:!0}}_execBinding(e){switch(e.type){case"output":this._output(e.value)}}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=Symbol("CANCEL"),l=Symbol("DEFAULT"),n=Symbol("PASS"),r=Symbol("STRIP");t.KBActions={CANCEL:o,DEFAULT:l,PASS:n,STRIP:r};const s="",i="[",d="O",c="",y=e=>String.fromCharCode(e.charCodeAt(0)-64),m={keyCode:0,keyCap:"[UNKNOWN]",normal:n,ctrl:n,alt:n,meta:n};t.default=class{constructor(e){this._defs={},this._onCtrlNum=(e,t)=>{switch(t.keyCap.substr(0,1)){case"1":return"1";case"2":return y("@");case"3":return y("[");case"4":return y("\\");case"5":return y("]");case"6":return y("^");case"7":return y("_");case"8":return c;case"9":return"9";default:return n}},this._onAltNum=(e,t)=>l,this._onMetaNum=(e,t)=>l,this._onZoom=(e,t)=>l,this._keyboard=e,this.reset()}getKeyDef(e){var t=this._defs[e];return t||(console.warn(`No definition for (keyCode ${e})`),t=m,this.addKeyDef(e,t),t)}addKeyDef(e,t){e in this._defs&&console.warn("Dup keyCode: ",e),this._defs[e]=t}reset(){this._defs={};const e=(e,t,a)=>"function"==typeof e?e.call(this,t,a):e,t=(t,a)=>(o,l)=>{let n=o.shift||o.ctrl||o.alt||o.meta?a:t;return e(n,o,l)},a=(t,a)=>(o,l)=>{let n=o.shift?a:t;return o.shift=!1,e(n,o,l)},o=(e,t)=>e,p=(t,a)=>(o,l)=>{let n=o.alt?t:a;return e(n,o,l)},C=(e,t)=>t,h=e=>this.addKeyDef(e.keyCode,e);h(m),h({keyCode:27,keyCap:"[ESC]",normal:s,ctrl:l,alt:l,meta:l}),h({keyCode:112,keyCap:"[F1]",normal:t(d+"P",i+"P"),ctrl:l,alt:i+"23~",meta:l}),h({keyCode:113,keyCap:"[F2]",normal:t(d+"Q",i+"Q"),ctrl:l,alt:i+"24~",meta:l}),h({keyCode:114,keyCap:"[F3]",normal:t(d+"R",i+"R"),ctrl:l,alt:i+"25~",meta:l}),h({keyCode:115,keyCap:"[F4]",normal:t(d+"S",i+"S"),ctrl:l,alt:i+"26~",meta:l}),h({keyCode:116,keyCap:"[F5]",normal:i+"15~",ctrl:l,alt:i+"28~",meta:l}),h({keyCode:117,keyCap:"[F6]",normal:i+"17~",ctrl:l,alt:i+"29~",meta:l}),h({keyCode:118,keyCap:"[F7]",normal:i+"18~",ctrl:l,alt:i+"31~",meta:l}),h({keyCode:119,keyCap:"[F8]",normal:i+"19~",ctrl:l,alt:i+"32~",meta:l}),h({keyCode:120,keyCap:"[F9]",normal:i+"20~",ctrl:l,alt:i+"33~",meta:l}),h({keyCode:121,keyCap:"[F10]",normal:i+"21~",ctrl:l,alt:i+"34~",meta:l}),h({keyCode:122,keyCap:"[F11]",normal:i+"23~",ctrl:l,alt:i+"42~",meta:l}),h({keyCode:123,keyCap:"[F12]",normal:i+"24~",ctrl:l,alt:i+"43~",meta:l});const k=this._onCtrlNum,u=this._onAltNum,_=this._onMetaNum,f=this._onZoom;h({keyCode:192,keyCap:"`~",normal:l,ctrl:a(y("@"),y("^")),alt:l,meta:n}),h({keyCode:49,keyCap:"1!",normal:l,ctrl:k,alt:u,meta:_}),h({keyCode:50,keyCap:"2@",normal:l,ctrl:k,alt:u,meta:_}),h({keyCode:51,keyCap:"3#",normal:l,ctrl:k,alt:u,meta:_}),h({keyCode:52,keyCap:"4$",normal:l,ctrl:k,alt:u,meta:_}),h({keyCode:53,keyCap:"5%",normal:l,ctrl:k,alt:u,meta:_}),h({keyCode:54,keyCap:"6^",normal:l,ctrl:k,alt:u,meta:_}),h({keyCode:55,keyCap:"7&",normal:l,ctrl:k,alt:u,meta:_}),h({keyCode:56,keyCap:"8*",normal:l,ctrl:k,alt:u,meta:_}),h({keyCode:57,keyCap:"9(",normal:l,ctrl:k,alt:u,meta:_}),h({keyCode:48,keyCap:"0)",normal:l,ctrl:f,alt:u,meta:f}),h({keyCode:189,keyCap:"-_",normal:l,ctrl:a(f,y("_")),alt:l,meta:f}),h({keyCode:187,keyCap:"=+",normal:l,ctrl:f,alt:l,meta:f}),h({keyCode:8,keyCap:"[BKSP]",normal:o(c),ctrl:o("\b"),alt:l,meta:l}),h({keyCode:9,keyCap:"[TAB]",normal:a("\t",i+"Z"),ctrl:r,alt:n,meta:l}),h({keyCode:81,keyCap:"qQ",normal:l,ctrl:y("Q"),alt:l,meta:l}),h({keyCode:87,keyCap:"wW",normal:l,ctrl:y("W"),alt:l,meta:l}),h({keyCode:69,keyCap:"eE",normal:l,ctrl:y("E"),alt:l,meta:l}),h({keyCode:82,keyCap:"rR",normal:l,ctrl:y("R"),alt:l,meta:l}),h({keyCode:84,keyCap:"tT",normal:l,ctrl:y("T"),alt:l,meta:l}),h({keyCode:89,keyCap:"yY",normal:l,ctrl:y("Y"),alt:l,meta:l}),h({keyCode:85,keyCap:"uU",normal:l,ctrl:y("U"),alt:l,meta:l}),h({keyCode:73,keyCap:"iI",normal:l,ctrl:y("I"),alt:l,meta:l}),h({keyCode:79,keyCap:"oO",normal:l,ctrl:y("O"),alt:l,meta:l}),h({keyCode:80,keyCap:"pP",normal:l,ctrl:y("P"),alt:l,meta:l}),h({keyCode:219,keyCap:"[{",normal:l,ctrl:y("["),alt:l,meta:l}),h({keyCode:221,keyCap:"]}",normal:l,ctrl:y("]"),alt:l,meta:l}),h({keyCode:220,keyCap:"\\|",normal:l,ctrl:y("\\"),alt:l,meta:l}),h({keyCode:20,keyCap:"[CAPS]",normal:n,ctrl:n,alt:n,meta:l}),h({keyCode:65,keyCap:"aA",normal:l,ctrl:y("A"),alt:l,meta:l}),h({keyCode:83,keyCap:"sS",normal:l,ctrl:y("S"),alt:l,meta:l}),h({keyCode:68,keyCap:"dD",normal:l,ctrl:y("D"),alt:l,meta:l}),h({keyCode:70,keyCap:"fF",normal:l,ctrl:y("F"),alt:l,meta:l}),h({keyCode:71,keyCap:"gG",normal:l,ctrl:y("G"),alt:l,meta:l}),h({keyCode:72,keyCap:"hH",normal:l,ctrl:y("H"),alt:l,meta:l}),h({keyCode:74,keyCap:"jJ",normal:l,ctrl:y("J"),alt:l,meta:l}),h({keyCode:75,keyCap:"kK",normal:l,ctrl:y("K"),alt:l,meta:l}),h({keyCode:76,keyCap:"lL",normal:l,ctrl:y("L"),alt:l,meta:l}),h({keyCode:186,keyCap:";:",normal:l,ctrl:r,alt:l,meta:l}),h({keyCode:222,keyCap:"'\"",normal:l,ctrl:r,alt:l,meta:l}),h({keyCode:13,keyCap:"[ENTER]",normal:"\r",ctrl:l,alt:l,meta:l}),h({keyCode:16,keyCap:"[SHIFT]",normal:n,ctrl:n,alt:n,meta:l}),h({keyCode:90,keyCap:"zZ",normal:l,ctrl:y("Z"),alt:l,meta:l}),h({keyCode:88,keyCap:"xX",normal:l,ctrl:y("X"),alt:l,meta:l}),h({keyCode:67,keyCap:"cC",normal:l,ctrl:y("C"),alt:l,meta:n}),h({keyCode:86,keyCap:"vV",normal:l,ctrl:y("V"),alt:l,meta:n}),h({keyCode:66,keyCap:"bB",normal:l,ctrl:y("B"),alt:l,meta:l}),h({keyCode:78,keyCap:"nN",normal:l,ctrl:y("N"),alt:l,meta:l}),h({keyCode:77,keyCap:"mM",normal:l,ctrl:y("M"),alt:l,meta:l}),h({keyCode:188,keyCap:",<",normal:l,ctrl:p(r,n),alt:l,meta:l}),h({keyCode:190,keyCap:".>",normal:l,ctrl:p(r,n),alt:l,meta:l}),h({keyCode:191,keyCap:"/?",normal:l,ctrl:a(y("_"),y("?")),alt:l,meta:l}),h({keyCode:17,keyCap:"[CTRL]",normal:n,ctrl:n,alt:n,meta:n}),h({keyCode:18,keyCap:"[ALT]",normal:n,ctrl:n,alt:n,meta:n}),h({keyCode:91,keyCap:"[LAPL]",normal:n,ctrl:n,alt:n,meta:n}),h({keyCode:32,keyCap:" ",normal:l,ctrl:y("@"),alt:l,meta:l}),h({keyCode:93,keyCap:"[RAPL]",normal:n,ctrl:n,alt:n,meta:n}),h({keyCode:42,keyCap:"[PRTSCR]",normal:n,ctrl:n,alt:n,meta:n}),h({keyCode:145,keyCap:"[SCRLK]",normal:n,ctrl:n,alt:n,meta:n}),h({keyCode:19,keyCap:"[BREAK]",normal:n,ctrl:n,alt:n,meta:n}),h({keyCode:45,keyCap:"[INSERT]",normal:i+"2~",ctrl:l,alt:l,meta:l}),h({keyCode:36,keyCap:"[HOME]",normal:s+"OH",ctrl:l,alt:l,meta:l}),h({keyCode:33,keyCap:"[PGUP]",normal:i+"5~",ctrl:l,alt:l,meta:l}),h({keyCode:46,keyCap:"[DEL]",normal:i+"3~",ctrl:l,alt:l,meta:l}),h({keyCode:35,keyCap:"[END]",normal:s+"OF",ctrl:l,alt:l,meta:l}),h({keyCode:34,keyCap:"[PGDOWN]",normal:i+"6~",ctrl:l,alt:l,meta:l}),h({keyCode:38,keyCap:"[UP]",normal:C(0,d+"A"),ctrl:l,alt:l,meta:l}),h({keyCode:40,keyCap:"[DOWN]",normal:C(0,d+"B"),ctrl:l,alt:l,meta:l}),h({keyCode:39,keyCap:"[RIGHT]",normal:C(0,d+"C"),ctrl:l,alt:l,meta:l}),h({keyCode:37,keyCap:"[LEFT]",normal:C(0,d+"D"),ctrl:l,alt:l,meta:l}),h({keyCode:144,keyCap:"[NUMLOCK]",normal:n,ctrl:n,alt:n,meta:n}),h({keyCode:12,keyCap:"[CLEAR]",normal:n,ctrl:n,alt:n,meta:n}),h({keyCode:96,keyCap:"[KP0]",normal:l,ctrl:l,alt:l,meta:l}),h({keyCode:97,keyCap:"[KP1]",normal:l,ctrl:l,alt:l,meta:l}),h({keyCode:98,keyCap:"[KP2]",normal:l,ctrl:l,alt:l,meta:l}),h({keyCode:99,keyCap:"[KP3]",normal:l,ctrl:l,alt:l,meta:l}),h({keyCode:100,keyCap:"[KP4]",normal:l,ctrl:l,alt:l,meta:l}),h({keyCode:101,keyCap:"[KP5]",normal:l,ctrl:l,alt:l,meta:l}),h({keyCode:102,keyCap:"[KP6]",normal:l,ctrl:l,alt:l,meta:l}),h({keyCode:103,keyCap:"[KP7]",normal:l,ctrl:l,alt:l,meta:l}),h({keyCode:104,keyCap:"[KP8]",normal:l,ctrl:l,alt:l,meta:l}),h({keyCode:105,keyCap:"[KP9]",normal:l,ctrl:l,alt:l,meta:l}),h({keyCode:107,keyCap:"[KP+]",normal:l,ctrl:f,alt:l,meta:f}),h({keyCode:109,keyCap:"[KP-]",normal:l,ctrl:f,alt:l,meta:f}),h({keyCode:106,keyCap:"[KP*]",normal:l,ctrl:l,alt:l,meta:l}),h({keyCode:111,keyCap:"[KP/]",normal:l,ctrl:l,alt:l,meta:l}),h({keyCode:110,keyCap:"[KP.]",normal:l,ctrl:l,alt:l,meta:l})}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=65536,l=1<<17,n=1<<18,r=1<<19,s=1<<20;t.default=function(e,t=!0){let a=0;return e.shiftKey&&(a|=l),e.ctrlKey&&(a|=n),e.altKey&&(a|=r),e.metaKey&&(a|=s),t&&(a|=o),a}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=class{constructor(){this._stack=[],this._map={}}match(e){let t=Array(e).sort().join(":");return this._map[t]}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,