!function(e){var t={};function a(o){if(t[o])return t[o].exports;var s=t[o]={i:o,l:!1,exports:{}};return e[o].call(s.exports,s,s.exports,a),s.l=!0,s.exports}a.m=e,a.c=t,a.d=function(e,t,o){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(a.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)a.d(o,s,function(t){return e[t]}.bind(null,s));return o},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=0)}([function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=new(a(1).default);document.body.append(o.element),o.focus(!0),window._onKB=o.onKB,window._kb=o,o.ready()},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=a(2),s=a(3),l=a(4),n=o.KBActions.CANCEL,r=o.KBActions.DEFAULT,i=o.KBActions.PASS,d=o.KBActions.STRIP;function c(e){switch(e){case"escape":return{keyCode:27,code:"[ESC]",key:"[ESC]"};case"tab":return{keyCode:9,code:"[TAB]",key:"[TAB]"};default:return null}}const h=new Set(["20:0","16:1","16:2","17:1","17:2","18:1","18:2","91:1","91:2","93:0"]),y="16:1",m="17:1",p="18:1",k="91:1",C="20:0";function u(e){let t=229==e.keyCode?0:e.keyCode,a=e.location;return t?`${t}:${a}`:`${t}:${a}:${(e.key||"").toLowerCase()}`}function _(e){e&&(e.preventDefault(),e.stopPropagation())}t.default=class{constructor(){this.element=document.createElement("input"),this._keyMap=new o.default(this),this._bindings=new l.default,this._lang="en",this.hasSelection=!1,this._lastKeyDownEvent=null,this._capsLockRemapped=!1,this._shiftRemapped=!1,this._removeAccents=!1,this._metaSendsEscape=!0,this._altSendsWhat="escape",this._ignoreAccents={AltLeft:!0,AltRight:!0},this._modsMap={ShiftLeft:"Shift",ShiftRight:"Shift",AltLeft:"Escape",AltRight:"Escape",MetaLeft:"Meta",MetaRight:"Meta",ControlLeft:"Control",ControlRight:"Control",CapsLock:""},this._downMap={},this._upMap={},this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set},this._up=new Set,this._down=new Set,this._captureMode=!1,this._voiceString="",this._updateUIKitModsIfNeeded=e=>{let t=e.code;if(this._capsLockRemapped){let a;a="keyup"==e.type&&"CapsLock"==t?0:s.toUIKitFlags(e),o.op("mods",{mods:a})}"AltLeft"!=t&&"AltRight"!=t||this._ignoreAccents[t]&&("keydown"==e.type?o.op("guard-ime-on",{}):o.op("guard-ime-off",{}),_(e))},this._downKeysIds=()=>{let e=Array.from(this._down);return this._mods.Meta.has("tb-meta")&&-1==e.indexOf(k)&&e.push(k),this._mods.Control.has("tb-ctrl")&&-1==e.indexOf(m)&&e.push(m),this._mods.Alt.has("tb-alt")&&-1==e.indexOf(p)&&e.push(p),this._mods.Shift.has("tb-shift")&&-1==e.indexOf(y)&&e.push(y),e},this._onKeyDown=e=>{if(e.isComposing)return void(this._lastKeyDownEvent=null);let t=e;if(229===e.keyCode){if(!this._lastKeyDownEvent)return;t=this._lastKeyDownEvent}else this._lastKeyDownEvent=e;if(this._captureMode){let a=u+"-"+t.code;return this._down.add(a),this._capture(),this._updateUIKitModsIfNeeded(t),void _(e)}let a=u(t);this._down.add(a);let o=this._bindings.match(this._downKeysIds());if(h.has(a)||this._down.delete(a),o)return this._execBinding(o,e),void _(e);let s=this._downMap[a],l=this._mod(this._modsMap[t.code]),n=!1;s&&((n=!(l&&this._mods[l].has(a)))||(this._handleKeyDownKey(s,e),n=!0)),l&&this._mods[l].add(a),this._upMap[a]&&this._up.add(a),this._updateUIKitModsIfNeeded(t),n||this._handleKeyDown(t.keyCode,e)},this._onBeforeInput=e=>{"dictation"!=this._lang?("insertText"==e.inputType&&this._output(e.data),_(e)):this._voiceString=e.data},this._onInput=e=>_(e),this._onKeyUp=e=>{if(this._lastKeyDownEvent=null,this._captureMode){let t=u(e)+"-"+e.code;return this._down.delete(t),this._capture(),this._updateUIKitModsIfNeeded(e),void _(e)}let t=u(e);this._down.delete(t);let a=this._mod(this._modsMap[e.code]);a&&this._mods[a].delete(t),this._updateUIKitModsIfNeeded(e);let o=this._upMap[t];o&&this._up.has(t)&&this._handleKeyDownKey(o,null),_(e)},this._handleKeyDown=(e,t)=>{let a={keyCode:e,key:"",code:"Unidentified"};t&&(a.code=t.code,a.key=t.key),this._handleKeyDownKey(a,t)},this._handleKeyDownKey=(e,t)=>{let a=this._keyMap,o=this._mods.Alt.size>0,s=this._mods.Control.size>0,l=this._mods.Meta.size>0,c=this._mods.Shift.size>0,h=e.code,y=e.key,m=function(e,t,a){return a?(a.ctrlKey&&(9==a.keyCode&&"KeyI"==a.code||8==a.keyCode&&"KeyH"==a.code||13==a.keyCode&&"KeyC"==a.code||13==a.keyCode&&"KeyM"==a.code||27==a.keyCode&&"BracketLeft"==a.code)&&(e.keyCode=t.keyCode(a.code)||e.keyCode),e):e}({key:y,code:h,keyCode:e.keyCode,alt:o,ctrl:s,meta:l,shift:c},this._keyMap,t),p=a.getKeyDef(m.keyCode);var k=null;function C(e){k=e;var t=p[e];return"function"==typeof t&&(t=t.call(a,m,p)),t===r&&"normal"!=e&&(t=C("normal")),t}let u;if(u=C(s?"ctrl":o?"alt":l?"meta":"normal"),!this.hasSelection&&(u===i||u===r&&!(s||o||l))){if(u===i&&!e.src)return;if(/^\[\w+\]$/.test(p.keyCap)&&!e.src)return void(this._removeAccents=!1);let a=this._removeAccents?function(e){let t=e.normalize("NFD").replace(/[\u0300-\u036f]/g,""),a=t.replace(/^[\u02c6\u00a8\u00b4\u02dc\u0060]/,"");return a&&(t=a),t}(y):y;return this._removeAccents=!1,this._capsLockRemapped||this._shiftRemapped?this._output(c?a.toUpperCase():a.toLowerCase()):this._output(a),void _(t)}if(this._removeAccents=!1,u===d&&(o=s=!1,"function"==typeof(u=p.normal)&&(u=u.call(a,m,p)),u==r&&2==p.keyCap.length&&(u=p.keyCap.substr(c?1:0,1))),_(t),u!==n&&!this.hasSelection)if(u===r||"string"==typeof u){if("ctrl"==k?s=!1:"alt"==k?o=!1:"meta"==k&&(l=!1),c=m.shift,(o||s||c||l)&&"string"==typeof u&&"["==u.substr(0,2)){let e=1;c&&(e+=1),o&&(e+=2),s&&(e+=4),l&&(e+=8);let t=";"+e;u=3==u.length?"[1"+t+u.substr(2,1):u.substr(0,u.length-1)+t+u.substr(u.length-1)}else{if(u===r&&(u=p.keyCap.substr(c?1:0,1),s)){let e=p.keyCap.substr(0,1).charCodeAt(0);e>=64&&e<=95&&(u=String.fromCharCode(e-64))}let e=u.toString();if(o&&"8-bit"==this._altSendsWhat&&1==e.length){let t=e.charCodeAt(0)+128;u=String.fromCharCode(t)}(o&&"escape"==this._altSendsWhat||l&&this._metaSendsEscape)&&(u=""+e)}"string"==typeof u?this._output(u):console.warn("action is not a string",u)}else console.log("Invalid action: "+JSON.stringify(u))},this._onIME=e=>{let t=e.type,a=e.data||"";o.op("ime",{type:t,data:a}),"compositionend"==t&&this._output(a)},this._output=e=>{this._up.clear(),this.element.value=" ",this.element.selectionStart=1,this.element.selectionEnd=1,e&&o.op("out",{data:e})},this._stateReset=()=>{this._down.clear(),this._up.clear(),this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set},this.element.value=" ",this.element.selectionStart=1,this.element.selectionEnd=1},this._capture=()=>o.op("capture",{keyIds:this._down.values}),this._configKey=e=>{let t=e.code,a=c(e.down);a&&(this._downMap[t.id]=a),this._mod(e.mod)&&(this._modsMap[t.code]=e.mod);let o=c(e.up);o&&(this._upMap[t.id]=o),"AltRight"!=t.code&&"AltLeft"!=t.code||(this._ignoreAccents[t.code]=e.ignoreAccents)},this._config=e=>{this._reset(),this._bindings.reset(),this._configKey(e.capsLock),this._configKey(e.command.left),this._configKey(e.command.right),this._configKey(e.control.left),this._configKey(e.control.right),this._configKey(e.option.left),this._configKey(e.option.right),this._configKey(e.shift.left),this._configKey(e.shift.right),this._bindings.expandFn(e.fn),this._bindings.expandCursor(e.cursor);for(let t of e.shortcuts){let e={keys:this._keysFromShortcut(t.input,t.modifiers),action:t.action,shiftLoc:0,controlLoc:0,optionLoc:0,commandLoc:0};this._bindings.expandBinding(e)}},this._toggleCaptureMode=e=>this._captureMode=!!e,this._onToolbarMods=e=>{let t=s.UIKitFlagsToObject(e);t.alt?this._mods.Alt.add("tb-alt"):this._mods.Alt.delete("tb-alt"),t.ctrl?this._mods.Control.add("tb-ctrl"):this._mods.Control.delete("tb-ctrl"),t.shift?this._mods.Shift.add("tb-shift"):this._mods.Shift.delete("tb-shift"),t.meta?this._mods.Meta.add("tb-meta"):this._mods.Meta.delete("tb-meta")},this._execPress=(e,t)=>{let a=e.split(/:/g),o=this._mods;this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set};let l=s.UIKitFlagsToObject(parseInt(a[0],10));l.shift&&this._mods.Shift.add("tb-shift"),l.ctrl&&this._mods.Control.add("tb-ctrl"),l.alt&&this._mods.Alt.add("tb-alt"),l.meta&&this._mods.Meta.add("tb-meta");let n={keyCode:parseInt(a[1],10),key:a[3]||"",code:"",src:"toolbar"};if(!t){let e=n.keyCode+":"+a[2];this._down.add(e);let t=this._bindings.match(this._downKeysIds());if(this._down.delete(e),t)return this._execBinding(t,null),void(this._mods=o)}this._handleKeyDownKey(n,t),this._mods=o},this.onKB=(e,t)=>{switch(e){case"mods-down":this._handleCapsLockDown(!0);break;case"mods-up":this._handleCapsLockDown(!1);break;case"lang":this._handleLang(t);break;case"guard-up":this._handleGuard(!0,t);break;case"guard-down":this._handleGuard(!1,t);break;case"selection":this.hasSelection=t;break;case"capture":this._toggleCaptureMode(t);break;case"toolbar-mods":this._onToolbarMods(t);break;case"toolbar-press":this._execPress(t,null);break;case"state-reset":this._stateReset();break;case"focus":this.focus(t);break;case"config":this._config(t)}};let e=this.element;e.setAttribute("autocomplete","off"),e.setAttribute("spellcheck","false"),e.setAttribute("autocorrect","off"),e.setAttribute("autocapitalize","none"),e.setAttribute("autofocus","true"),e.value=" ",e.addEventListener("keydown",this._onKeyDown),e.addEventListener("keyup",this._onKeyUp),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),e.addEventListener("compositionstart",this._onIME),e.addEventListener("compositionupdate",this._onIME),e.addEventListener("compositionend",this._onIME),e.addEventListener("beforeinput",this._onBeforeInput),e.addEventListener("input",this._onInput),this._capsLockRemapped=null!=this._modsMap.CapsLock||null!=this._downMap[C]||null!=this._upMap[C],this._shiftRemapped=null!=this._modsMap.Shift||"Shift"!==this._modsMap.Shift}_mod(e){switch(e){case"Escape":return this._altSendsWhat="escape","Alt";case"8-bit":return this._altSendsWhat="8-bit","Alt";case"Shift":return"Shift";case"Control":return"Control";case"Meta":return this._metaSendsEscape=!1,"Meta";case"Meta-Escape":return this._metaSendsEscape=!0,"Meta";default:return null}}focus(e){e?this.element.focus():this.element.blur()}ready(){o.op("ready",{})}_handleCapsLockDown(e){if(this._captureMode)return e?this._down.delete(C+"-capslock"):this._down.add(C+"-capslock"),void this._capture();let t=this._modsMap.CapsLock;if(e){this._down.add(C);let e=this._downMap[C];return!e||t&&this._mods[t].has(C)||this._handleKeyDownKey(e,null),t&&this._mods[t].add(C),void(this._upMap[C]&&this._up.add(C))}this._down.delete(C),t&&this._mods[t].delete(C);let a=this._upMap[C];a&&this._up.has(C)&&this._handleKeyDownKey(a,null)}_handleLang(e){this._lang=e,this._stateReset()}_handleGuard(e,t){this.element.value=" ";let a=this._keyMap.keyCode(t),o=`${a}:0`;this._captureMode&&(o+="-Key"+t.toUpperCase()),e?this._down.delete(o):this._down.add(o),this._captureMode?this._capture():e?this._removeAccents=!0:this._handleKeyDown(a,null)}_reset(){this.hasSelection=!1,this._removeAccents=!1,this._modsMap={},this._downMap={},this._upMap={},this._up.clear(),this._down.clear(),this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set},this._ignoreAccents={AltLeft:!0,AltRight:!0}}_keysFromShortcut(e,t){var a=[];let o=s.UIKitFlagsToObject(t);o.shift&&a.push(y),o.alt&&a.push(p),o.ctrl&&a.push(m),o.meta&&a.push(k);let l=this._keyMap.keyCode(e);return l?a.push(l+":0"):a.push("0:0-"+e),a}_execBinding(e,t){switch(e.type){case"hex":this._output(function(e){let t="",a=e.length;for(let o=0;o<a;o+=2)t+=String.fromCharCode(parseInt(e.substr(o,2),16));return t}(e.value));break;case"command":o.op("command",{command:e.value});break;case"press":this._execPress(`${e.mods}:${e.key.id}`,t)}}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=Symbol("CANCEL"),s=Symbol("DEFAULT"),l=Symbol("PASS"),n=Symbol("STRIP");function r(e,t){let a=Object.assign(Object.assign({},t),{op:e});window.webkit.messageHandlers._kb.postMessage(a)}t.KBActions={CANCEL:o,DEFAULT:s,PASS:l,STRIP:n},t.op=r;const i="",d="[",c="O",h="",y=e=>String.fromCharCode(e.charCodeAt(0)-64),m={keyCode:0,keyCap:"[Unidentified]",normal:l,ctrl:l,alt:l,meta:l};t.default=class{constructor(e){this._defs={},this._reverseDefs={},this._onCtrlNum=(e,t)=>{switch(t.keyCap.substr(0,1)){case"1":return"1";case"2":return y("@");case"3":return y("[");case"4":return y("\\");case"5":return y("]");case"6":return y("^");case"7":return y("_");case"8":return h;case"9":return"9";default:return l}},this._onAltNum=(e,t)=>s,this._onMetaNum=(e,t)=>s,this._onZoom=(e,t)=>o,this._onSel=(e,t)=>{if("[ArrowLeft]"==t.keyCap||"hH"==t.keyCap){r("selection",{dir:"left",gran:e.shift?"word":"character"})}else if("[ArrowRight]"==t.keyCap||"lL"==t.keyCap){r("selection",{dir:"right",gran:e.shift?"word":"character"})}else"[ArrowUp]"==t.keyCap||"kK"==t.keyCap?r("selection",{dir:"left",gran:"line"}):"[ArrowDown]"==t.keyCap||"jJ"==t.keyCap?r("selection",{dir:"right",gran:"line"}):"oO"==t.keyCap||"xX"==t.keyCap?r("selection",{command:"change"}):"nN"==t.keyCap&&e.ctrl?r("selection",{dir:"right",gran:"line"}):"pP"==t.keyCap?e.ctrl?r("selection",{dir:"left",gran:"line"}):e.shift||e.alt||e.meta||r("selection",{command:"paste"}):"bB"==t.keyCap?e.ctrl?r("selection",{dir:"left",gran:"character"}):(e.alt,r("selection",{dir:"left",gran:"word"})):"wW"==t.keyCap?e.alt?r("selection",{command:"copy"}):r("selection",{dir:"right",gran:"word"}):"fF"==t.keyCap?e.ctrl?r("selection",{dir:"right",gran:"character"}):e.alt&&r("selection",{dir:"right",gran:"word"}):"yY"==t.keyCap?r("selection",{command:"copy"}):"[Escape]"==t.keyCap&&r("selection",{command:"cancel"});return o},this._keyboard=e,this.reset()}getKeyDef(e){var t=this._defs[e];return t||(console.warn(`No definition for (keyCode ${e})`),t=m,this.addKeyDef(e,t),t)}addKeyDef(e,t){if(e in this._defs&&console.warn("Dup keyCode: ",e),this._defs[e]=t,/^\[\w+\]$/.test(t.keyCap)){let e=t.keyCap.replace(/\W/g,"");this._reverseDefs[e]=t}else{var a=t.keyCap[0];this._reverseDefs[a]=t,/0-9/.test(a)?this._reverseDefs["Digit"+a]=t:/a-z/.test(a)&&(this._reverseDefs["Key"+a.toUpperCase()]=t)}}reset(){this._defs={};const e=(e,t,a)=>"function"==typeof e?e.call(this,t,a):e,t=(t,a)=>(o,s)=>{let l=o.shift||o.ctrl||o.alt||o.meta?a:t;return e(l,o,s)},a=(t,a)=>(o,s)=>{let l=o.shift?a:t;return o.shift=!1,e(l,o,s)},o=(e,t)=>e,r=(t,a)=>(o,s)=>{let l=o.alt?t:a;return e(l,o,s)},p=(e,t)=>t,k=t=>(a,o)=>{let s=this._keyboard.hasSelection?this._onSel:t;return e(s,a,o)},C=e=>this.addKeyDef(e.keyCode,e);C(m),C({keyCode:27,keyCap:"[Escape]",normal:k(i),ctrl:s,alt:s,meta:s}),C({keyCode:112,keyCap:"[F1]",normal:t(c+"P",d+"P"),ctrl:s,alt:d+"23~",meta:s}),C({keyCode:113,keyCap:"[F2]",normal:t(c+"Q",d+"Q"),ctrl:s,alt:d+"24~",meta:s}),C({keyCode:114,keyCap:"[F3]",normal:t(c+"R",d+"R"),ctrl:s,alt:d+"25~",meta:s}),C({keyCode:115,keyCap:"[F4]",normal:t(c+"S",d+"S"),ctrl:s,alt:d+"26~",meta:s}),C({keyCode:116,keyCap:"[F5]",normal:d+"15~",ctrl:s,alt:d+"28~",meta:s}),C({keyCode:117,keyCap:"[F6]",normal:d+"17~",ctrl:s,alt:d+"29~",meta:s}),C({keyCode:118,keyCap:"[F7]",normal:d+"18~",ctrl:s,alt:d+"31~",meta:s}),C({keyCode:119,keyCap:"[F8]",normal:d+"19~",ctrl:s,alt:d+"32~",meta:s}),C({keyCode:120,keyCap:"[F9]",normal:d+"20~",ctrl:s,alt:d+"33~",meta:s}),C({keyCode:121,keyCap:"[F10]",normal:d+"21~",ctrl:s,alt:d+"34~",meta:s}),C({keyCode:122,keyCap:"[F11]",normal:d+"23~",ctrl:s,alt:d+"42~",meta:s}),C({keyCode:123,keyCap:"[F12]",normal:d+"24~",ctrl:s,alt:d+"43~",meta:s});const u=this._onCtrlNum,_=this._onAltNum,f=this._onMetaNum,g=this._onZoom;C({keyCode:192,keyCap:"`~",normal:s,ctrl:a(y("@"),y("^")),alt:s,meta:l}),C({keyCode:49,keyCap:"1!",normal:s,ctrl:u,alt:_,meta:f}),C({keyCode:50,keyCap:"2@",normal:s,ctrl:u,alt:_,meta:f}),C({keyCode:51,keyCap:"3#",normal:s,ctrl:u,alt:_,meta:f}),C({keyCode:52,keyCap:"4$",normal:s,ctrl:u,alt:_,meta:f}),C({keyCode:53,keyCap:"5%",normal:s,ctrl:u,alt:_,meta:f}),C({keyCode:54,keyCap:"6^",normal:s,ctrl:u,alt:_,meta:f}),C({keyCode:55,keyCap:"7&",normal:s,ctrl:u,alt:_,meta:f}),C({keyCode:56,keyCap:"8*",normal:s,ctrl:u,alt:_,meta:f}),C({keyCode:57,keyCap:"9(",normal:s,ctrl:u,alt:_,meta:f}),C({keyCode:48,keyCap:"0)",normal:s,ctrl:g,alt:_,meta:g}),C({keyCode:189,keyCap:"-_",normal:s,ctrl:a(g,y("_")),alt:s,meta:g}),C({keyCode:187,keyCap:"=+",normal:s,ctrl:g,alt:s,meta:g}),C({keyCode:8,keyCap:"[Backspace]",normal:o(h),ctrl:o("\b"),alt:s,meta:s}),C({keyCode:9,keyCap:"[Tab]",normal:a("\t",d+"Z"),ctrl:n,alt:l,meta:s}),C({keyCode:81,keyCap:"qQ",normal:s,ctrl:y("Q"),alt:s,meta:s}),C({keyCode:87,keyCap:"wW",normal:k(s),ctrl:y("W"),alt:k(s),meta:s}),C({keyCode:69,keyCap:"eE",normal:s,ctrl:y("E"),alt:s,meta:s}),C({keyCode:82,keyCap:"rR",normal:s,ctrl:y("R"),alt:s,meta:s}),C({keyCode:84,keyCap:"tT",normal:s,ctrl:y("T"),alt:s,meta:s}),C({keyCode:89,keyCap:"yY",normal:k(s),ctrl:y("Y"),alt:s,meta:s}),C({keyCode:85,keyCap:"uU",normal:s,ctrl:y("U"),alt:s,meta:s}),C({keyCode:73,keyCap:"iI",normal:s,ctrl:y("I"),alt:s,meta:s}),C({keyCode:79,keyCap:"oO",normal:k(s),ctrl:y("O"),alt:s,meta:s}),C({keyCode:80,keyCap:"pP",normal:k(s),ctrl:k(y("P")),alt:s,meta:s}),C({keyCode:219,keyCap:"[{",normal:s,ctrl:y("["),alt:s,meta:s}),C({keyCode:221,keyCap:"]}",normal:s,ctrl:y("]"),alt:s,meta:s}),C({keyCode:220,keyCap:"\\|",normal:s,ctrl:y("\\"),alt:s,meta:s}),C({keyCode:20,keyCap:"[CapsLock]",normal:l,ctrl:l,alt:l,meta:s}),C({keyCode:65,keyCap:"aA",normal:s,ctrl:y("A"),alt:s,meta:s}),C({keyCode:83,keyCap:"sS",normal:s,ctrl:y("S"),alt:s,meta:s}),C({keyCode:68,keyCap:"dD",normal:s,ctrl:y("D"),alt:s,meta:s}),C({keyCode:70,keyCap:"fF",normal:s,ctrl:k(y("F")),alt:k(s),meta:s}),C({keyCode:71,keyCap:"gG",normal:s,ctrl:y("G"),alt:s,meta:s}),C({keyCode:72,keyCap:"hH",normal:k(s),ctrl:y("H"),alt:s,meta:s}),C({keyCode:74,keyCap:"jJ",normal:k(s),ctrl:y("J"),alt:s,meta:s}),C({keyCode:75,keyCap:"kK",normal:k(s),ctrl:y("K"),alt:s,meta:s}),C({keyCode:76,keyCap:"lL",normal:k(s),ctrl:y("L"),alt:s,meta:s}),C({keyCode:186,keyCap:";:",normal:s,ctrl:n,alt:s,meta:s}),C({keyCode:222,keyCap:"'\"",normal:s,ctrl:n,alt:s,meta:s}),C({keyCode:13,keyCap:"[Enter]",normal:"\r",ctrl:s,alt:s,meta:s}),C({keyCode:16,keyCap:"[Shift]",normal:l,ctrl:l,alt:l,meta:s}),C({keyCode:90,keyCap:"zZ",normal:s,ctrl:y("Z"),alt:s,meta:s}),C({keyCode:88,keyCap:"xX",normal:k(s),ctrl:y("X"),alt:s,meta:s}),C({keyCode:67,keyCap:"cC",normal:s,ctrl:y("C"),alt:s,meta:l}),C({keyCode:86,keyCap:"vV",normal:s,ctrl:y("V"),alt:s,meta:l}),C({keyCode:66,keyCap:"bB",normal:k(s),ctrl:k(y("B")),alt:k(s),meta:s}),C({keyCode:78,keyCap:"nN",normal:s,ctrl:k(y("N")),alt:s,meta:s}),C({keyCode:77,keyCap:"mM",normal:s,ctrl:y("M"),alt:s,meta:s}),C({keyCode:188,keyCap:",<",normal:s,ctrl:r(n,l),alt:s,meta:s}),C({keyCode:190,keyCap:".>",normal:s,ctrl:r(n,l),alt:s,meta:s}),C({keyCode:191,keyCap:"/?",normal:s,ctrl:a(y("_"),y("?")),alt:s,meta:s}),C({keyCode:17,keyCap:"[Control]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:18,keyCap:"[Alt]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:91,keyCap:"[Meta]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:32,keyCap:" ",normal:s,ctrl:y("@"),alt:s,meta:s}),C({keyCode:93,keyCap:"[Meta]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:42,keyCap:"[PRTSCR]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:145,keyCap:"[SCRLK]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:19,keyCap:"[BREAK]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:45,keyCap:"[INSERT]",normal:d+"2~",ctrl:s,alt:s,meta:s}),C({keyCode:36,keyCap:"[HOME]",normal:i+"OH",ctrl:s,alt:s,meta:s}),C({keyCode:33,keyCap:"[PGUP]",normal:d+"5~",ctrl:s,alt:s,meta:s}),C({keyCode:46,keyCap:"[DEL]",normal:d+"3~",ctrl:s,alt:s,meta:s}),C({keyCode:35,keyCap:"[END]",normal:i+"OF",ctrl:s,alt:s,meta:s}),C({keyCode:34,keyCap:"[PGDOWN]",normal:d+"6~",ctrl:s,alt:s,meta:s}),C({keyCode:38,keyCap:"[ArrowUp]",normal:k(p(0,c+"A")),ctrl:s,alt:s,meta:s}),C({keyCode:40,keyCap:"[ArrowDown]",normal:k(p(0,c+"B")),ctrl:s,alt:s,meta:s}),C({keyCode:39,keyCap:"[ArrowRight]",normal:k(p(0,c+"C")),ctrl:s,alt:s,meta:s}),C({keyCode:37,keyCap:"[ArrowLeft]",normal:k(p(0,c+"D")),ctrl:s,alt:s,meta:s}),C({keyCode:144,keyCap:"[NUMLOCK]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:12,keyCap:"[CLEAR]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:96,keyCap:"[KP0]",normal:s,ctrl:s,alt:s,meta:s}),C({keyCode:97,keyCap:"[KP1]",normal:s,ctrl:s,alt:s,meta:s}),C({keyCode:98,keyCap:"[KP2]",normal:s,ctrl:s,alt:s,meta:s}),C({keyCode:99,keyCap:"[KP3]",normal:s,ctrl:s,alt:s,meta:s}),C({keyCode:100,keyCap:"[KP4]",normal:s,ctrl:s,alt:s,meta:s}),C({keyCode:101,keyCap:"[KP5]",normal:s,ctrl:s,alt:s,meta:s}),C({keyCode:102,keyCap:"[KP6]",normal:s,ctrl:s,alt:s,meta:s}),C({keyCode:103,keyCap:"[KP7]",normal:s,ctrl:s,alt:s,meta:s}),C({keyCode:104,keyCap:"[KP8]",normal:s,ctrl:s,alt:s,meta:s}),C({keyCode:105,keyCap:"[KP9]",normal:s,ctrl:s,alt:s,meta:s}),C({keyCode:107,keyCap:"[KP+]",normal:s,ctrl:g,alt:s,meta:g}),C({keyCode:109,keyCap:"[KP-]",normal:s,ctrl:g,alt:s,meta:g}),C({keyCode:106,keyCap:"[KP*]",normal:s,ctrl:s,alt:s,meta:s}),C({keyCode:111,keyCap:"[KP/]",normal:s,ctrl:s,alt:s,meta:s}),C({keyCode:110,keyCap:"[KP.]",normal:s,ctrl:s,alt:s,meta:s}),this._reverseDefs.BracketLeft=this._defs[229],this._reverseDefs.BracketRight=this._defs[221],this._reverseDefs.Space=this._defs[32],this._reverseDefs.Backqoute=this._defs[192],this._reverseDefs.Slash=this._defs[191]}keyCode(e){let t=this._reverseDefs[e];return t?t.keyCode:0}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=65536,s=1<<17,l=1<<18,n=1<<19,r=1<<20;t.toUIKitFlags=function(e,t=!0){let a=0;return e.shiftKey&&(a|=s),e.ctrlKey&&(a|=l),e.altKey&&(a|=n),e.metaKey&&(a|=r),t&&(a|=o),a},t.UIKitFlagsToObject=function(e){return{shift:(e&s)==s,alt:(e&n)==n,ctrl:(e&l)==l,meta:(e&r)==r}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=class{constructor(){this._stack=[],this._map={},this.expandFn=e=>{if(0==e.keys.length)return;let t=[{keyCode:121,key:"F10",code:"F10",id:"121:0"},{keyCode:112,key:"F1",code:"F1",id:"112:0"},{keyCode:113,key:"F2",code:"F2",id:"113:0"},{keyCode:114,key:"F3",code:"F3",id:"114:0"},{keyCode:115,key:"F4",code:"F4",id:"115:0"},{keyCode:116,key:"F5",code:"F5",id:"116:0"},{keyCode:117,key:"F6",code:"F6",id:"117:0"},{keyCode:118,key:"F7",code:"F7",id:"118:0"},{keyCode:119,key:"F8",code:"F8",id:"119:0"},{keyCode:120,key:"F9",code:"F9",id:"120:0"}],a=e.keys.slice();for(var o=0;o<10;o++){let s=o+48+":0",l=t[o];e.keys=a.slice(),e.keys.push(s),e.action={type:"press",key:l,mods:0},this.expandBinding(e)}},this.expandCursor=e=>{if(0==e.keys.length)return;let t=[{keyCode:36,key:"HOME",code:"HOME",id:"36:0"},{keyCode:33,key:"PGUP",code:"PGUP",id:"33:0"},{keyCode:35,key:"END",code:"END",id:"35:0"},{keyCode:34,key:"PGDOWN",code:"PGDOWN",id:"34:0"}],a=["37:0","38:0","39:0","40:0"],o=e.keys.slice();for(var s=0;s<a.length;s++){let l=a[s],n=t[s];e.keys=o.slice(),e.keys.push(l),e.action={type:"press",key:n,mods:0},this.expandBinding(e)}},this.expandBinding=e=>{var t=e.keys.map(e=>e.split("-")[0]);if(0==t.length)return;var a=[t.sort()],o=0;var s=[{idLeft:"16:1",idRight:"16:2",loc:e.shiftLoc},{idLeft:"17:1",idRight:"17:2",loc:e.controlLoc},{idLeft:"18:1",idRight:"18:2",loc:e.optionLoc},{idLeft:"91:1",idRight:"93:0",loc:e.commandLoc}];for(let e of s)for(o=a.length-1;o>=0;o--){var l=a[o];let t=l.indexOf(e.idLeft);if(t<0&&(t=l.indexOf(e.idRight)),t<0)continue;if(1==e.loc){l[t]=e.idLeft;continue}if(2==e.loc){l[t]=e.idRight;continue}l[t]=e.idLeft;let s=l.slice();s[t]=e.idRight,a.push(s)}for(let t of a){let a=t.sort().join(":");this._map[a]=e.action}}}reset(){this._stack=[],this._map={}}match(e){let t=e.sort().join(":");return this._map[t]}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,