!function(e){var t={};function a(o){if(t[o])return t[o].exports;var l=t[o]={i:o,l:!1,exports:{}};return e[o].call(l.exports,l,l.exports,a),l.l=!0,l.exports}a.m=e,a.c=t,a.d=function(e,t,o){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(a.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)a.d(o,l,function(t){return e[t]}.bind(null,l));return o},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=0)}([function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=new(a(1).default);document.body.append(o.element),o.focus(!0),window._onKB=o.onKB,window._kb=o,o.ready()},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=a(2),l=a(3),n=o.KBActions.CANCEL,r=o.KBActions.DEFAULT,s=o.KBActions.PASS,i=o.KBActions.STRIP;function d(e){switch(e){case"escape":return{keyCode:27,code:"[ESC]",key:"[ESC]"};case"tab":return{keyCode:9,code:"[TAB]",key:"[TAB]"};default:return null}}function y(e){return`${e.keyCode}:${e.code}:${e.location}:${e.key}`}function c(e,t){let a=Object.assign(Object.assign({},t),{op:e});window.webkit.messageHandlers._kb.postMessage(a)}function C(e){e&&(e.preventDefault(),e.stopPropagation())}const m={KeyC:67,c:67,KeyI:73,i:73,KeyH:72,h:72,KeyM:77,m:77,BracketLeft:219,"[":77,KeyN:78,n:78,KeyU:85,u:85,KeyE:69,e:69};const k="20:CapsLock:0:CapsLock";t.default=class{constructor(){this.element=document.createElement("input"),this._keyMap=new o.default(this),this._lang="en",this._lastKeyDownEvent=null,this._capsLockRemapped=!1,this._shiftRemapped=!1,this._metaSendsEscape=!0,this._altSendsWhat="escape",this._ignoreAccents={AltLeft:!0,AltRight:!0},this._modsMap={ShiftLeft:"Shift",ShiftRight:"Shift",AltLeft:"Escape",AltRight:"Escape",MetaLeft:"Meta",MetaRight:"Meta",ControlLeft:"Control",ControlRight:"Control",CapsLock:""},this._downMap={},this._upMap={},this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set},this._up=new Set,this._down=new Set,this._voiceString="",this._updateUIKitModsIfNeeded=e=>{let t=e.code;if(this._capsLockRemapped){let a;c("mods",{mods:a="keyup"==e.type&&"CapsLock"==t?0:l.default(e)})}"AltLeft"!=t&&"AltRight"!=t||this._ignoreAccents[t]&&("keydown"==e.type?c("guard-ime-on",{}):c("guard-ime-off",{}),C(e))},this._onKeyDown=e=>{if(e.isComposing)return void(this._lastKeyDownEvent=null);let t=e;if(229===e.keyCode){if(!this._lastKeyDownEvent)return;t=this._lastKeyDownEvent}else this._lastKeyDownEvent=e;let a=y(t);this._down.add(a);let o=this._downMap[a],l=this._mod(this._modsMap[t.code]),n=!1;o&&((n=!(l&&this._mods[l].has(a)))||(this._handleKeyDownKey(o,e),n=!0)),l&&this._mods[l].add(a),this._upMap[a]&&this._up.add(a),this._updateUIKitModsIfNeeded(t),n||this._handleKeyDown(t.keyCode,e)},this._onBeforeInput=e=>{"dictation"!=this._lang?("insertText"==e.inputType&&this._output(e.data),C(e)):this._voiceString=e.data},this._onInput=e=>C(e),this._onKeyUp=e=>{this._lastKeyDownEvent=null;let t=y(e);this._down.delete(t);let a=this._mod(this._modsMap[e.code]);a&&this._mods[a].delete(t),this._updateUIKitModsIfNeeded(e);let o=this._upMap[t];o&&this._up.has(t)&&this._handleKeyDownKey(o,null),C(e)},this._handleKeyDown=(e,t)=>{let a={keyCode:e,key:"",code:"Unidentified"};t&&(a.code=t.code,a.key=t.key),this._handleKeyDownKey(a,t)},this._handleKeyDownKey=(e,t)=>{let a=this._keyMap,o=this._mods.Alt.size>0,l=this._mods.Control.size>0,d=this._mods.Meta.size>0,y=this._mods.Shift.size>0,c=e.code,k=e.key,p=function(e,t){return t?(t.ctrlKey&&(9==t.keyCode&&"KeyI"==t.code||8==t.keyCode&&"KeyH"==t.code||13==t.keyCode&&"KeyC"==t.code||13==t.keyCode&&"KeyM"==t.code||27==t.keyCode&&"BracketLeft"==t.code)&&(e.keyCode=m[t.code]||e.keyCode),e):e}({key:k,code:c,keyCode:e.keyCode,alt:o,ctrl:l,meta:d,shift:y},t),h=a.getKeyDef(p.keyCode);var u,_=null;function f(e){_=e;var t=h[e];return"function"==typeof t&&(t=t.call(a,p,h)),t===r&&"normal"!=e&&(t=f("normal")),t}if((u=f(l?"ctrl":o?"alt":d?"meta":"normal"))===s||u===r&&!(l||o||d)){if(u===s)return;if(/^\[\w+\]$/.test(h.keyCap))return;let e=function(e){let t=e.normalize("NFD").replace(/[\u0300-\u036f]/g,""),a=t.replace(/^[\u02c6\u00a8\u00b4\u02dc\u0060]/,"");return a&&(t=a),t}(k);return this._capsLockRemapped||this._shiftRemapped?this._output(y?e.toUpperCase():e.toLowerCase()):this._output(e),void C(t)}if(u===i&&(o=l=!1,"function"==typeof(u=h.normal)&&(u=u.call(a,p,h)),u==r&&2==h.keyCap.length&&(u=h.keyCap.substr(y?1:0,1))),C(t),u!==n)if(u===r||"string"==typeof u){if("ctrl"==_?l=!1:"alt"==_?o=!1:"meta"==_&&(d=!1),y=p.shift,(o||l||y||d)&&"string"==typeof u&&"["==u.substr(0,2)){let e=1;y&&(e+=1),o&&(e+=2),l&&(e+=4),d&&(e+=8);let t=";"+e;u=3==u.length?"[1"+t+u.substr(2,1):u.substr(0,u.length-1)+t+u.substr(u.length-1)}else{if(u===r&&(u=h.keyCap.substr(y?1:0,1),l)){let e=h.keyCap.substr(0,1).charCodeAt(0);e>=64&&e<=95&&(u=String.fromCharCode(e-64))}let e=u.toString();if(o&&"8-bit"==this._altSendsWhat&&1==e.length){let t=e.charCodeAt(0)+128;u=String.fromCharCode(t)}(o&&"escape"==this._altSendsWhat||d&&this._metaSendsEscape)&&(u=""+e)}"string"==typeof u?this._output(u):console.warn("action is not a string",u)}else console.log("Invalid action: "+JSON.stringify(u))},this._onIME=e=>{let t=e.type,a=e.data||"";c("ime",{type:t,data:a}),"compositionend"==t&&this._output(a)},this._output=e=>{this._up.clear(),e&&c("out",{data:e})},this._configKey=e=>{let t=e.code,a=d(e.down);a&&(this._upMap[t.id]=a),this._mod(e.mod)&&(this._modsMap[t.code]=e.mod);let o=d(e.up);o&&(this._upMap[t.id]=o),"AltRight"!=t.code&&"AltLeft"!=t.code||(this._ignoreAccents[t.code]=e.ignoreAccents)},this._config=e=>{this._reset(),this._configKey(e.capsLock),this._configKey(e.command.left),this._configKey(e.command.right),this._configKey(e.control.left),this._configKey(e.control.right),this._configKey(e.option.left),this._configKey(e.option.right),this._configKey(e.shift.left),this._configKey(e.shift.right)},this.onKB=(e,t)=>{switch(e){case"mods-down":this._handleCapsLockDown(!0);break;case"mods-up":this._handleCapsLockDown(!1);break;case"lang":this._handleLang(t);break;case"guard-up":this._handleGuard(!0,t);break;case"guard-down":this._handleGuard(!1,t);break;case"focus":this.focus(t);break;case"config":this._config(t)}};let e=this.element;e.setAttribute("autocomplete","off"),e.setAttribute("spellcheck","false"),e.setAttribute("autocorrect","off"),e.setAttribute("autocapitalize","none"),e.setAttribute("autofocus","true"),e.value=" ",e.addEventListener("keydown",this._onKeyDown),e.addEventListener("keyup",this._onKeyUp),e.addEventListener("compositionstart",this._onIME),e.addEventListener("compositionupdate",this._onIME),e.addEventListener("compositionend",this._onIME),e.addEventListener("beforeinput",this._onBeforeInput),e.addEventListener("input",this._onInput),this._capsLockRemapped=null!=this._modsMap.CapsLock||null!=this._downMap[k]||null!=this._upMap[k],this._shiftRemapped=null!=this._modsMap.Shift||"Shift"!==this._modsMap.Shift}_mod(e){switch(e){case"Escape":return this._altSendsWhat="escape","Alt";case"8-bit":return this._altSendsWhat="8-bit","Alt";case"Shift":return"Shift";case"Control":return"Control";case"Meta":return this._metaSendsEscape=!1,"Meta";case"Meta-Escape":return this._metaSendsEscape=!0,"Meta";default:return null}}focus(e){e?this.element.focus():this.element.blur()}ready(){c("ready",{})}_handleCapsLockDown(e){let t=this._modsMap.CapsLock;if(e){this._down.add(k);let e=this._downMap[k];return!e||t&&this._mods[t].has(k)||this._handleKeyDownKey(e,null),t&&this._mods[t].add(k),void(this._upMap[k]&&this._up.add(k))}this._down.delete(k),t&&this._mods[t].delete(k);let a=this._upMap[k];a&&this._up.has(k)&&this._handleKeyDownKey(a,null)}_handleLang(e){this._down.clear(),this._up.clear(),this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set},this.element.value=" ",this._lang=e}_handleGuard(e,t){if(this.element.value=" ",e)return;let a=m[t||""]||0;this._handleKeyDown(a,null)}_reset(){this._modsMap={},this._downMap={},this._upMap={},this._up.clear(),this._down.clear(),this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set},this._ignoreAccents={AltLeft:!0,AltRight:!0}}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=Symbol("CANCEL"),l=Symbol("DEFAULT"),n=Symbol("PASS"),r=Symbol("STRIP");t.KBActions={CANCEL:o,DEFAULT:l,PASS:n,STRIP:r},t.ESC="",t.CSI="[",t.SS3="O",t.DEL="";const s=e=>String.fromCharCode(e.charCodeAt(0)-64),i={keyCode:0,keyCap:"[UNKNOWN]",normal:n,ctrl:n,alt:n,meta:n};t.default=class{constructor(e){this._defs={},this._onCtrlNum=(e,a)=>{switch(a.keyCap.substr(0,1)){case"1":return"1";case"2":return s("@");case"3":return s("[");case"4":return s("\\");case"5":return s("]");case"6":return s("^");case"7":return s("_");case"8":return t.DEL;case"9":return"9";default:return n}},this._onAltNum=(e,t)=>l,this._onMetaNum=(e,t)=>l,this._onZoom=(e,t)=>l,this._keyboard=e,this.reset()}getKeyDef(e){var t=this._defs[e];return t||(console.warn(`No definition for (keyCode ${e})`),t=i,this.addKeyDef(e,t),t)}addKeyDef(e,t){e in this._defs&&console.warn("Dup keyCode: ",e),this._defs[e]=t}reset(){this._defs={};const e=(e,t,a)=>"function"==typeof e?e.call(this,t,a):e,a=(t,a)=>(o,l)=>{let n=o.shift||o.ctrl||o.alt||o.meta?a:t;return e(n,o,l)},o=(t,a)=>(o,l)=>{let n=o.shift?a:t;return o.shift=!1,e(n,o,l)},d=(e,t)=>e,y=(t,a)=>(o,l)=>{let n=o.alt?t:a;return e(n,o,l)},c=(e,t)=>e,C=e=>this.addKeyDef(e.keyCode,e);C(i),C({keyCode:27,keyCap:"[ESC]",normal:t.ESC,ctrl:l,alt:l,meta:l}),C({keyCode:112,keyCap:"[F1]",normal:a(t.SS3+"P",t.CSI+"P"),ctrl:l,alt:t.CSI+"23~",meta:l}),C({keyCode:113,keyCap:"[F2]",normal:a(t.SS3+"Q",t.CSI+"Q"),ctrl:l,alt:t.CSI+"24~",meta:l}),C({keyCode:114,keyCap:"[F3]",normal:a(t.SS3+"R",t.CSI+"R"),ctrl:l,alt:t.CSI+"25~",meta:l}),C({keyCode:115,keyCap:"[F4]",normal:a(t.SS3+"S",t.CSI+"S"),ctrl:l,alt:t.CSI+"26~",meta:l}),C({keyCode:116,keyCap:"[F5]",normal:t.CSI+"15~",ctrl:l,alt:t.CSI+"28~",meta:l}),C({keyCode:117,keyCap:"[F6]",normal:t.CSI+"17~",ctrl:l,alt:t.CSI+"29~",meta:l}),C({keyCode:118,keyCap:"[F7]",normal:t.CSI+"18~",ctrl:l,alt:t.CSI+"31~",meta:l}),C({keyCode:119,keyCap:"[F8]",normal:t.CSI+"19~",ctrl:l,alt:t.CSI+"32~",meta:l}),C({keyCode:120,keyCap:"[F9]",normal:t.CSI+"20~",ctrl:l,alt:t.CSI+"33~",meta:l}),C({keyCode:121,keyCap:"[F10]",normal:t.CSI+"21~",ctrl:l,alt:t.CSI+"34~",meta:l}),C({keyCode:122,keyCap:"[F11]",normal:t.CSI+"23~",ctrl:l,alt:t.CSI+"42~",meta:l}),C({keyCode:123,keyCap:"[F12]",normal:t.CSI+"24~",ctrl:l,alt:t.CSI+"43~",meta:l});const m=this._onCtrlNum,k=this._onAltNum,p=this._onMetaNum,h=this._onZoom;C({keyCode:192,keyCap:"`~",normal:l,ctrl:o(s("@"),s("^")),alt:l,meta:n}),C({keyCode:49,keyCap:"1!",normal:l,ctrl:m,alt:k,meta:p}),C({keyCode:50,keyCap:"2@",normal:l,ctrl:m,alt:k,meta:p}),C({keyCode:51,keyCap:"3#",normal:l,ctrl:m,alt:k,meta:p}),C({keyCode:52,keyCap:"4$",normal:l,ctrl:m,alt:k,meta:p}),C({keyCode:53,keyCap:"5%",normal:l,ctrl:m,alt:k,meta:p}),C({keyCode:54,keyCap:"6^",normal:l,ctrl:m,alt:k,meta:p}),C({keyCode:55,keyCap:"7&",normal:l,ctrl:m,alt:k,meta:p}),C({keyCode:56,keyCap:"8*",normal:l,ctrl:m,alt:k,meta:p}),C({keyCode:57,keyCap:"9(",normal:l,ctrl:m,alt:k,meta:p}),C({keyCode:48,keyCap:"0)",normal:l,ctrl:h,alt:k,meta:h}),C({keyCode:189,keyCap:"-_",normal:l,ctrl:h,alt:l,meta:h}),C({keyCode:187,keyCap:"=+",normal:l,ctrl:h,alt:l,meta:h}),C({keyCode:8,keyCap:"[BKSP]",normal:d(t.DEL),ctrl:d("\b",t.DEL),alt:l,meta:l}),C({keyCode:9,keyCap:"[TAB]",normal:o("\t",t.CSI+"Z"),ctrl:r,alt:n,meta:l}),C({keyCode:81,keyCap:"qQ",normal:l,ctrl:s("Q"),alt:l,meta:l}),C({keyCode:87,keyCap:"wW",normal:l,ctrl:s("W"),alt:l,meta:l}),C({keyCode:69,keyCap:"eE",normal:l,ctrl:s("E"),alt:l,meta:l}),C({keyCode:82,keyCap:"rR",normal:l,ctrl:s("R"),alt:l,meta:l}),C({keyCode:84,keyCap:"tT",normal:l,ctrl:s("T"),alt:l,meta:l}),C({keyCode:89,keyCap:"yY",normal:l,ctrl:s("Y"),alt:l,meta:l}),C({keyCode:85,keyCap:"uU",normal:l,ctrl:s("U"),alt:l,meta:l}),C({keyCode:73,keyCap:"iI",normal:l,ctrl:s("I"),alt:l,meta:l}),C({keyCode:79,keyCap:"oO",normal:l,ctrl:s("O"),alt:l,meta:l}),C({keyCode:80,keyCap:"pP",normal:l,ctrl:s("P"),alt:l,meta:l}),C({keyCode:219,keyCap:"[{",normal:l,ctrl:s("["),alt:l,meta:l}),C({keyCode:221,keyCap:"]}",normal:l,ctrl:s("]"),alt:l,meta:l}),C({keyCode:220,keyCap:"\\|",normal:l,ctrl:s("\\"),alt:l,meta:l}),C({keyCode:20,keyCap:"[CAPS]",normal:n,ctrl:n,alt:n,meta:l}),C({keyCode:65,keyCap:"aA",normal:l,ctrl:s("A"),alt:l,meta:l}),C({keyCode:83,keyCap:"sS",normal:l,ctrl:s("S"),alt:l,meta:l}),C({keyCode:68,keyCap:"dD",normal:l,ctrl:s("D"),alt:l,meta:l}),C({keyCode:70,keyCap:"fF",normal:l,ctrl:s("F"),alt:l,meta:l}),C({keyCode:71,keyCap:"gG",normal:l,ctrl:s("G"),alt:l,meta:l}),C({keyCode:72,keyCap:"hH",normal:l,ctrl:s("H"),alt:l,meta:l}),C({keyCode:74,keyCap:"jJ",normal:l,ctrl:s("J"),alt:l,meta:l}),C({keyCode:75,keyCap:"kK",normal:l,ctrl:s("K"),alt:l,meta:l}),C({keyCode:76,keyCap:"lL",normal:l,ctrl:s("L"),alt:l,meta:l}),C({keyCode:186,keyCap:";:",normal:l,ctrl:r,alt:l,meta:l}),C({keyCode:222,keyCap:"'\"",normal:l,ctrl:r,alt:l,meta:l}),C({keyCode:13,keyCap:"[ENTER]",normal:"\r",ctrl:l,alt:l,meta:l}),C({keyCode:16,keyCap:"[SHIFT]",normal:n,ctrl:n,alt:n,meta:l}),C({keyCode:90,keyCap:"zZ",normal:l,ctrl:s("Z"),alt:l,meta:l}),C({keyCode:88,keyCap:"xX",normal:l,ctrl:s("X"),alt:l,meta:l}),C({keyCode:67,keyCap:"cC",normal:l,ctrl:s("C"),alt:l,meta:n}),C({keyCode:86,keyCap:"vV",normal:l,ctrl:s("V"),alt:l,meta:n}),C({keyCode:66,keyCap:"bB",normal:l,ctrl:s("B"),alt:l,meta:l}),C({keyCode:78,keyCap:"nN",normal:l,ctrl:s("N"),alt:l,meta:l}),C({keyCode:77,keyCap:"mM",normal:l,ctrl:s("M"),alt:l,meta:l}),C({keyCode:188,keyCap:",<",normal:l,ctrl:y(r,n),alt:l,meta:l}),C({keyCode:190,keyCap:".>",normal:l,ctrl:y(r,n),alt:l,meta:l}),C({keyCode:191,keyCap:"/?",normal:l,ctrl:o(s("_"),s("?")),alt:l,meta:l}),C({keyCode:17,keyCap:"[CTRL]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:18,keyCap:"[ALT]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:91,keyCap:"[LAPL]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:32,keyCap:" ",normal:l,ctrl:s("@"),alt:l,meta:l}),C({keyCode:93,keyCap:"[RAPL]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:42,keyCap:"[PRTSCR]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:145,keyCap:"[SCRLK]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:19,keyCap:"[BREAK]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:45,keyCap:"[INSERT]",normal:t.CSI+"2~",ctrl:l,alt:l,meta:l}),C({keyCode:36,keyCap:"[HOME]",normal:t.ESC+"OH",ctrl:l,alt:l,meta:l}),C({keyCode:33,keyCap:"[PGUP]",normal:t.CSI+"5~",ctrl:l,alt:l,meta:l}),C({keyCode:46,keyCap:"[DEL]",normal:t.CSI+"3~",ctrl:l,alt:l,meta:l}),C({keyCode:35,keyCap:"[END]",normal:t.ESC+"OF",ctrl:l,alt:l,meta:l}),C({keyCode:34,keyCap:"[PGDOWN]",normal:t.CSI+"6~",ctrl:l,alt:l,meta:l}),C({keyCode:38,keyCap:"[UP]",normal:c(t.CSI+"A",t.SS3),ctrl:l,alt:l,meta:l}),C({keyCode:40,keyCap:"[DOWN]",normal:c(t.CSI+"B",t.SS3),ctrl:l,alt:l,meta:l}),C({keyCode:39,keyCap:"[RIGHT]",normal:c(t.CSI+"C",t.SS3),ctrl:l,alt:l,meta:l}),C({keyCode:37,keyCap:"[LEFT]",normal:c(t.CSI+"D",t.SS3),ctrl:l,alt:l,meta:l}),C({keyCode:144,keyCap:"[NUMLOCK]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:12,keyCap:"[CLEAR]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:96,keyCap:"[KP0]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:97,keyCap:"[KP1]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:98,keyCap:"[KP2]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:99,keyCap:"[KP3]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:100,keyCap:"[KP4]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:101,keyCap:"[KP5]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:102,keyCap:"[KP6]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:103,keyCap:"[KP7]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:104,keyCap:"[KP8]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:105,keyCap:"[KP9]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:107,keyCap:"[KP+]",normal:l,ctrl:h,alt:l,meta:h}),C({keyCode:109,keyCap:"[KP-]",normal:l,ctrl:h,alt:l,meta:h}),C({keyCode:106,keyCap:"[KP*]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:111,keyCap:"[KP/]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:110,keyCap:"[KP.]",normal:l,ctrl:l,alt:l,meta:l})}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=65536,l=1<<17,n=1<<18,r=1<<19,s=1<<20;t.default=function(e,t=!0){let a=0;return e.shiftKey&&(a|=l),e.ctrlKey&&(a|=n),e.altKey&&(a|=r),e.metaKey&&(a|=s),t&&(a|=o),a}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,