!function(e){var t={};function a(o){if(t[o])return t[o].exports;var l=t[o]={i:o,l:!1,exports:{}};return e[o].call(l.exports,l,l.exports,a),l.l=!0,l.exports}a.m=e,a.c=t,a.d=function(e,t,o){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(a.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)a.d(o,l,function(t){return e[t]}.bind(null,l));return o},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=0)}([function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=new(a(1).default);document.body.append(o.element),o.focus(!0),window._onKB=o.onKB,window._kb=o,o.ready()},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=a(2),l=a(3),n=o.KBActions.CANCEL,r=o.KBActions.DEFAULT,s=o.KBActions.PASS,i=o.KBActions.STRIP;function y(e){switch(e){case"escape":return{keyCode:27,code:"[ESC]",key:"[ESC]"};case"ctrl+space":return null;case"tab":return{keyCode:9,code:"[TAB]",key:"[TAB]"};default:return null}}function d(e){return`${e.keyCode}:${e.code}:${e.location}:${e.key}`}function C(e,t){let a=Object.assign(Object.assign({},t),{op:e});window.webkit.messageHandlers._kb.postMessage(a)}function c(e){e&&(e.preventDefault(),e.stopPropagation())}const m={KeyC:67,c:67,KeyI:73,i:73,KeyH:72,h:72,KeyM:77,m:77,BracketLeft:219,"[":77,KeyN:78,n:78,KeyU:85,u:85,KeyE:69,e:69};const k="20:CapsLock:0:CapsLock";t.default=class{constructor(){this.element=document.createElement("input"),this._keyMap=new o.default(this),this._lang="en",this._lastKeyDownEvent=null,this._capsLockRemapped=!1,this._metaSendsEscape=!0,this._altSendsWhat="escape",this._modsMap={ShiftLeft:"Shift",ShiftRight:"Shift",AltLeft:"Alt",AltRight:"Alt",MetaLeft:"Meta",MetaRight:"Meta",ControlLeft:"Control",ControlRight:"Control",CapsLock:"Control"},this._downMap={"0:Unidentified:0:Â§":{keyCode:27,code:"[ESC]",key:"[ESC]"},"0:Unidentified:0:Â±":{keyCode:0,code:"Unidentified",key:"Â§"}},this._upMap={"20:CapsLock:0:CapsLock":{keyCode:27,code:"[ESC]",key:"[ESC]"}},this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set},this._up=new Set,this._voiceString="",this._updateUIKitModsIfNeeded=e=>{if(this._capsLockRemapped){let t;C("mods",{mods:t="keyup"==e.type&&"CapsLock"==e.code?0:l.default(e)})}"Alt1"==e.key&&("keydown"==e.type?C("guard-ime-on",{}):C("guard-ime-off",{}))},this._onKeyDown=e=>{if(e.isComposing)return void(this._lastKeyDownEvent=null);let t=e;if(229===e.keyCode){if(!this._lastKeyDownEvent)return;t=this._lastKeyDownEvent}else this._lastKeyDownEvent=e;let a=d(t),o=this._downMap[a],l=this._modsMap[t.code],n=!1;o&&((n=!(l&&this._mods[l].has(a)))||(this._handleKeyDownKey(o,e),n=!0)),l&&this._mods[l].add(a),this._upMap[a]&&this._up.add(a),this._updateUIKitModsIfNeeded(t),n||this._handleKeyDown(t.keyCode,e)},this._onBeforeInput=e=>{"dictation"!=this._lang?("insertText"==e.inputType&&this._output(e.data),c(e)):this._voiceString=e.data},this._onInput=e=>c(e),this._onKeyUp=e=>{this._lastKeyDownEvent=null;let t=d(e),a=this._modsMap[e.code];a&&this._mods[a].delete(t),this._updateUIKitModsIfNeeded(e);let o=this._upMap[t];o&&this._up.has(t)&&this._handleKeyDownKey(o,null),c(e)},this._handleKeyDown=(e,t)=>{let a={keyCode:e,key:"",code:"Unidentified"};t&&(a.code=t.code,a.key=t.key),this._handleKeyDownKey(a,t)},this._handleKeyDownKey=(e,t)=>{let a=this._keyMap,o=this._mods.Alt.size>0,l=this._mods.Control.size>0,y=this._mods.Meta.size>0,d=this._mods.Shift.size>0,C=e.code,k=e.key,p=function(e,t){return t?(t.ctrlKey&&(9==t.keyCode&&"KeyI"==t.code||8==t.keyCode&&"KeyH"==t.code||13==t.keyCode&&"KeyC"==t.code||13==t.keyCode&&"KeyM"==t.code||27==t.keyCode&&"BracketLeft"==t.code)&&(e.keyCode=m[t.code]||e.keyCode),e):e}({key:k,code:C,keyCode:e.keyCode,alt:o,ctrl:l,meta:y,shift:d},t),u=a.getKeyDef(p.keyCode);var h=null;function f(e){h=e;var t=u[e];return"function"==typeof t&&(t=t.call(a,p,u)),t===r&&"normal"!=e&&(t=f("normal")),t}let _=!/^\[\w+\]$/.test(u.keyCap);var S;if((S=f(l?"ctrl":o?"alt":y?"meta":"normal"))===s||S===r&&!(l||o||y)){if(S===s)return;if(!_)return;let e=function(e){return e.normalize("NFD").replace(/[\u0300-\u036f]/g,"")}(k);return this._capsLockRemapped?this._output(d?e.toUpperCase():e.toLowerCase()):this._output(e),void c(t)}if(S===i&&(o=l=!1,"function"==typeof(S=u.normal)&&(S=S.call(a,p,u)),S==r&&2==u.keyCap.length&&(S=u.keyCap.substr(d?1:0,1))),c(t),S!==n)if(S===r||"string"==typeof S){if("ctrl"==h?l=!1:"alt"==h?o=!1:"meta"==h&&(y=!1),d=p.shift,"string"==typeof S&&"["==S.substr(0,2)&&(o||l||d||y)){let e=1;d&&(e+=1),o&&(e+=2),l&&(e+=4),y&&(e+=8);let t=";"+e;S=3==S.length?"[1"+t+S.substr(2,1):S.substr(0,S.length-1)+t+S.substr(S.length-1)}else{if(S===r&&(S=u.keyCap.substr(d?1:0,1),l)){let e=u.keyCap.substr(0,1).charCodeAt(0);e>=64&&e<=95&&(S=String.fromCharCode(e-64))}let e=S.toString();if(o&&"8-bit"==this._altSendsWhat&&1==e.length){let t=e.charCodeAt(0)+128;S=String.fromCharCode(t)}(o&&"escape"==this._altSendsWhat||y&&this._metaSendsEscape)&&(S=""+e)}"string"==typeof S?this._output(S):console.warn("action is not a string",S)}else console.log("Invalid action: "+JSON.stringify(S))},this._onIME=e=>{let t=e.type,a=e.data||"";C("ime",{type:t,data:a}),"compositionend"==t&&this._output(a)},this._output=e=>{this._up.clear(),e&&C("out",{data:e})},this._configKey=e=>{let t=e.code,a=y(e.down);a&&(this._upMap[t.id]=a);let o=function(e){switch(e){case"Escape":case"8-bit":return"Alt";case"Shift":return"Shift";case"Control":return"Control";case"Meta":case"Meta-Escape":return"Meta";default:return null}}(e.mod);o&&(this._modsMap[t.code]=o,"Alt"==o&&(this._altSendsWhat="Escape"==e.mod?"escape":"8-bit"),"Meta"==o&&(this._metaSendsEscape="Meta-Escape"==e.mod));let l=y(e.up);l&&(this._upMap[t.id]=l)},this._config=e=>{this._reset(),this._configKey(e.capsLock),this._configKey(e.command.left),this._configKey(e.command.right),this._configKey(e.control.left),this._configKey(e.control.right),this._configKey(e.option.left),this._configKey(e.option.right),this._configKey(e.shift.left),this._configKey(e.shift.right)},this.onKB=(e,t)=>{switch(e){case"mods-down":this._handleCapsLockDown(!0);break;case"mods-up":this._handleCapsLockDown(!1);break;case"lang":this._handleLang(t);break;case"guard-up":this._handleGuard(!0,t);break;case"guard-down":this._handleGuard(!1,t);break;case"focus":this.focus(t);break;case"config":this._config(t)}};let e=this.element;e.setAttribute("autocomplete","off"),e.setAttribute("spellcheck","false"),e.setAttribute("autocorrect","off"),e.setAttribute("autocapitalize","none"),e.setAttribute("autofocus","true"),e.value=" ",e.addEventListener("keydown",this._onKeyDown),e.addEventListener("keyup",this._onKeyUp),e.addEventListener("compositionstart",this._onIME),e.addEventListener("compositionupdate",this._onIME),e.addEventListener("compositionend",this._onIME),e.addEventListener("beforeinput",this._onBeforeInput),e.addEventListener("input",this._onInput),this._capsLockRemapped=null!=this._modsMap.CapsLock||null!=this._downMap[k]||null!=this._upMap[k]}focus(e){e?this.element.focus():this.element.blur()}ready(){C("ready",{})}_handleCapsLockDown(e){let t=this._modsMap.CapsLock;if(e){let e=this._downMap[k];return!e||t&&this._mods[t].has(k)||this._handleKeyDownKey(e,null),t&&this._mods[t].add(k),void(this._upMap[k]&&this._up.add(k))}t&&this._mods[t].delete(k);let a=this._upMap[k];a&&this._up.has(k)&&this._handleKeyDownKey(a,null)}_handleLang(e){this.element.value=" ",this._lang=e}_handleGuard(e,t){if(this.element.value=" ",e)return;let a=m[t||""]||0;this._handleKeyDown(a,null)}_reset(){this._modsMap={},this._downMap={},this._upMap={},this._up.clear(),this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set}}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=Symbol("CANCEL"),l=Symbol("DEFAULT"),n=Symbol("PASS"),r=Symbol("STRIP");t.KBActions={CANCEL:o,DEFAULT:l,PASS:n,STRIP:r},t.ESC="",t.CSI="[",t.SS3="O",t.DEL="";const s=e=>String.fromCharCode(e.charCodeAt(0)-64),i={keyCode:0,keyCap:"[UNKNOWN]",normal:n,ctrl:n,alt:n,meta:n};t.default=class{constructor(e){this._defs={},this._onCtrlNum=(e,a)=>{switch(a.keyCap.substr(0,1)){case"1":return"1";case"2":return s("@");case"3":return s("[");case"4":return s("\\");case"5":return s("]");case"6":return s("^");case"7":return s("_");case"8":return t.DEL;case"9":return"9";default:return n}},this._onAltNum=(e,t)=>l,this._onMetaNum=(e,t)=>l,this._onZoom=(e,t)=>l,this._keyboard=e,this.reset()}getKeyDef(e){var t=this._defs[e];return t||(console.warn(`No definition for (keyCode ${e})`),t=i,this.addKeyDef(e,t),t)}addKeyDef(e,t){e in this._defs&&console.warn("Dup keyCode: ",e),this._defs[e]=t}reset(){this._defs={};const e=(e,t,a)=>"function"==typeof e?e.call(this,t,a):e,a=(t,a)=>(o,l)=>{let n=o.shift||o.ctrl||o.alt||o.meta?a:t;return e(n,o,l)},o=(t,a)=>(o,l)=>{let n=o.shift?a:t;return o.shift=!1,e(n,o,l)},y=(e,t)=>e,d=(t,a)=>(o,l)=>{let n=o.alt?t:a;return e(n,o,l)},C=(e,t)=>e,c=e=>this.addKeyDef(e.keyCode,e);c(i),c({keyCode:27,keyCap:"[ESC]",normal:t.ESC,ctrl:l,alt:l,meta:l}),c({keyCode:112,keyCap:"[F1]",normal:a(t.SS3+"P",t.CSI+"P"),ctrl:l,alt:t.CSI+"23~",meta:l}),c({keyCode:113,keyCap:"[F2]",normal:a(t.SS3+"Q",t.CSI+"Q"),ctrl:l,alt:t.CSI+"24~",meta:l}),c({keyCode:114,keyCap:"[F3]",normal:a(t.SS3+"R",t.CSI+"R"),ctrl:l,alt:t.CSI+"25~",meta:l}),c({keyCode:115,keyCap:"[F4]",normal:a(t.SS3+"S",t.CSI+"S"),ctrl:l,alt:t.CSI+"26~",meta:l}),c({keyCode:116,keyCap:"[F5]",normal:t.CSI+"15~",ctrl:l,alt:t.CSI+"28~",meta:l}),c({keyCode:117,keyCap:"[F6]",normal:t.CSI+"17~",ctrl:l,alt:t.CSI+"29~",meta:l}),c({keyCode:118,keyCap:"[F7]",normal:t.CSI+"18~",ctrl:l,alt:t.CSI+"31~",meta:l}),c({keyCode:119,keyCap:"[F8]",normal:t.CSI+"19~",ctrl:l,alt:t.CSI+"32~",meta:l}),c({keyCode:120,keyCap:"[F9]",normal:t.CSI+"20~",ctrl:l,alt:t.CSI+"33~",meta:l}),c({keyCode:121,keyCap:"[F10]",normal:t.CSI+"21~",ctrl:l,alt:t.CSI+"34~",meta:l}),c({keyCode:122,keyCap:"[F11]",normal:t.CSI+"23~",ctrl:l,alt:t.CSI+"42~",meta:l}),c({keyCode:123,keyCap:"[F12]",normal:t.CSI+"24~",ctrl:l,alt:t.CSI+"43~",meta:l});const m=this._onCtrlNum,k=this._onAltNum,p=this._onMetaNum,u=this._onZoom;c({keyCode:192,keyCap:"`~",normal:l,ctrl:o(s("@"),s("^")),alt:l,meta:n}),c({keyCode:49,keyCap:"1!",normal:l,ctrl:m,alt:k,meta:p}),c({keyCode:50,keyCap:"2@",normal:l,ctrl:m,alt:k,meta:p}),c({keyCode:51,keyCap:"3#",normal:l,ctrl:m,alt:k,meta:p}),c({keyCode:52,keyCap:"4$",normal:l,ctrl:m,alt:k,meta:p}),c({keyCode:53,keyCap:"5%",normal:l,ctrl:m,alt:k,meta:p}),c({keyCode:54,keyCap:"6^",normal:l,ctrl:m,alt:k,meta:p}),c({keyCode:55,keyCap:"7&",normal:l,ctrl:m,alt:k,meta:p}),c({keyCode:56,keyCap:"8*",normal:l,ctrl:m,alt:k,meta:p}),c({keyCode:57,keyCap:"9(",normal:l,ctrl:m,alt:k,meta:p}),c({keyCode:48,keyCap:"0)",normal:l,ctrl:u,alt:k,meta:u}),c({keyCode:189,keyCap:"-_",normal:l,ctrl:u,alt:l,meta:u}),c({keyCode:187,keyCap:"=+",normal:l,ctrl:u,alt:l,meta:u}),c({keyCode:8,keyCap:"[BKSP]",normal:y(t.DEL),ctrl:y("\b",t.DEL),alt:l,meta:l}),c({keyCode:9,keyCap:"[TAB]",normal:o("\t",t.CSI+"Z"),ctrl:r,alt:n,meta:l}),c({keyCode:81,keyCap:"qQ",normal:l,ctrl:s("Q"),alt:l,meta:l}),c({keyCode:87,keyCap:"wW",normal:l,ctrl:s("W"),alt:l,meta:l}),c({keyCode:69,keyCap:"eE",normal:l,ctrl:s("E"),alt:l,meta:l}),c({keyCode:82,keyCap:"rR",normal:l,ctrl:s("R"),alt:l,meta:l}),c({keyCode:84,keyCap:"tT",normal:l,ctrl:s("T"),alt:l,meta:l}),c({keyCode:89,keyCap:"yY",normal:l,ctrl:s("Y"),alt:l,meta:l}),c({keyCode:85,keyCap:"uU",normal:l,ctrl:s("U"),alt:l,meta:l}),c({keyCode:73,keyCap:"iI",normal:l,ctrl:s("I"),alt:l,meta:l}),c({keyCode:79,keyCap:"oO",normal:l,ctrl:s("O"),alt:l,meta:l}),c({keyCode:80,keyCap:"pP",normal:l,ctrl:s("P"),alt:l,meta:l}),c({keyCode:219,keyCap:"[{",normal:l,ctrl:s("["),alt:l,meta:l}),c({keyCode:221,keyCap:"]}",normal:l,ctrl:s("]"),alt:l,meta:l}),c({keyCode:220,keyCap:"\\|",normal:l,ctrl:s("\\"),alt:l,meta:l}),c({keyCode:20,keyCap:"[CAPS]",normal:n,ctrl:n,alt:n,meta:l}),c({keyCode:65,keyCap:"aA",normal:l,ctrl:s("A"),alt:l,meta:l}),c({keyCode:83,keyCap:"sS",normal:l,ctrl:s("S"),alt:l,meta:l}),c({keyCode:68,keyCap:"dD",normal:l,ctrl:s("D"),alt:l,meta:l}),c({keyCode:70,keyCap:"fF",normal:l,ctrl:s("F"),alt:l,meta:l}),c({keyCode:71,keyCap:"gG",normal:l,ctrl:s("G"),alt:l,meta:l}),c({keyCode:72,keyCap:"hH",normal:l,ctrl:s("H"),alt:l,meta:l}),c({keyCode:74,keyCap:"jJ",normal:l,ctrl:s("J"),alt:l,meta:l}),c({keyCode:75,keyCap:"kK",normal:l,ctrl:s("K"),alt:l,meta:l}),c({keyCode:76,keyCap:"lL",normal:l,ctrl:s("L"),alt:l,meta:l}),c({keyCode:186,keyCap:";:",normal:l,ctrl:r,alt:l,meta:l}),c({keyCode:222,keyCap:"'\"",normal:l,ctrl:r,alt:l,meta:l}),c({keyCode:13,keyCap:"[ENTER]",normal:"\r",ctrl:l,alt:l,meta:l}),c({keyCode:16,keyCap:"[SHIFT]",normal:n,ctrl:n,alt:n,meta:l}),c({keyCode:90,keyCap:"zZ",normal:l,ctrl:s("Z"),alt:l,meta:l}),c({keyCode:88,keyCap:"xX",normal:l,ctrl:s("X"),alt:l,meta:l}),c({keyCode:67,keyCap:"cC",normal:l,ctrl:s("C"),alt:l,meta:n}),c({keyCode:86,keyCap:"vV",normal:l,ctrl:s("V"),alt:l,meta:n}),c({keyCode:66,keyCap:"bB",normal:l,ctrl:s("B"),alt:l,meta:l}),c({keyCode:78,keyCap:"nN",normal:l,ctrl:s("N"),alt:l,meta:l}),c({keyCode:77,keyCap:"mM",normal:l,ctrl:s("M"),alt:l,meta:l}),c({keyCode:188,keyCap:",<",normal:l,ctrl:d(r,n),alt:l,meta:l}),c({keyCode:190,keyCap:".>",normal:l,ctrl:d(r,n),alt:l,meta:l}),c({keyCode:191,keyCap:"/?",normal:l,ctrl:o(s("_"),s("?")),alt:l,meta:l}),c({keyCode:17,keyCap:"[CTRL]",normal:n,ctrl:n,alt:n,meta:n}),c({keyCode:18,keyCap:"[ALT]",normal:n,ctrl:n,alt:n,meta:n}),c({keyCode:91,keyCap:"[LAPL]",normal:n,ctrl:n,alt:n,meta:n}),c({keyCode:32,keyCap:" ",normal:l,ctrl:s("@"),alt:l,meta:l}),c({keyCode:93,keyCap:"[RAPL]",normal:n,ctrl:n,alt:n,meta:n}),c({keyCode:42,keyCap:"[PRTSCR]",normal:n,ctrl:n,alt:n,meta:n}),c({keyCode:145,keyCap:"[SCRLK]",normal:n,ctrl:n,alt:n,meta:n}),c({keyCode:19,keyCap:"[BREAK]",normal:n,ctrl:n,alt:n,meta:n}),c({keyCode:45,keyCap:"[INSERT]",normal:t.CSI+"2~",ctrl:l,alt:l,meta:l}),c({keyCode:36,keyCap:"[HOME]",normal:t.ESC+"OH",ctrl:l,alt:l,meta:l}),c({keyCode:33,keyCap:"[PGUP]",normal:t.CSI+"5~",ctrl:l,alt:l,meta:l}),c({keyCode:46,keyCap:"[DEL]",normal:t.CSI+"3~",ctrl:l,alt:l,meta:l}),c({keyCode:35,keyCap:"[END]",normal:t.ESC+"OF",ctrl:l,alt:l,meta:l}),c({keyCode:34,keyCap:"[PGDOWN]",normal:t.CSI+"6~",ctrl:l,alt:l,meta:l}),c({keyCode:38,keyCap:"[UP]",normal:C(t.CSI+"A",t.SS3),ctrl:l,alt:l,meta:l}),c({keyCode:40,keyCap:"[DOWN]",normal:C(t.CSI+"B",t.SS3),ctrl:l,alt:l,meta:l}),c({keyCode:39,keyCap:"[RIGHT]",normal:C(t.CSI+"C",t.SS3),ctrl:l,alt:l,meta:l}),c({keyCode:37,keyCap:"[LEFT]",normal:C(t.CSI+"D",t.SS3),ctrl:l,alt:l,meta:l}),c({keyCode:144,keyCap:"[NUMLOCK]",normal:n,ctrl:n,alt:n,meta:n}),c({keyCode:12,keyCap:"[CLEAR]",normal:n,ctrl:n,alt:n,meta:n}),c({keyCode:96,keyCap:"[KP0]",normal:l,ctrl:l,alt:l,meta:l}),c({keyCode:97,keyCap:"[KP1]",normal:l,ctrl:l,alt:l,meta:l}),c({keyCode:98,keyCap:"[KP2]",normal:l,ctrl:l,alt:l,meta:l}),c({keyCode:99,keyCap:"[KP3]",normal:l,ctrl:l,alt:l,meta:l}),c({keyCode:100,keyCap:"[KP4]",normal:l,ctrl:l,alt:l,meta:l}),c({keyCode:101,keyCap:"[KP5]",normal:l,ctrl:l,alt:l,meta:l}),c({keyCode:102,keyCap:"[KP6]",normal:l,ctrl:l,alt:l,meta:l}),c({keyCode:103,keyCap:"[KP7]",normal:l,ctrl:l,alt:l,meta:l}),c({keyCode:104,keyCap:"[KP8]",normal:l,ctrl:l,alt:l,meta:l}),c({keyCode:105,keyCap:"[KP9]",normal:l,ctrl:l,alt:l,meta:l}),c({keyCode:107,keyCap:"[KP+]",normal:l,ctrl:u,alt:l,meta:u}),c({keyCode:109,keyCap:"[KP-]",normal:l,ctrl:u,alt:l,meta:u}),c({keyCode:106,keyCap:"[KP*]",normal:l,ctrl:l,alt:l,meta:l}),c({keyCode:111,keyCap:"[KP/]",normal:l,ctrl:l,alt:l,meta:l}),c({keyCode:110,keyCap:"[KP.]",normal:l,ctrl:l,alt:l,meta:l})}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=65536,l=1<<17,n=1<<18,r=1<<19,s=1<<20;t.default=function(e,t=!0){let a=0;return e.shiftKey&&(a|=l),e.ctrlKey&&(a|=n),e.altKey&&(a|=r),e.metaKey&&(a|=s),t&&(a|=o),a}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9LZXlib2FyZC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvS2V5TWFwLnRzIiwid2VicGFjazovLy8uL3NyYy9VSUtleU1vZGlmaWVyRmxhZ3MudHMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJrZXlib2FyZCIsImRlZmF1bHQiLCJkb2N1bWVudCIsImJvZHkiLCJhcHBlbmQiLCJlbGVtZW50IiwiZm9jdXMiLCJ3aW5kb3ciLCJfb25LQiIsIm9uS0IiLCJfa2IiLCJyZWFkeSIsIktleU1hcF8xIiwiVUlLZXlNb2RpZmllckZsYWdzXzEiLCJDQU5DRUwiLCJLQkFjdGlvbnMiLCJERUZBVUxUIiwiUEFTUyIsIlNUUklQIiwiX2FjdGlvbiIsImFjdGlvbiIsImtleUNvZGUiLCJjb2RlIiwiX2tleUlkIiwiZSIsImxvY2F0aW9uIiwiX29wIiwib3AiLCJhcmdzIiwibWVzc2FnZSIsImFzc2lnbiIsIndlYmtpdCIsIm1lc3NhZ2VIYW5kbGVycyIsInBvc3RNZXNzYWdlIiwiX2Jsb2NrRXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsIl9rZXlUb0NvZGVNYXAiLCJLZXlDIiwiS2V5SSIsIktleUgiLCJoIiwiS2V5TSIsIkJyYWNrZXRMZWZ0IiwiS2V5TiIsIktleVUiLCJ1IiwiS2V5RSIsIl9jYXBzTG9ja0lEIiwidGhpcyIsImNyZWF0ZUVsZW1lbnQiLCJfa2V5TWFwIiwiX2xhbmciLCJfbGFzdEtleURvd25FdmVudCIsIl9jYXBzTG9ja1JlbWFwcGVkIiwiX21ldGFTZW5kc0VzY2FwZSIsIl9hbHRTZW5kc1doYXQiLCJfbW9kc01hcCIsIlNoaWZ0TGVmdCIsIlNoaWZ0UmlnaHQiLCJBbHRMZWZ0IiwiQWx0UmlnaHQiLCJNZXRhTGVmdCIsIk1ldGFSaWdodCIsIkNvbnRyb2xMZWZ0IiwiQ29udHJvbFJpZ2h0IiwiQ2Fwc0xvY2siLCJfZG93bk1hcCIsIl91cE1hcCIsIl9tb2RzIiwiU2hpZnQiLCJTZXQiLCJBbHQiLCJNZXRhIiwiQ29udHJvbCIsIl91cCIsIl92b2ljZVN0cmluZyIsIl91cGRhdGVVSUtpdE1vZHNJZk5lZWRlZCIsIm1vZHMiLCJ0eXBlIiwiX29uS2V5RG93biIsImlzQ29tcG9zaW5nIiwiZXZlbnQiLCJrZXlJZCIsImRvd25PdmVycmlkZSIsIm1vZCIsImhhbmRsZWQiLCJoYXMiLCJfaGFuZGxlS2V5RG93bktleSIsImFkZCIsIl9oYW5kbGVLZXlEb3duIiwiX29uQmVmb3JlSW5wdXQiLCJpbnB1dFR5cGUiLCJfb3V0cHV0IiwiZGF0YSIsIl9vbklucHV0IiwiX29uS2V5VXAiLCJkZWxldGUiLCJ1cE92ZXJyaWRlIiwia2V5SW5mbyIsImtleU1hcCIsImFsdCIsInNpemUiLCJjdHJsIiwibWV0YSIsInNoaWZ0Iiwia2V5RG93biIsImN0cmxLZXkiLCJfcGF0Y2hLZXlEb3duIiwia2V5RGVmIiwiZ2V0S2V5RGVmIiwicmVzb2x2ZWRBY3Rpb25UeXBlIiwiZ2V0QWN0aW9uIiwiaXNQcmludGFibGUiLCJ0ZXN0Iiwia2V5Q2FwIiwib3V0Iiwic3RyIiwibm9ybWFsaXplIiwicmVwbGFjZSIsIl9yZW1vdmVBY2NlbnRzIiwidG9VcHBlckNhc2UiLCJ0b0xvd2VyQ2FzZSIsIm5vcm1hbCIsImxlbmd0aCIsInN1YnN0ciIsImltb2QiLCJjaGFyQ29kZUF0IiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiYWN0aW9uU3RyIiwidG9TdHJpbmciLCJjb25zb2xlIiwid2FybiIsImxvZyIsIkpTT04iLCJzdHJpbmdpZnkiLCJfb25JTUUiLCJjbGVhciIsIl9jb25maWdLZXkiLCJkb3duIiwiaWQiLCJfbW9kIiwidXAiLCJfY29uZmlnIiwiY2ZnIiwiX3Jlc2V0IiwiY2Fwc0xvY2siLCJjb21tYW5kIiwibGVmdCIsInJpZ2h0IiwiY29udHJvbCIsIm9wdGlvbiIsImNtZCIsImFyZyIsIl9oYW5kbGVDYXBzTG9ja0Rvd24iLCJfaGFuZGxlTGFuZyIsIl9oYW5kbGVHdWFyZCIsImlucHV0Iiwic2V0QXR0cmlidXRlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImJsdXIiLCJvdmVycmlkZSIsImxhbmciLCJjaGFyIiwiRVNDIiwiQ1NJIiwiU1MzIiwiREVMIiwiY3RsIiwiY2giLCJfdW5rbm93bktleURlZiIsIl9kZWZzIiwiX29uQ3RybE51bSIsImRlZiIsIl9vbkFsdE51bSIsIl9vbk1ldGFOdW0iLCJfb25ab29tIiwiX2tleWJvYXJkIiwicmVzZXQiLCJhZGRLZXlEZWYiLCJyZXNvbHZlIiwiayIsImEiLCJiIiwic2giLCJicyIsImFjIiwib25DdHJsTnVtIiwib25BbHROdW0iLCJvbk1ldGFOdW0iLCJvblpvb20iLCJVSUtleU1vZGlmaWVyQWxwaGFTaGlmdCIsIlVJS2V5TW9kaWZpZXJTaGlmdCIsIlVJS2V5TW9kaWZpZXJDb250cm9sIiwiVUlLZXlNb2RpZmllckFsdGVybmF0ZSIsIlVJS2V5TW9kaWZpZXJDb21tYW5kIiwiY2Fwc0tleSIsInJlcyIsInNoaWZ0S2V5IiwiYWx0S2V5IiwibWV0YUtleSJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUs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IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAwKTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgS2V5Ym9hcmRfMSA9IHJlcXVpcmUoXCIuL0tleWJvYXJkXCIpO1xudmFyIGtleWJvYXJkID0gbmV3IEtleWJvYXJkXzEuZGVmYXVsdCgpO1xuZnVuY3Rpb24gaW5zdGFsbCgpIHtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZChrZXlib2FyZC5lbGVtZW50KTtcbiAgICBrZXlib2FyZC5mb2N1cyh0cnVlKTtcbiAgICB3aW5kb3cuX29uS0IgPSBrZXlib2FyZC5vbktCO1xuICAgIHdpbmRvdy5fa2IgPSBrZXlib2FyZDtcbiAgICBrZXlib2FyZC5yZWFkeSgpO1xufVxuaW5zdGFsbCgpO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBLZXlNYXBfMSA9IHJlcXVpcmUoXCIuL0tleU1hcFwiKTtcbmNvbnN0IFVJS2V5TW9kaWZpZXJGbGFnc18xID0gcmVxdWlyZShcIi4vVUlLZXlNb2RpZmllckZsYWdzXCIpO1xuY29uc3QgQ0FOQ0VMID0gS2V5TWFwXzEuS0JBY3Rpb25zLkNBTkNFTDtcbmNvbnN0IERFRkFVTFQgPSBLZXlNYXBfMS5LQkFjdGlvbnMuREVGQVVMVDtcbmNvbnN0IFBBU1MgPSBLZXlNYXBfMS5LQkFjdGlvbnMuUEFTUztcbmNvbnN0IFNUUklQID0gS2V5TWFwXzEuS0JBY3Rpb25zLlNUUklQO1xuZnVuY3Rpb24gX2FjdGlvbihhY3Rpb24pIHtcbiAgICBzd2l0Y2ggKGFjdGlvbikge1xuICAgICAgICBjYXNlICdlc2NhcGUnOlxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBrZXlDb2RlOiAyNyxcbiAgICAgICAgICAgICAgICBjb2RlOiAnW0VTQ10nLFxuICAgICAgICAgICAgICAgIGtleTogJ1tFU0NdJyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgJ2N0cmwrc3BhY2UnOlxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIGNhc2UgJ3RhYic6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGtleUNvZGU6IDksXG4gICAgICAgICAgICAgICAgY29kZTogJ1tUQUJdJyxcbiAgICAgICAgICAgICAgICBrZXk6ICdbVEFCXScsXG4gICAgICAgICAgICB9O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuZnVuY3Rpb24gX21vZChtb2QpIHtcbiAgICBzd2l0Y2ggKG1vZCkge1xuICAgICAgICBjYXNlICdFc2NhcGUnOlxuICAgICAgICBjYXNlICc4LWJpdCc6XG4gICAgICAgICAgICByZXR1cm4gJ0FsdCc7XG4gICAgICAgIGNhc2UgJ1NoaWZ0JzpcbiAgICAgICAgICAgIHJldHVybiAnU2hpZnQnO1xuICAgICAgICBjYXNlICdDb250cm9sJzpcbiAgICAgICAgICAgIHJldHVybiAnQ29udHJvbCc7XG4gICAgICAgIGNhc2UgJ01ldGEnOlxuICAgICAgICBjYXNlICdNZXRhLUVzY2FwZSc6XG4gICAgICAgICAgICByZXR1cm4gJ01ldGEnO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuZnVuY3Rpb24gX2tleUlkKGUpIHtcbiAgICByZXR1cm4gYCR7ZS5rZXlDb2RlfToke2UuY29kZX06JHtlLmxvY2F0aW9ufToke2Uua2V5fWA7XG59XG5mdW5jdGlvbiBfb3Aob3AsIGFyZ3MpIHtcbiAgICBsZXQgbWVzc2FnZSA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgYXJncyksIHsgb3AgfSk7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLl9rYi5wb3N0TWVzc2FnZShtZXNzYWdlKTtcbn1cbmZ1bmN0aW9uIF9yZW1vdmVBY2NlbnRzKHN0cikge1xuICAgIHJldHVybiBzdHIubm9ybWFsaXplKCdORkQnKS5yZXBsYWNlKC9bXFx1MDMwMC1cXHUwMzZmXS9nLCAnJyk7XG59XG5mdW5jdGlvbiBfYmxvY2tFdmVudChlKSB7XG4gICAgaWYgKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIH1cbn1cbmNvbnN0IF9rZXlUb0NvZGVNYXAgPSB7XG4gICAgS2V5QzogNjcsXG4gICAgYzogNjcsXG4gICAgS2V5STogNzMsXG4gICAgaTogNzMsXG4gICAgS2V5SDogNzIsXG4gICAgaDogNzIsXG4gICAgS2V5TTogNzcsXG4gICAgbTogNzcsXG4gICAgQnJhY2tldExlZnQ6IDIxOSxcbiAgICAnWyc6IDc3LFxuICAgIEtleU46IDc4LFxuICAgIG46IDc4LFxuICAgIEtleVU6IDg1LFxuICAgIHU6IDg1LFxuICAgIEtleUU6IDY5LFxuICAgIGU6IDY5LFxufTtcbmZ1bmN0aW9uIF9wYXRjaEtleURvd24oa2V5RG93biwgZSkge1xuICAgIGlmICghZSkge1xuICAgICAgICByZXR1cm4ga2V5RG93bjtcbiAgICB9XG4gICAgaWYgKGUuY3RybEtleSkge1xuICAgICAgICBpZiAoKGUua2V5Q29kZSA9PSA5ICYmIGUuY29kZSA9PSAnS2V5SScpIHx8XG4gICAgICAgICAgICAoZS5rZXlDb2RlID09IDggJiYgZS5jb2RlID09ICdLZXlIJykgfHxcbiAgICAgICAgICAgIChlLmtleUNvZGUgPT0gMTMgJiYgZS5jb2RlID09ICdLZXlDJykgfHxcbiAgICAgICAgICAgIChlLmtleUNvZGUgPT0gMTMgJiYgZS5jb2RlID09ICdLZXlNJykgfHxcbiAgICAgICAgICAgIChlLmtleUNvZGUgPT0gMjcgJiYgZS5jb2RlID09ICdCcmFja2V0TGVmdCcpKSB7XG4gICAgICAgICAgICBrZXlEb3duLmtleUNvZGUgPSBfa2V5VG9Db2RlTWFwW2UuY29kZV0gfHwga2V5RG93bi5rZXlDb2RlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBrZXlEb3duO1xufVxuY29uc3QgX2NhcHNMb2NrSUQgPSAnMjA6Q2Fwc0xvY2s6MDpDYXBzTG9jayc7XG5jbGFzcyBLZXlib2FyZCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgIHRoaXMuX2tleU1hcCA9IG5ldyBLZXlNYXBfMS5kZWZhdWx0KHRoaXMpO1xuICAgICAgICB0aGlzLl9sYW5nID0gJ2VuJztcbiAgICAgICAgdGhpcy5fbGFzdEtleURvd25FdmVudCA9IG51bGw7XG4gICAgICAgIHRoaXMuX2NhcHNMb2NrUmVtYXBwZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fbWV0YVNlbmRzRXNjYXBlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fYWx0U2VuZHNXaGF0ID0gJ2VzY2FwZSc7XG4gICAgICAgIHRoaXMuX21vZHNNYXAgPSB7XG4gICAgICAgICAgICBTaGlmdExlZnQ6ICdTaGlmdCcsXG4gICAgICAgICAgICBTaGlmdFJpZ2h0OiAnU2hpZnQnLFxuICAgICAgICAgICAgQWx0TGVmdDogJ0FsdCcsXG4gICAgICAgICAgICBBbHRSaWdodDogJ0FsdCcsXG4gICAgICAgICAgICBNZXRhTGVmdDogJ01ldGEnLFxuICAgICAgICAgICAgTWV0YVJpZ2h0OiAnTWV0YScsXG4gICAgICAgICAgICBDb250cm9sTGVmdDogJ0NvbnRyb2wnLFxuICAgICAgICAgICAgQ29udHJvbFJpZ2h0OiAnQ29udHJvbCcsXG4gICAgICAgICAgICBDYXBzTG9jazogJ0NvbnRyb2wnLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9kb3duTWFwID0ge1xuICAgICAgICAgICAgJzA6VW5pZGVudGlmaWVkOjA6wqcnOiB7XG4gICAgICAgICAgICAgICAga2V5Q29kZTogMjcsXG4gICAgICAgICAgICAgICAgY29kZTogJ1tFU0NdJyxcbiAgICAgICAgICAgICAgICBrZXk6ICdbRVNDXScsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzA6VW5pZGVudGlmaWVkOjA6wrEnOiB7XG4gICAgICAgICAgICAgICAga2V5Q29kZTogMCxcbiAgICAgICAgICAgICAgICBjb2RlOiAnVW5pZGVudGlmaWVkJyxcbiAgICAgICAgICAgICAgICBrZXk6ICfCpycsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLl91cE1hcCA9IHtcbiAgICAgICAgICAgICcyMDpDYXBzTG9jazowOkNhcHNMb2NrJzoge1xuICAgICAgICAgICAgICAgIGtleUNvZGU6IDI3LFxuICAgICAgICAgICAgICAgIGNvZGU6ICdbRVNDXScsXG4gICAgICAgICAgICAgICAga2V5OiAnW0VTQ10nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fbW9kcyA9IHtcbiAgICAgICAgICAgIFNoaWZ0OiBuZXcgU2V0KCksXG4gICAgICAgICAgICBBbHQ6IG5ldyBTZXQoKSxcbiAgICAgICAgICAgIE1ldGE6IG5ldyBTZXQoKSxcbiAgICAgICAgICAgIENvbnRyb2w6IG5ldyBTZXQoKSxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fdXAgPSBuZXcgU2V0KCk7XG4gICAgICAgIHRoaXMuX3ZvaWNlU3RyaW5nID0gJyc7XG4gICAgICAgIHRoaXMuX3VwZGF0ZVVJS2l0TW9kc0lmTmVlZGVkID0gKGUpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9jYXBzTG9ja1JlbWFwcGVkKSB7XG4gICAgICAgICAgICAgICAgbGV0IG1vZHM7XG4gICAgICAgICAgICAgICAgaWYgKGUudHlwZSA9PSAna2V5dXAnICYmIGUuY29kZSA9PSAnQ2Fwc0xvY2snKSB7XG4gICAgICAgICAgICAgICAgICAgIG1vZHMgPSAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbW9kcyA9IFVJS2V5TW9kaWZpZXJGbGFnc18xLmRlZmF1bHQoZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF9vcCgnbW9kcycsIHsgbW9kczogbW9kcyB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChlLmtleSA9PSAnQWx0MScpIHtcbiAgICAgICAgICAgICAgICBpZiAoZS50eXBlID09ICdrZXlkb3duJykge1xuICAgICAgICAgICAgICAgICAgICBfb3AoJ2d1YXJkLWltZS1vbicsIHt9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIF9vcCgnZ3VhcmQtaW1lLW9mZicsIHt9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX29uS2V5RG93biA9IChlKSA9PiB7XG4gICAgICAgICAgICBpZiAoZS5pc0NvbXBvc2luZykge1xuICAgICAgICAgICAgICAgIHRoaXMuX2xhc3RLZXlEb3duRXZlbnQgPSBudWxsO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBldmVudCA9IGU7XG4gICAgICAgICAgICAvLyBpT1Mgc2VuZHMgMjI5IHNvbWV0aW1lcyBmb3IgcmVwZWF0ZWQgZXZlbnRzXG4gICAgICAgICAgICBpZiAoZS5rZXlDb2RlID09PSAyMjkpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fbGFzdEtleURvd25FdmVudCkge1xuICAgICAgICAgICAgICAgICAgICBldmVudCA9IHRoaXMuX2xhc3RLZXlEb3duRXZlbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBkZWFkXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9sYXN0S2V5RG93bkV2ZW50ID0gZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBrZXlJZCA9IF9rZXlJZChldmVudCk7XG4gICAgICAgICAgICBsZXQgZG93bk92ZXJyaWRlID0gdGhpcy5fZG93bk1hcFtrZXlJZF07XG4gICAgICAgICAgICBsZXQgbW9kID0gdGhpcy5fbW9kc01hcFtldmVudC5jb2RlXTtcbiAgICAgICAgICAgIGxldCBoYW5kbGVkID0gZmFsc2U7XG4gICAgICAgICAgICBpZiAoZG93bk92ZXJyaWRlKSB7XG4gICAgICAgICAgICAgICAgaGFuZGxlZCA9ICEobW9kICYmIHRoaXMuX21vZHNbbW9kXS5oYXMoa2V5SWQpKTtcbiAgICAgICAgICAgICAgICBpZiAoIWhhbmRsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faGFuZGxlS2V5RG93bktleShkb3duT3ZlcnJpZGUsIGUpO1xuICAgICAgICAgICAgICAgICAgICBoYW5kbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobW9kKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW9kc1ttb2RdLmFkZChrZXlJZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgdXBPdmVycmlkZSA9IHRoaXMuX3VwTWFwW2tleUlkXTtcbiAgICAgICAgICAgIGlmICh1cE92ZXJyaWRlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fdXAuYWRkKGtleUlkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX3VwZGF0ZVVJS2l0TW9kc0lmTmVlZGVkKGV2ZW50KTtcbiAgICAgICAgICAgIGlmICghaGFuZGxlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2hhbmRsZUtleURvd24oZXZlbnQua2V5Q29kZSwgZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX29uQmVmb3JlSW5wdXQgPSAoZSkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2xhbmcgPT0gJ2RpY3RhdGlvbicpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl92b2ljZVN0cmluZyA9IGUuZGF0YTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChlLmlucHV0VHlwZSA9PSAnaW5zZXJ0VGV4dCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9vdXRwdXQoZS5kYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF9ibG9ja0V2ZW50KGUpO1xuICAgICAgICB9O1xuICAgICAgICAvLyBwcmV2ZW50IHNpbXBsZSBpbnB1dCBmb3IgSU1FIG1vZGUgKGxpa2UgMSwgMiwgMyBrZXlzKVxuICAgICAgICB0aGlzLl9vbklucHV0ID0gKGUpID0+IF9ibG9ja0V2ZW50KGUpO1xuICAgICAgICB0aGlzLl9vbktleVVwID0gKGUpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2xhc3RLZXlEb3duRXZlbnQgPSBudWxsO1xuICAgICAgICAgICAgbGV0IGtleUlkID0gX2tleUlkKGUpO1xuICAgICAgICAgICAgbGV0IG1vZCA9IHRoaXMuX21vZHNNYXBbZS5jb2RlXTtcbiAgICAgICAgICAgIGlmIChtb2QpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9tb2RzW21vZF0uZGVsZXRlKGtleUlkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX3VwZGF0ZVVJS2l0TW9kc0lmTmVlZGVkKGUpO1xuICAgICAgICAgICAgbGV0IHVwT3ZlcnJpZGUgPSB0aGlzLl91cE1hcFtrZXlJZF07XG4gICAgICAgICAgICBpZiAodXBPdmVycmlkZSAmJiB0aGlzLl91cC5oYXMoa2V5SWQpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5faGFuZGxlS2V5RG93bktleSh1cE92ZXJyaWRlLCBudWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF9ibG9ja0V2ZW50KGUpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9oYW5kbGVLZXlEb3duID0gKGtleUNvZGUsIGUpID0+IHtcbiAgICAgICAgICAgIGxldCBrZXlJbmZvID0ge1xuICAgICAgICAgICAgICAgIGtleUNvZGUsXG4gICAgICAgICAgICAgICAga2V5OiAnJyxcbiAgICAgICAgICAgICAgICBjb2RlOiAnVW5pZGVudGlmaWVkJyxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBpZiAoZSkge1xuICAgICAgICAgICAgICAgIGtleUluZm8uY29kZSA9IGUuY29kZTtcbiAgICAgICAgICAgICAgICBrZXlJbmZvLmtleSA9IGUua2V5O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5faGFuZGxlS2V5RG93bktleShrZXlJbmZvLCBlKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5faGFuZGxlS2V5RG93bktleSA9IChrZXlJbmZvLCBlKSA9PiB7XG4gICAgICAgICAgICBsZXQga2V5TWFwID0gdGhpcy5fa2V5TWFwO1xuICAgICAgICAgICAgbGV0IGFsdCA9IHRoaXMuX21vZHMuQWx0LnNpemUgPiAwO1xuICAgICAgICAgICAgbGV0IGN0cmwgPSB0aGlzLl9tb2RzLkNvbnRyb2wuc2l6ZSA+IDA7XG4gICAgICAgICAgICBsZXQgbWV0YSA9IHRoaXMuX21vZHMuTWV0YS5zaXplID4gMDtcbiAgICAgICAgICAgIGxldCBzaGlmdCA9IHRoaXMuX21vZHMuU2hpZnQuc2l6ZSA+IDA7XG4gICAgICAgICAgICBsZXQgY29kZSA9IGtleUluZm8uY29kZTtcbiAgICAgICAgICAgIGxldCBrZXkgPSBrZXlJbmZvLmtleTtcbiAgICAgICAgICAgIGxldCBrZXlDb2RlID0ga2V5SW5mby5rZXlDb2RlO1xuICAgICAgICAgICAgbGV0IGtleURvd24gPSBfcGF0Y2hLZXlEb3duKHsga2V5LCBjb2RlLCBrZXlDb2RlLCBhbHQsIGN0cmwsIG1ldGEsIHNoaWZ0IH0sIGUpO1xuICAgICAgICAgICAgbGV0IGtleURlZiA9IGtleU1hcC5nZXRLZXlEZWYoa2V5RG93bi5rZXlDb2RlKTtcbiAgICAgICAgICAgIHZhciByZXNvbHZlZEFjdGlvblR5cGUgPSBudWxsO1xuICAgICAgICAgICAgZnVuY3Rpb24gZ2V0QWN0aW9uKG5hbWUpIHtcbiAgICAgICAgICAgICAgICByZXNvbHZlZEFjdGlvblR5cGUgPSBuYW1lO1xuICAgICAgICAgICAgICAgIHZhciBhY3Rpb24gPSBrZXlEZWZbbmFtZV07XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBhY3Rpb24gPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb24gPSBhY3Rpb24uY2FsbChrZXlNYXAsIGtleURvd24sIGtleURlZik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24gPT09IERFRkFVTFQgJiYgbmFtZSAhPSAnbm9ybWFsJykge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb24gPSBnZXRBY3Rpb24oJ25vcm1hbCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gYWN0aW9uO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IGlzUHJpbnRhYmxlID0gIS9eXFxbXFx3K1xcXSQvLnRlc3Qoa2V5RGVmLmtleUNhcCk7XG4gICAgICAgICAgICB2YXIgYWN0aW9uO1xuICAgICAgICAgICAgaWYgKGN0cmwpIHtcbiAgICAgICAgICAgICAgICBhY3Rpb24gPSBnZXRBY3Rpb24oJ2N0cmwnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGFsdCkge1xuICAgICAgICAgICAgICAgIGFjdGlvbiA9IGdldEFjdGlvbignYWx0Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChtZXRhKSB7XG4gICAgICAgICAgICAgICAgYWN0aW9uID0gZ2V0QWN0aW9uKCdtZXRhJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBhY3Rpb24gPSBnZXRBY3Rpb24oJ25vcm1hbCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGFjdGlvbiA9PT0gUEFTUyB8fCAoYWN0aW9uID09PSBERUZBVUxUICYmICEoY3RybCB8fCBhbHQgfHwgbWV0YSkpKSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhpcyBrZXkgaXMgc3VwcG9zZWQgdG8gYmUgaGFuZGxlZCBieSB0aGUgYnJvd3Nlciwgb3IgaXQgaXMgYW5cbiAgICAgICAgICAgICAgICAvLyB1bm1vZGlmaWVkIGtleSB3aXRoIHRoZSBkZWZhdWx0IGFjdGlvbiwgdGhlbiBleGl0IHRoaXMgZXZlbnQgaGFuZGxlci5cbiAgICAgICAgICAgICAgICAvLyBJZiBpdCdzIGFuIHVubW9kaWZpZWQga2V5LCBpdCdsbCBiZSBoYW5kbGVkIGluIG9uS2V5UHJlc3Mgd2hlcmUgd2VcbiAgICAgICAgICAgICAgICAvLyBjYW4gdGVsbCBmb3Igc3VyZSB3aGljaCBBU0NJSSBjb2RlIHRvIGluc2VydC5cbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgIC8vIFRoaXMgYmxvY2sgbmVlZHMgdG8gY29tZSBiZWZvcmUgdGhlIFNUUklQIHRlc3QsIG90aGVyd2lzZSB3ZSdsbCBzdHJpcFxuICAgICAgICAgICAgICAgIC8vIHRoZSBtb2RpZmllciBhbmQgdGhpbmsgaXQncyBvayB0byBsZXQgdGhlIGJyb3dzZXIgaGFuZGxlIHRoZSBrZXlwcmVzcy5cbiAgICAgICAgICAgICAgICAvLyBUaGUgYnJvd3NlciB3b24ndCBrbm93IHdlJ3JlIHRyeWluZyB0byBpZ25vcmUgdGhlIG1vZGlmaWVycyBhbmQgbWlnaHRcbiAgICAgICAgICAgICAgICAvLyBwZXJmb3JtIHNvbWUgZGVmYXVsdCBhY3Rpb24uXG4gICAgICAgICAgICAgICAgLy8gIHJldHVybjtcbiAgICAgICAgICAgICAgICBpZiAoYWN0aW9uID09PSBQQVNTKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFpc1ByaW50YWJsZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGxldCBvdXQgPSBfcmVtb3ZlQWNjZW50cyhrZXkpO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9jYXBzTG9ja1JlbWFwcGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX291dHB1dChzaGlmdCA/IG91dC50b1VwcGVyQ2FzZSgpIDogb3V0LnRvTG93ZXJDYXNlKCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fb3V0cHV0KG91dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF9ibG9ja0V2ZW50KGUpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChhY3Rpb24gPT09IFNUUklQKSB7XG4gICAgICAgICAgICAgICAgYWx0ID0gY3RybCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGFjdGlvbiA9IGtleURlZi5ub3JtYWw7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBhY3Rpb24gPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb24gPSBhY3Rpb24uY2FsbChrZXlNYXAsIGtleURvd24sIGtleURlZik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24gPT0gREVGQVVMVCAmJiBrZXlEZWYua2V5Q2FwLmxlbmd0aCA9PSAyKSB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbiA9IGtleURlZi5rZXlDYXAuc3Vic3RyKHNoaWZ0ID8gMSA6IDAsIDEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF9ibG9ja0V2ZW50KGUpO1xuICAgICAgICAgICAgaWYgKGFjdGlvbiA9PT0gQ0FOQ0VMKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGFjdGlvbiAhPT0gREVGQVVMVCAmJiB0eXBlb2YgYWN0aW9uICE9ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0ludmFsaWQgYWN0aW9uOiAnICsgSlNPTi5zdHJpbmdpZnkoYWN0aW9uKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gU3RyaXAgdGhlIG1vZGlmaWVyIHRoYXQgaXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBhY3Rpb24sIHNpbmNlIHdlIGFzc3VtZSB0aGF0XG4gICAgICAgICAgICAvLyBtb2RpZmllciBoYXMgYWxyZWFkeSBiZWVuIGFjY291bnRlZCBmb3IgaW4gdGhlIGFjdGlvbi5cbiAgICAgICAgICAgIGlmIChyZXNvbHZlZEFjdGlvblR5cGUgPT0gJ2N0cmwnKSB7XG4gICAgICAgICAgICAgICAgY3RybCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocmVzb2x2ZWRBY3Rpb25UeXBlID09ICdhbHQnKSB7XG4gICAgICAgICAgICAgICAgYWx0ID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChyZXNvbHZlZEFjdGlvblR5cGUgPT0gJ21ldGEnKSB7XG4gICAgICAgICAgICAgICAgbWV0YSA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2hpZnQgPSBrZXlEb3duLnNoaWZ0O1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBhY3Rpb24gPT0gJ3N0cmluZycgJiZcbiAgICAgICAgICAgICAgICBhY3Rpb24uc3Vic3RyKDAsIDIpID09ICdcXHgxYlsnICYmXG4gICAgICAgICAgICAgICAgKGFsdCB8fCBjdHJsIHx8IHNoaWZ0IHx8IG1ldGEpKSB7XG4gICAgICAgICAgICAgICAgLy8gVGhlIGFjdGlvbiBpcyBhbiBlc2NhcGUgc2VxdWVuY2UgdGhhdCBhbmQgaXQgd2FzIHRyaWdnZXJlZCBpbiB0aGVcbiAgICAgICAgICAgICAgICAvLyBwcmVzZW5jZSBvZiBhIGtleWJvYXJkIG1vZGlmaWVyLCB3ZSBtYXkgbmVlZCB0byBhbHRlciB0aGUgYWN0aW9uIHRvXG4gICAgICAgICAgICAgICAgLy8gaW5jbHVkZSB0aGUgbW9kaWZpZXIgYmVmb3JlIHNlbmRpbmcgaXQuXG4gICAgICAgICAgICAgICAgLy8gVGhlIG1hdGggaXMgZnVua3kgYnV0IGFsaWducyB3L3h0ZXJtLlxuICAgICAgICAgICAgICAgIGxldCBpbW9kID0gMTtcbiAgICAgICAgICAgICAgICBpZiAoc2hpZnQpXG4gICAgICAgICAgICAgICAgICAgIGltb2QgKz0gMTtcbiAgICAgICAgICAgICAgICBpZiAoYWx0KVxuICAgICAgICAgICAgICAgICAgICBpbW9kICs9IDI7XG4gICAgICAgICAgICAgICAgaWYgKGN0cmwpXG4gICAgICAgICAgICAgICAgICAgIGltb2QgKz0gNDtcbiAgICAgICAgICAgICAgICBpZiAobWV0YSlcbiAgICAgICAgICAgICAgICAgICAgaW1vZCArPSA4O1xuICAgICAgICAgICAgICAgIGxldCBtb2QgPSAnOycgKyBpbW9kO1xuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24ubGVuZ3RoID09IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gU29tZSBvZiB0aGUgQ1NJIHNlcXVlbmNlcyBoYXZlIHplcm8gcGFyYW1ldGVycyB1bmxlc3MgbW9kaWZpZWQuXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbiA9ICdcXHgxYlsxJyArIG1vZCArIGFjdGlvbi5zdWJzdHIoMiwgMSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBPdGhlcnMgYWx3YXlzIGhhdmUgYXQgbGVhc3Qgb25lIHBhcmFtZXRlci5cbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uID1cbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbi5zdWJzdHIoMCwgYWN0aW9uLmxlbmd0aCAtIDEpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2QgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbi5zdWJzdHIoYWN0aW9uLmxlbmd0aCAtIDEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24gPT09IERFRkFVTFQpIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uID0ga2V5RGVmLmtleUNhcC5zdWJzdHIoc2hpZnQgPyAxIDogMCwgMSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdHJsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgdW5zaGlmdGVkID0ga2V5RGVmLmtleUNhcC5zdWJzdHIoMCwgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgY29kZSA9IHVuc2hpZnRlZC5jaGFyQ29kZUF0KDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvZGUgPj0gNjQgJiYgY29kZSA8PSA5NSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbiA9IFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSAtIDY0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZXQgYWN0aW9uU3RyID0gYWN0aW9uLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgaWYgKGFsdCAmJiB0aGlzLl9hbHRTZW5kc1doYXQgPT0gJzgtYml0JyAmJiBhY3Rpb25TdHIubGVuZ3RoID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNvZGUgPSBhY3Rpb25TdHIuY2hhckNvZGVBdCgwKSArIDEyODtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uID0gU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gV2UgcmVzcGVjdCBhbHQvbWV0YVNlbmRzRXNjYXBlIGV2ZW4gaWYgdGhlIGtleW1hcCBhY3Rpb24gd2FzIGEgbGl0ZXJhbFxuICAgICAgICAgICAgICAgIC8vIHN0cmluZy4gIE90aGVyd2lzZSwgZXZlcnkgb3ZlcnJpZGRlbiBhbHQvbWV0YSBhY3Rpb24gd291bGQgaGF2ZSB0b1xuICAgICAgICAgICAgICAgIC8vIGNoZWNrIGFsdC9tZXRhU2VuZHNFc2NhcGUuXG4gICAgICAgICAgICAgICAgaWYgKChhbHQgJiYgdGhpcy5fYWx0U2VuZHNXaGF0ID09ICdlc2NhcGUnKSB8fFxuICAgICAgICAgICAgICAgICAgICAobWV0YSAmJiB0aGlzLl9tZXRhU2VuZHNFc2NhcGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbiA9ICdcXHgxYicgKyBhY3Rpb25TdHI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiBhY3Rpb24gPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9vdXRwdXQoYWN0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybignYWN0aW9uIGlzIG5vdCBhIHN0cmluZycsIGFjdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX29uSU1FID0gKGUpID0+IHtcbiAgICAgICAgICAgIGxldCB0eXBlID0gZS50eXBlO1xuICAgICAgICAgICAgbGV0IGRhdGEgPSBlLmRhdGEgfHwgJyc7XG4gICAgICAgICAgICBfb3AoJ2ltZScsIHsgdHlwZSwgZGF0YSB9KTtcbiAgICAgICAgICAgIGlmICh0eXBlID09ICdjb21wb3NpdGlvbmVuZCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9vdXRwdXQoZGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX291dHB1dCA9IChkYXRhKSA9PiB7XG4gICAgICAgICAgICB0aGlzLl91cC5jbGVhcigpO1xuICAgICAgICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgICAgICAgICBfb3AoJ291dCcsIHsgZGF0YSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fY29uZmlnS2V5ID0gKGtleSkgPT4ge1xuICAgICAgICAgICAgbGV0IGNvZGUgPSBrZXkuY29kZTtcbiAgICAgICAgICAgIGxldCBkb3duID0gX2FjdGlvbihrZXkuZG93bik7XG4gICAgICAgICAgICBpZiAoZG93bikge1xuICAgICAgICAgICAgICAgIHRoaXMuX3VwTWFwW2NvZGUuaWRdID0gZG93bjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBtb2QgPSBfbW9kKGtleS5tb2QpO1xuICAgICAgICAgICAgaWYgKG1vZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX21vZHNNYXBbY29kZS5jb2RlXSA9IG1vZDtcbiAgICAgICAgICAgICAgICBpZiAobW9kID09ICdBbHQnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2FsdFNlbmRzV2hhdCA9IGtleS5tb2QgPT0gJ0VzY2FwZScgPyAnZXNjYXBlJyA6ICc4LWJpdCc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChtb2QgPT0gJ01ldGEnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX21ldGFTZW5kc0VzY2FwZSA9IGtleS5tb2QgPT0gJ01ldGEtRXNjYXBlJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgdXAgPSBfYWN0aW9uKGtleS51cCk7XG4gICAgICAgICAgICBpZiAodXApIHtcbiAgICAgICAgICAgICAgICB0aGlzLl91cE1hcFtjb2RlLmlkXSA9IHVwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9jb25maWcgPSAoY2ZnKSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9yZXNldCgpO1xuICAgICAgICAgICAgdGhpcy5fY29uZmlnS2V5KGNmZy5jYXBzTG9jayk7XG4gICAgICAgICAgICB0aGlzLl9jb25maWdLZXkoY2ZnLmNvbW1hbmQubGVmdCk7XG4gICAgICAgICAgICB0aGlzLl9jb25maWdLZXkoY2ZnLmNvbW1hbmQucmlnaHQpO1xuICAgICAgICAgICAgdGhpcy5fY29uZmlnS2V5KGNmZy5jb250cm9sLmxlZnQpO1xuICAgICAgICAgICAgdGhpcy5fY29uZmlnS2V5KGNmZy5jb250cm9sLnJpZ2h0KTtcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZ0tleShjZmcub3B0aW9uLmxlZnQpO1xuICAgICAgICAgICAgdGhpcy5fY29uZmlnS2V5KGNmZy5vcHRpb24ucmlnaHQpO1xuICAgICAgICAgICAgdGhpcy5fY29uZmlnS2V5KGNmZy5zaGlmdC5sZWZ0KTtcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZ0tleShjZmcuc2hpZnQucmlnaHQpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLm9uS0IgPSAoY21kLCBhcmcpID0+IHtcbiAgICAgICAgICAgIHN3aXRjaCAoY21kKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnbW9kcy1kb3duJzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faGFuZGxlQ2Fwc0xvY2tEb3duKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICdtb2RzLXVwJzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faGFuZGxlQ2Fwc0xvY2tEb3duKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnbGFuZyc6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2hhbmRsZUxhbmcoYXJnKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnZ3VhcmQtdXAnOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9oYW5kbGVHdWFyZCh0cnVlLCBhcmcpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICdndWFyZC1kb3duJzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faGFuZGxlR3VhcmQoZmFsc2UsIGFyZyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ2ZvY3VzJzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mb2N1cyhhcmcpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICdjb25maWcnOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jb25maWcoYXJnKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGxldCBpbnB1dCA9IHRoaXMuZWxlbWVudDtcbiAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCdhdXRvY29tcGxldGUnLCAnb2ZmJyk7XG4gICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgnc3BlbGxjaGVjaycsICdmYWxzZScpO1xuICAgICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoJ2F1dG9jb3JyZWN0JywgJ29mZicpO1xuICAgICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoJ2F1dG9jYXBpdGFsaXplJywgJ25vbmUnKTtcbiAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCdhdXRvZm9jdXMnLCAndHJ1ZScpO1xuICAgICAgICAvLyBrZWVwIG9uZSBzcGFjZSwgc28gZGVsZXRlIGFsd2F5cyByZXBlYXRzIG9uIHNvZnR3YXJlIGtiXG4gICAgICAgIGlucHV0LnZhbHVlID0gJyAnO1xuICAgICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5fb25LZXlEb3duKTtcbiAgICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLl9vbktleVVwKTtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjb21wb3NpdGlvbnN0YXJ0JywgdGhpcy5fb25JTUUpO1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2NvbXBvc2l0aW9udXBkYXRlJywgdGhpcy5fb25JTUUpO1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2NvbXBvc2l0aW9uZW5kJywgdGhpcy5fb25JTUUpO1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2JlZm9yZWlucHV0JywgdGhpcy5fb25CZWZvcmVJbnB1dCk7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCB0aGlzLl9vbklucHV0KTtcbiAgICAgICAgdGhpcy5fY2Fwc0xvY2tSZW1hcHBlZCA9XG4gICAgICAgICAgICB0aGlzLl9tb2RzTWFwWydDYXBzTG9jayddICE9IG51bGwgfHxcbiAgICAgICAgICAgICAgICB0aGlzLl9kb3duTWFwW19jYXBzTG9ja0lEXSAhPSBudWxsIHx8XG4gICAgICAgICAgICAgICAgdGhpcy5fdXBNYXBbX2NhcHNMb2NrSURdICE9IG51bGw7XG4gICAgfVxuICAgIGZvY3VzKHZhbHVlKSB7XG4gICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgdGhpcy5lbGVtZW50LmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQuYmx1cigpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlYWR5KCkge1xuICAgICAgICBfb3AoJ3JlYWR5Jywge30pO1xuICAgIH1cbiAgICBfaGFuZGxlQ2Fwc0xvY2tEb3duKGRvd24pIHtcbiAgICAgICAgbGV0IG1vZCA9IHRoaXMuX21vZHNNYXBbJ0NhcHNMb2NrJ107XG4gICAgICAgIGlmIChkb3duKSB7XG4gICAgICAgICAgICBsZXQgb3ZlcnJpZGUgPSB0aGlzLl9kb3duTWFwW19jYXBzTG9ja0lEXTtcbiAgICAgICAgICAgIGlmIChvdmVycmlkZSAmJiAhKG1vZCAmJiB0aGlzLl9tb2RzW21vZF0uaGFzKF9jYXBzTG9ja0lEKSkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9oYW5kbGVLZXlEb3duS2V5KG92ZXJyaWRlLCBudWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChtb2QpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9tb2RzW21vZF0uYWRkKF9jYXBzTG9ja0lEKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCB1cE92ZXJyaWRlID0gdGhpcy5fdXBNYXBbX2NhcHNMb2NrSURdO1xuICAgICAgICAgICAgaWYgKHVwT3ZlcnJpZGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl91cC5hZGQoX2NhcHNMb2NrSUQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIG1vZCAmJiB0aGlzLl9tb2RzW21vZF0uZGVsZXRlKF9jYXBzTG9ja0lEKTtcbiAgICAgICAgbGV0IHVwT3ZlcnJpZGUgPSB0aGlzLl91cE1hcFtfY2Fwc0xvY2tJRF07XG4gICAgICAgIGlmICh1cE92ZXJyaWRlICYmIHRoaXMuX3VwLmhhcyhfY2Fwc0xvY2tJRCkpIHtcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZUtleURvd25LZXkodXBPdmVycmlkZSwgbnVsbCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gS2V5Ym9hcmQgbGFuZ3VhZ2UgY2hhbmdlXG4gICAgX2hhbmRsZUxhbmcobGFuZykge1xuICAgICAgICB0aGlzLmVsZW1lbnQudmFsdWUgPSAnICc7XG4gICAgICAgIHRoaXMuX2xhbmcgPSBsYW5nO1xuICAgIH1cbiAgICBfaGFuZGxlR3VhcmQodXAsIGNoYXIpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50LnZhbHVlID0gJyAnO1xuICAgICAgICBpZiAodXApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQga2V5Q29kZSA9IF9rZXlUb0NvZGVNYXBbY2hhciB8fCAnJ10gfHwgMDtcbiAgICAgICAgdGhpcy5faGFuZGxlS2V5RG93bihrZXlDb2RlLCBudWxsKTtcbiAgICB9XG4gICAgX3Jlc2V0KCkge1xuICAgICAgICB0aGlzLl9tb2RzTWFwID0ge307XG4gICAgICAgIHRoaXMuX2Rvd25NYXAgPSB7fTtcbiAgICAgICAgdGhpcy5fdXBNYXAgPSB7fTtcbiAgICAgICAgdGhpcy5fdXAuY2xlYXIoKTtcbiAgICAgICAgdGhpcy5fbW9kcyA9IHtcbiAgICAgICAgICAgIFNoaWZ0OiBuZXcgU2V0KCksXG4gICAgICAgICAgICBBbHQ6IG5ldyBTZXQoKSxcbiAgICAgICAgICAgIE1ldGE6IG5ldyBTZXQoKSxcbiAgICAgICAgICAgIENvbnRyb2w6IG5ldyBTZXQoKSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBLZXlib2FyZDtcbiIsIlwidXNlIHN0cmljdFwiO1xuLy8gc29tZSB1c2VmdWwgcmVmc1xuLy8gaHR0cHM6Ly93d3cudzMub3JnL1RSL3VpZXZlbnRzLWNvZGUvI2tleS1mdW5jdGlvbi1zZWN0aW9uXG4vLyBodHRwczovL2dpdGh1Yi5jb20vY2hyb21pdW0vaHRlcm0vYmxvYi9tYXN0ZXIvZG9jL0NvbnRyb2xTZXF1ZW5jZXMubWRcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IENBTkNFTCA9IFN5bWJvbCgnQ0FOQ0VMJyk7XG5jb25zdCBERUZBVUxUID0gU3ltYm9sKCdERUZBVUxUJyk7XG5jb25zdCBQQVNTID0gU3ltYm9sKCdQQVNTJyk7XG5jb25zdCBTVFJJUCA9IFN5bWJvbCgnU1RSSVAnKTtcbmV4cG9ydHMuS0JBY3Rpb25zID0ge1xuICAgIENBTkNFTCxcbiAgICBERUZBVUxULFxuICAgIFBBU1MsXG4gICAgU1RSSVAsXG59O1xuZXhwb3J0cy5FU0MgPSAnXFx4MWInOyAvLyBFc2NhcGVcbmV4cG9ydHMuQ1NJID0gJ1xceDFiWyc7IC8vIENvbW1hbmQgU3RhcnQgSW5pZGljYXRvclxuZXhwb3J0cy5TUzMgPSAnXFx4MWJPJzsgLy8gU2luZ2xlLVNoaWZ0IFRocmVlXG5leHBvcnRzLkRFTCA9ICdcXHg3Zic7IC8vIERlbGV0ZVxuY29uc3QgY3RsID0gKGNoKSA9PiBTdHJpbmcuZnJvbUNoYXJDb2RlKGNoLmNoYXJDb2RlQXQoMCkgLSA2NCk7XG5jb25zdCBfdW5rbm93bktleURlZiA9IHtcbiAgICBrZXlDb2RlOiAwLFxuICAgIGtleUNhcDogJ1tVTktOT1dOXScsXG4gICAgbm9ybWFsOiBQQVNTLFxuICAgIGN0cmw6IFBBU1MsXG4gICAgYWx0OiBQQVNTLFxuICAgIG1ldGE6IFBBU1MsXG59O1xuY2xhc3MgS2V5TWFwIHtcbiAgICBjb25zdHJ1Y3RvcihrZXlib2FyZCkge1xuICAgICAgICB0aGlzLl9kZWZzID0ge307XG4gICAgICAgIC8vIHByZXR0aWVyLWlnbm9yZVxuICAgICAgICB0aGlzLl9vbkN0cmxOdW0gPSAoZSwgZGVmKSA9PiB7XG4gICAgICAgICAgICBzd2l0Y2ggKGRlZi5rZXlDYXAuc3Vic3RyKDAsIDEpKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnMSc6IHJldHVybiAnMSc7XG4gICAgICAgICAgICAgICAgY2FzZSAnMic6IHJldHVybiBjdGwoJ0AnKTtcbiAgICAgICAgICAgICAgICBjYXNlICczJzogcmV0dXJuIGN0bCgnWycpO1xuICAgICAgICAgICAgICAgIGNhc2UgJzQnOiByZXR1cm4gY3RsKCdcXFxcJyk7XG4gICAgICAgICAgICAgICAgY2FzZSAnNSc6IHJldHVybiBjdGwoJ10nKTtcbiAgICAgICAgICAgICAgICBjYXNlICc2JzogcmV0dXJuIGN0bCgnXicpO1xuICAgICAgICAgICAgICAgIGNhc2UgJzcnOiByZXR1cm4gY3RsKCdfJyk7XG4gICAgICAgICAgICAgICAgY2FzZSAnOCc6IHJldHVybiBleHBvcnRzLkRFTDtcbiAgICAgICAgICAgICAgICBjYXNlICc5JzogcmV0dXJuICc5JztcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiByZXR1cm4gUEFTUztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fb25BbHROdW0gPSAoZSwgZGVmKSA9PiBERUZBVUxUO1xuICAgICAgICB0aGlzLl9vbk1ldGFOdW0gPSAoZSwgZGVmKSA9PiBERUZBVUxUO1xuICAgICAgICB0aGlzLl9vblpvb20gPSAoZSwgZGVmKSA9PiBERUZBVUxUO1xuICAgICAgICB0aGlzLl9rZXlib2FyZCA9IGtleWJvYXJkO1xuICAgICAgICB0aGlzLnJlc2V0KCk7XG4gICAgfVxuICAgIGdldEtleURlZihrZXlDb2RlKSB7XG4gICAgICAgIHZhciBrZXlEZWYgPSB0aGlzLl9kZWZzW2tleUNvZGVdO1xuICAgICAgICBpZiAoa2V5RGVmKSB7XG4gICAgICAgICAgICByZXR1cm4ga2V5RGVmO1xuICAgICAgICB9XG4gICAgICAgIC8vIElmIHRoaXMga2V5IGhhc24ndCBiZWVuIGV4cGxpY2l0bHkgcmVnaXN0ZXJlZCwgZmFsbCBiYWNrIHRvIHRoZSB1bmtub3duXG4gICAgICAgIC8vIGtleSBtYXBwaW5nIChrZXlDb2RlID09IDApLCBhbmQgdGhlbiBhdXRvbWF0aWNhbGx5IHJlZ2lzdGVyIGl0IHRvIGF2b2lkXG4gICAgICAgIC8vIGFueSBmdXJ0aGVyIHdhcm5pbmdzIGhlcmUuXG4gICAgICAgIGNvbnNvbGUud2FybihgTm8gZGVmaW5pdGlvbiBmb3IgKGtleUNvZGUgJHtrZXlDb2RlfSlgKTtcbiAgICAgICAga2V5RGVmID0gX3Vua25vd25LZXlEZWY7XG4gICAgICAgIHRoaXMuYWRkS2V5RGVmKGtleUNvZGUsIGtleURlZik7XG4gICAgICAgIHJldHVybiBrZXlEZWY7XG4gICAgfVxuICAgIGFkZEtleURlZihrZXlDb2RlLCBkZWYpIHtcbiAgICAgICAgaWYgKGtleUNvZGUgaW4gdGhpcy5fZGVmcykge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdEdXAga2V5Q29kZTogJywga2V5Q29kZSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fZGVmc1trZXlDb2RlXSA9IGRlZjtcbiAgICB9XG4gICAgLy8gcHJldHRpZXItaWdub3JlXG4gICAgcmVzZXQoKSB7XG4gICAgICAgIHRoaXMuX2RlZnMgPSB7fTtcbiAgICAgICAgY29uc3QgcmVzb2x2ZSA9IChhY3Rpb24sIGUsIGspID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgYWN0aW9uID09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYWN0aW9uLmNhbGwodGhpcywgZSwgayk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYWN0aW9uO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBtb2QgPSAoYSwgYikgPT4gKGUsIGspID0+IHtcbiAgICAgICAgICAgIGxldCBhY3Rpb24gPSAhKGUuc2hpZnQgfHwgZS5jdHJsIHx8IGUuYWx0IHx8IGUubWV0YSkgPyBhIDogYjtcbiAgICAgICAgICAgIHJldHVybiByZXNvbHZlKGFjdGlvbiwgZSwgayk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHNoID0gKGEsIGIpID0+IChlLCBrKSA9PiB7XG4gICAgICAgICAgICBsZXQgYWN0aW9uID0gIWUuc2hpZnQgPyBhIDogYjtcbiAgICAgICAgICAgIGUuc2hpZnQgPSBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybiByZXNvbHZlKGFjdGlvbiwgZSwgayk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGJzID0gKGEsIGIpID0+IGE7XG4gICAgICAgIGNvbnN0IGFsdCA9IChhLCBiKSA9PiAoZSwgaykgPT4ge1xuICAgICAgICAgICAgbGV0IGFjdGlvbiA9IGUuYWx0ID8gYSA6IGI7XG4gICAgICAgICAgICByZXR1cm4gcmVzb2x2ZShhY3Rpb24sIGUsIGspO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBhayA9IChhLCBiKSA9PiBhO1xuICAgICAgICBjb25zdCBhYyA9IChhLCBiKSA9PiBhO1xuICAgICAgICBjb25zdCBhZGQgPSAoZGVmKSA9PiB0aGlzLmFkZEtleURlZihkZWYua2V5Q29kZSwgZGVmKTtcbiAgICAgICAgLy9hZGQoeyBrZXlDb2RlOiAwLCBrZXlDYXA6ICdbVU5LTk9XTl0nLCBub3JtYWw6IFBBU1MsIGN0cmw6IFBBU1MsIGFsdDogUEFTUywgbWV0YTogUEFTUyB9KTtcbiAgICAgICAgYWRkKF91bmtub3duS2V5RGVmKTtcbiAgICAgICAgLy8gZmlyc3Qgcm93XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDI3LCBrZXlDYXA6ICdbRVNDXScsIG5vcm1hbDogZXhwb3J0cy5FU0MsIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTEyLCBrZXlDYXA6ICdbRjFdJywgbm9ybWFsOiBtb2QoZXhwb3J0cy5TUzMgKyAnUCcsIGV4cG9ydHMuQ1NJICsgJ1AnKSwgY3RybDogREVGQVVMVCwgYWx0OiBleHBvcnRzLkNTSSArICcyM34nLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMTMsIGtleUNhcDogJ1tGMl0nLCBub3JtYWw6IG1vZChleHBvcnRzLlNTMyArICdRJywgZXhwb3J0cy5DU0kgKyAnUScpLCBjdHJsOiBERUZBVUxULCBhbHQ6IGV4cG9ydHMuQ1NJICsgJzI0ficsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDExNCwga2V5Q2FwOiAnW0YzXScsIG5vcm1hbDogbW9kKGV4cG9ydHMuU1MzICsgJ1InLCBleHBvcnRzLkNTSSArICdSJyksIGN0cmw6IERFRkFVTFQsIGFsdDogZXhwb3J0cy5DU0kgKyAnMjV+JywgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTE1LCBrZXlDYXA6ICdbRjRdJywgbm9ybWFsOiBtb2QoZXhwb3J0cy5TUzMgKyAnUycsIGV4cG9ydHMuQ1NJICsgJ1MnKSwgY3RybDogREVGQVVMVCwgYWx0OiBleHBvcnRzLkNTSSArICcyNn4nLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMTYsIGtleUNhcDogJ1tGNV0nLCBub3JtYWw6IGV4cG9ydHMuQ1NJICsgJzE1ficsIGN0cmw6IERFRkFVTFQsIGFsdDogZXhwb3J0cy5DU0kgKyAnMjh+JywgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTE3LCBrZXlDYXA6ICdbRjZdJywgbm9ybWFsOiBleHBvcnRzLkNTSSArICcxN34nLCBjdHJsOiBERUZBVUxULCBhbHQ6IGV4cG9ydHMuQ1NJICsgJzI5ficsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDExOCwga2V5Q2FwOiAnW0Y3XScsIG5vcm1hbDogZXhwb3J0cy5DU0kgKyAnMTh+JywgY3RybDogREVGQVVMVCwgYWx0OiBleHBvcnRzLkNTSSArICczMX4nLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMTksIGtleUNhcDogJ1tGOF0nLCBub3JtYWw6IGV4cG9ydHMuQ1NJICsgJzE5ficsIGN0cmw6IERFRkFVTFQsIGFsdDogZXhwb3J0cy5DU0kgKyAnMzJ+JywgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTIwLCBrZXlDYXA6ICdbRjldJywgbm9ybWFsOiBleHBvcnRzLkNTSSArICcyMH4nLCBjdHJsOiBERUZBVUxULCBhbHQ6IGV4cG9ydHMuQ1NJICsgJzMzficsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDEyMSwga2V5Q2FwOiAnW0YxMF0nLCBub3JtYWw6IGV4cG9ydHMuQ1NJICsgJzIxficsIGN0cmw6IERFRkFVTFQsIGFsdDogZXhwb3J0cy5DU0kgKyAnMzR+JywgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTIyLCBrZXlDYXA6ICdbRjExXScsIG5vcm1hbDogZXhwb3J0cy5DU0kgKyAnMjN+JywgY3RybDogREVGQVVMVCwgYWx0OiBleHBvcnRzLkNTSSArICc0Mn4nLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMjMsIGtleUNhcDogJ1tGMTJdJywgbm9ybWFsOiBleHBvcnRzLkNTSSArICcyNH4nLCBjdHJsOiBERUZBVUxULCBhbHQ6IGV4cG9ydHMuQ1NJICsgJzQzficsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGNvbnN0IG9uQ3RybE51bSA9IHRoaXMuX29uQ3RybE51bTtcbiAgICAgICAgY29uc3Qgb25BbHROdW0gPSB0aGlzLl9vbkFsdE51bTtcbiAgICAgICAgY29uc3Qgb25NZXRhTnVtID0gdGhpcy5fb25NZXRhTnVtO1xuICAgICAgICBjb25zdCBvblpvb20gPSB0aGlzLl9vblpvb207XG4gICAgICAgIC8vIHNlY29uZCByb3dcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTkyLCBrZXlDYXA6ICdgficsIG5vcm1hbDogREVGQVVMVCwgY3RybDogc2goY3RsKCdAJyksIGN0bCgnXicpKSwgYWx0OiBERUZBVUxULCBtZXRhOiBQQVNTIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA0OSwga2V5Q2FwOiAnMSEnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IG9uQ3RybE51bSwgYWx0OiBvbkFsdE51bSwgbWV0YTogb25NZXRhTnVtIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA1MCwga2V5Q2FwOiAnMkAnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IG9uQ3RybE51bSwgYWx0OiBvbkFsdE51bSwgbWV0YTogb25NZXRhTnVtIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA1MSwga2V5Q2FwOiAnMyMnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IG9uQ3RybE51bSwgYWx0OiBvbkFsdE51bSwgbWV0YTogb25NZXRhTnVtIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA1Miwga2V5Q2FwOiAnNCQnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IG9uQ3RybE51bSwgYWx0OiBvbkFsdE51bSwgbWV0YTogb25NZXRhTnVtIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA1Mywga2V5Q2FwOiAnNSUnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IG9uQ3RybE51bSwgYWx0OiBvbkFsdE51bSwgbWV0YTogb25NZXRhTnVtIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA1NCwga2V5Q2FwOiAnNl4nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IG9uQ3RybE51bSwgYWx0OiBvbkFsdE51bSwgbWV0YTogb25NZXRhTnVtIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA1NSwga2V5Q2FwOiAnNyYnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IG9uQ3RybE51bSwgYWx0OiBvbkFsdE51bSwgbWV0YTogb25NZXRhTnVtIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA1Niwga2V5Q2FwOiAnOConLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IG9uQ3RybE51bSwgYWx0OiBvbkFsdE51bSwgbWV0YTogb25NZXRhTnVtIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA1Nywga2V5Q2FwOiAnOSgnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IG9uQ3RybE51bSwgYWx0OiBvbkFsdE51bSwgbWV0YTogb25NZXRhTnVtIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA0OCwga2V5Q2FwOiAnMCknLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IG9uWm9vbSwgYWx0OiBvbkFsdE51bSwgbWV0YTogb25ab29tIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxODksIGtleUNhcDogJy1fJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBvblpvb20sIGFsdDogREVGQVVMVCwgbWV0YTogb25ab29tIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxODcsIGtleUNhcDogJz0rJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBvblpvb20sIGFsdDogREVGQVVMVCwgbWV0YTogb25ab29tIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA4LCBrZXlDYXA6ICdbQktTUF0nLCBub3JtYWw6IGJzKGV4cG9ydHMuREVMLCAnXFxiJyksIGN0cmw6IGJzKCdcXGInLCBleHBvcnRzLkRFTCksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgLy8gdGhpcmQgcm93XG4gICAgICAgIC8vIFRPRE86IGNoZWNrIGN0cmwtdGFiXG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDksIGtleUNhcDogJ1tUQUJdJywgbm9ybWFsOiBzaCgnXFx0JywgZXhwb3J0cy5DU0kgKyAnWicpLCBjdHJsOiBTVFJJUCwgYWx0OiBQQVNTLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA4MSwga2V5Q2FwOiAncVEnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnUScpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDg3LCBrZXlDYXA6ICd3VycsIG5vcm1hbDogREVGQVVMVCwgY3RybDogY3RsKCdXJyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNjksIGtleUNhcDogJ2VFJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBjdGwoJ0UnKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA4Miwga2V5Q2FwOiAnclInLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnUicpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDg0LCBrZXlDYXA6ICd0VCcsIG5vcm1hbDogREVGQVVMVCwgY3RybDogY3RsKCdUJyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogODksIGtleUNhcDogJ3lZJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBjdGwoJ1knKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA4NSwga2V5Q2FwOiAndVUnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnVScpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDczLCBrZXlDYXA6ICdpSScsIG5vcm1hbDogREVGQVVMVCwgY3RybDogY3RsKCdJJyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNzksIGtleUNhcDogJ29PJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBjdGwoJ08nKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA4MCwga2V5Q2FwOiAncFAnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnUCcpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDIxOSwga2V5Q2FwOiAnW3snLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnWycpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDIyMSwga2V5Q2FwOiAnXX0nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnXScpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDIyMCwga2V5Q2FwOiAnXFxcXHwnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnXFxcXCcpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIC8vIGZvdXJ0aCByb3dcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMjAsIGtleUNhcDogJ1tDQVBTXScsIG5vcm1hbDogUEFTUywgY3RybDogUEFTUywgYWx0OiBQQVNTLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA2NSwga2V5Q2FwOiAnYUEnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnQScpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDgzLCBrZXlDYXA6ICdzUycsIG5vcm1hbDogREVGQVVMVCwgY3RybDogY3RsKCdTJyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNjgsIGtleUNhcDogJ2REJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBjdGwoJ0QnKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA3MCwga2V5Q2FwOiAnZkYnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnRicpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDcxLCBrZXlDYXA6ICdnRycsIG5vcm1hbDogREVGQVVMVCwgY3RybDogY3RsKCdHJyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNzIsIGtleUNhcDogJ2hIJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBjdGwoJ0gnKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA3NCwga2V5Q2FwOiAnakonLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnSicpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDc1LCBrZXlDYXA6ICdrSycsIG5vcm1hbDogREVGQVVMVCwgY3RybDogY3RsKCdLJyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNzYsIGtleUNhcDogJ2xMJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBjdGwoJ0wnKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxODYsIGtleUNhcDogJzs6Jywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBTVFJJUCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAyMjIsIGtleUNhcDogJ1xcJ1wiJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBTVFJJUCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMywga2V5Q2FwOiAnW0VOVEVSXScsIG5vcm1hbDogJ1xccicsIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgLy8gZmlmdGggcm93XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDE2LCBrZXlDYXA6ICdbU0hJRlRdJywgbm9ybWFsOiBQQVNTLCBjdHJsOiBQQVNTLCBhbHQ6IFBBU1MsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDkwLCBrZXlDYXA6ICd6WicsIG5vcm1hbDogREVGQVVMVCwgY3RybDogY3RsKCdaJyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogODgsIGtleUNhcDogJ3hYJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBjdGwoJ1gnKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA2Nywga2V5Q2FwOiAnY0MnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnQycpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IFBBU1MgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDg2LCBrZXlDYXA6ICd2VicsIG5vcm1hbDogREVGQVVMVCwgY3RybDogY3RsKCdWJyksIGFsdDogREVGQVVMVCwgbWV0YTogUEFTUyB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNjYsIGtleUNhcDogJ2JCJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBjdGwoJ0InKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA3OCwga2V5Q2FwOiAnbk4nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnTicpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDc3LCBrZXlDYXA6ICdtTScsIG5vcm1hbDogREVGQVVMVCwgY3RybDogY3RsKCdNJyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTg4LCBrZXlDYXA6ICcsPCcsIG5vcm1hbDogREVGQVVMVCwgY3RybDogYWx0KFNUUklQLCBQQVNTKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxOTAsIGtleUNhcDogJy4+Jywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBhbHQoU1RSSVAsIFBBU1MpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDE5MSwga2V5Q2FwOiAnLz8nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IHNoKGN0bCgnXycpLCBjdGwoJz8nKSksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgLy8gc2l4dGggcm93XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDE3LCBrZXlDYXA6ICdbQ1RSTF0nLCBub3JtYWw6IFBBU1MsIGN0cmw6IFBBU1MsIGFsdDogUEFTUywgbWV0YTogUEFTUyB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTgsIGtleUNhcDogJ1tBTFRdJywgbm9ybWFsOiBQQVNTLCBjdHJsOiBQQVNTLCBhbHQ6IFBBU1MsIG1ldGE6IFBBU1MgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDkxLCBrZXlDYXA6ICdbTEFQTF0nLCBub3JtYWw6IFBBU1MsIGN0cmw6IFBBU1MsIGFsdDogUEFTUywgbWV0YTogUEFTUyB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMzIsIGtleUNhcDogJyAnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnQCcpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDkzLCBrZXlDYXA6ICdbUkFQTF0nLCBub3JtYWw6IFBBU1MsIGN0cmw6IFBBU1MsIGFsdDogUEFTUywgbWV0YTogUEFTUyB9KTtcbiAgICAgICAgLy8gdGhlc2UgdGhpbmdzLlxuICAgICAgICBhZGQoeyBrZXlDb2RlOiA0Miwga2V5Q2FwOiAnW1BSVFNDUl0nLCBub3JtYWw6IFBBU1MsIGN0cmw6IFBBU1MsIGFsdDogUEFTUywgbWV0YTogUEFTUyB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTQ1LCBrZXlDYXA6ICdbU0NSTEtdJywgbm9ybWFsOiBQQVNTLCBjdHJsOiBQQVNTLCBhbHQ6IFBBU1MsIG1ldGE6IFBBU1MgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDE5LCBrZXlDYXA6ICdbQlJFQUtdJywgbm9ybWFsOiBQQVNTLCBjdHJsOiBQQVNTLCBhbHQ6IFBBU1MsIG1ldGE6IFBBU1MgfSk7XG4gICAgICAgIC8vIGJsb2NrIG9mIHNpeCBrZXlzIGFib3ZlIHRoZSBhcnJvd3NcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNDUsIGtleUNhcDogJ1tJTlNFUlRdJywgbm9ybWFsOiBleHBvcnRzLkNTSSArICcyficsIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMzYsIGtleUNhcDogJ1tIT01FXScsIG5vcm1hbDogZXhwb3J0cy5FU0MgKyAnT0gnLCBjdHJsOiBERUZBVUxULCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDMzLCBrZXlDYXA6ICdbUEdVUF0nLCBub3JtYWw6IGV4cG9ydHMuQ1NJICsgJzV+JywgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA0Niwga2V5Q2FwOiAnW0RFTF0nLCBub3JtYWw6IGV4cG9ydHMuQ1NJICsgJzN+JywgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAzNSwga2V5Q2FwOiAnW0VORF0nLCBub3JtYWw6IGV4cG9ydHMuRVNDICsgJ09GJywgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAzNCwga2V5Q2FwOiAnW1BHRE9XTl0nLCBub3JtYWw6IGV4cG9ydHMuQ1NJICsgJzZ+JywgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICAvLyBhcnJvdyBrZXlzXG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDM4LCBrZXlDYXA6ICdbVVBdJywgbm9ybWFsOiBhYyhleHBvcnRzLkNTSSArICdBJywgZXhwb3J0cy5TUzMgKyAnT0EnKSwgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA0MCwga2V5Q2FwOiAnW0RPV05dJywgbm9ybWFsOiBhYyhleHBvcnRzLkNTSSArICdCJywgZXhwb3J0cy5TUzMgKyAnT0InKSwgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAzOSwga2V5Q2FwOiAnW1JJR0hUXScsIG5vcm1hbDogYWMoZXhwb3J0cy5DU0kgKyAnQycsIGV4cG9ydHMuU1MzICsgJ0MnKSwgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAzNywga2V5Q2FwOiAnW0xFRlRdJywgbm9ybWFsOiBhYyhleHBvcnRzLkNTSSArICdEJywgZXhwb3J0cy5TUzMgKyAnRCcpLCBjdHJsOiBERUZBVUxULCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDE0NCwga2V5Q2FwOiAnW05VTUxPQ0tdJywgbm9ybWFsOiBQQVNTLCBjdHJsOiBQQVNTLCBhbHQ6IFBBU1MsIG1ldGE6IFBBU1MgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDEyLCBrZXlDYXA6ICdbQ0xFQVJdJywgbm9ybWFsOiBQQVNTLCBjdHJsOiBQQVNTLCBhbHQ6IFBBU1MsIG1ldGE6IFBBU1MgfSk7XG4gICAgICAgIC8vIGtleXBhZCB3aXRoIG51bWxvY2tcbiAgICAgICAgYWRkKHsga2V5Q29kZTogOTYsIGtleUNhcDogJ1tLUDBdJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBERUZBVUxULCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDk3LCBrZXlDYXA6ICdbS1AxXScsIG5vcm1hbDogREVGQVVMVCwgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA5OCwga2V5Q2FwOiAnW0tQMl0nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogOTksIGtleUNhcDogJ1tLUDNdJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBERUZBVUxULCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDEwMCwga2V5Q2FwOiAnW0tQNF0nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTAxLCBrZXlDYXA6ICdbS1A1XScsIG5vcm1hbDogREVGQVVMVCwgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMDIsIGtleUNhcDogJ1tLUDZdJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBERUZBVUxULCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDEwMywga2V5Q2FwOiAnW0tQN10nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTA0LCBrZXlDYXA6ICdbS1A4XScsIG5vcm1hbDogREVGQVVMVCwgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMDUsIGtleUNhcDogJ1tLUDldJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBERUZBVUxULCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDEwNywga2V5Q2FwOiAnW0tQK10nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IG9uWm9vbSwgYWx0OiBERUZBVUxULCBtZXRhOiBvblpvb20gfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDEwOSwga2V5Q2FwOiAnW0tQLV0nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IG9uWm9vbSwgYWx0OiBERUZBVUxULCBtZXRhOiBvblpvb20gfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDEwNiwga2V5Q2FwOiAnW0tQKl0nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTExLCBrZXlDYXA6ICdbS1AvXScsIG5vcm1hbDogREVGQVVMVCwgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMTAsIGtleUNhcDogJ1tLUC5dJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBERUZBVUxULCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gS2V5TWFwO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBVSUtleU1vZGlmaWVyQWxwaGFTaGlmdCA9IDEgPDwgMTY7IC8vIFRoaXMgYml0IGluZGljYXRlcyBDYXBzTG9ja1xuY29uc3QgVUlLZXlNb2RpZmllclNoaWZ0ID0gMSA8PCAxNztcbmNvbnN0IFVJS2V5TW9kaWZpZXJDb250cm9sID0gMSA8PCAxODtcbmNvbnN0IFVJS2V5TW9kaWZpZXJBbHRlcm5hdGUgPSAxIDw8IDE5O1xuY29uc3QgVUlLZXlNb2RpZmllckNvbW1hbmQgPSAxIDw8IDIwO1xuY29uc3QgVUlLZXlNb2RpZmllck51bWVyaWNQYWQgPSAxIDw8IDIxO1xuZnVuY3Rpb24gdG9VSUtpdEZsYWdzKGUsIGNhcHNLZXkgPSB0cnVlKSB7XG4gICAgbGV0IHJlcyA9IDA7XG4gICAgaWYgKGUuc2hpZnRLZXkpIHtcbiAgICAgICAgcmVzIHw9IFVJS2V5TW9kaWZpZXJTaGlmdDtcbiAgICB9XG4gICAgaWYgKGUuY3RybEtleSkge1xuICAgICAgICByZXMgfD0gVUlLZXlNb2RpZmllckNvbnRyb2w7XG4gICAgfVxuICAgIGlmIChlLmFsdEtleSkge1xuICAgICAgICByZXMgfD0gVUlLZXlNb2RpZmllckFsdGVybmF0ZTtcbiAgICB9XG4gICAgaWYgKGUubWV0YUtleSkge1xuICAgICAgICByZXMgfD0gVUlLZXlNb2RpZmllckNvbW1hbmQ7XG4gICAgfVxuICAgIGlmIChjYXBzS2V5KSB7XG4gICAgICAgIHJlcyB8PSBVSUtleU1vZGlmaWVyQWxwaGFTaGlmdDtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IHRvVUlLaXRGbGFncztcbiJdLCJzb3VyY2VSb290IjoiIn0=