!function(e){var t={};function a(o){if(t[o])return t[o].exports;var l=t[o]={i:o,l:!1,exports:{}};return e[o].call(l.exports,l,l.exports,a),l.l=!0,l.exports}a.m=e,a.c=t,a.d=function(e,t,o){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(a.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)a.d(o,l,function(t){return e[t]}.bind(null,l));return o},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=0)}([function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=new(a(1).default);document.body.append(o.element),o.focus(!0),window._onKB=o.onKB,window._kb=o,o.ready()},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=a(2),l=a(3),n=a(4),r=o.KBActions.CANCEL,s=o.KBActions.DEFAULT,i=o.KBActions.PASS,d=o.KBActions.STRIP;function c(e){switch(e){case"escape":return{keyCode:27,code:"[ESC]",key:"[ESC]"};case"tab":return{keyCode:9,code:"[TAB]",key:"[TAB]"};default:return null}}const y=new Set(["20:0","16:1","16:2","17:1","17:2","18:1","18:2","91:1","91:2","93:0"]),h="20:0";function m(e){let t=229==e.keyCode?0:e.keyCode,a=e.location;return t?`${t}:${a}`:`${t}:${a}:${(e.key||"").toLowerCase()}`}function p(e){e&&(e.preventDefault(),e.stopPropagation())}const k={KeyC:67,c:67,KeyI:73,i:73,KeyH:72,h:72,KeyM:77,m:77,BracketLeft:219,"[":77,KeyN:78,n:78,KeyU:85,u:85,KeyE:69,e:69};t.default=class{constructor(){this.element=document.createElement("input"),this._keyMap=new o.default(this),this._bindings=new n.default,this._lang="en",this.hasSelection=!1,this._lastKeyDownEvent=null,this._capsLockRemapped=!1,this._shiftRemapped=!1,this._removeAccents=!1,this._metaSendsEscape=!0,this._altSendsWhat="escape",this._ignoreAccents={AltLeft:!0,AltRight:!0},this._modsMap={ShiftLeft:"Shift",ShiftRight:"Shift",AltLeft:"Escape",AltRight:"Escape",MetaLeft:"Meta",MetaRight:"Meta",ControlLeft:"Control",ControlRight:"Control",CapsLock:""},this._downMap={},this._upMap={},this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set},this._up=new Set,this._down=new Set,this._captureMode=!1,this._voiceString="",this._updateUIKitModsIfNeeded=e=>{let t=e.code;if(this._capsLockRemapped){let a;a="keyup"==e.type&&"CapsLock"==t?0:l.toUIKitFlags(e),o.op("mods",{mods:a})}"AltLeft"!=t&&"AltRight"!=t||this._ignoreAccents[t]&&("keydown"==e.type?o.op("guard-ime-on",{}):o.op("guard-ime-off",{}),p(e))},this._onKeyDown=e=>{if(e.isComposing)return void(this._lastKeyDownEvent=null);let t=e;if(229===e.keyCode){if(!this._lastKeyDownEvent)return;t=this._lastKeyDownEvent}else this._lastKeyDownEvent=e;if(this._captureMode){let a=m+"-"+t.code;return this._down.add(a),this._capture(),this._updateUIKitModsIfNeeded(t),void p(e)}let a=m(t);this._down.add(a),console.log("down",this._down);let o=this._bindings.match(Array.from(this._down));if(y.has(a)||this._down.delete(a),o)return this._execBinding(o,e),void p(e);let l=this._downMap[a],n=this._mod(this._modsMap[t.code]),r=!1;l&&((r=!(n&&this._mods[n].has(a)))||(this._handleKeyDownKey(l,e),r=!0)),n&&this._mods[n].add(a),this._upMap[a]&&this._up.add(a),this._updateUIKitModsIfNeeded(t),r||this._handleKeyDown(t.keyCode,e)},this._onBeforeInput=e=>{"dictation"!=this._lang?("insertText"==e.inputType&&this._output(e.data),p(e)):this._voiceString=e.data},this._onInput=e=>p(e),this._onKeyUp=e=>{if(this._lastKeyDownEvent=null,this._captureMode){let t=m(e)+"-"+e.code;return this._down.delete(t),this._capture(),this._updateUIKitModsIfNeeded(e),void p(e)}let t=m(e);this._down.delete(t),console.log("up",t,this._down);let a=this._mod(this._modsMap[e.code]);a&&this._mods[a].delete(t),this._updateUIKitModsIfNeeded(e);let o=this._upMap[t];o&&this._up.has(t)&&this._handleKeyDownKey(o,null),p(e)},this._handleKeyDown=(e,t)=>{let a={keyCode:e,key:"",code:"Unidentified"};t&&(a.code=t.code,a.key=t.key),this._handleKeyDownKey(a,t)},this._handleKeyDownKey=(e,t)=>{let a=this._keyMap,o=this._mods.Alt.size>0,l=this._mods.Control.size>0,n=this._mods.Meta.size>0,c=this._mods.Shift.size>0,y=e.code,h=e.key,m=function(e,t){return t?(t.ctrlKey&&(9==t.keyCode&&"KeyI"==t.code||8==t.keyCode&&"KeyH"==t.code||13==t.keyCode&&"KeyC"==t.code||13==t.keyCode&&"KeyM"==t.code||27==t.keyCode&&"BracketLeft"==t.code)&&(e.keyCode=k[t.code]||e.keyCode),e):e}({key:h,code:y,keyCode:e.keyCode,alt:o,ctrl:l,meta:n,shift:c},t),C=a.getKeyDef(m.keyCode);var u=null;function _(e){u=e;var t=C[e];return"function"==typeof t&&(t=t.call(a,m,C)),t===s&&"normal"!=e&&(t=_("normal")),t}let f;if(f=_(l?"ctrl":o?"alt":n?"meta":"normal"),!this.hasSelection&&(f===i||f===s&&!(l||o||n))){if(f===i&&!e.src)return;if(/^\[\w+\]$/.test(C.keyCap)&&!e.src)return void(this._removeAccents=!1);let a=this._removeAccents?function(e){let t=e.normalize("NFD").replace(/[\u0300-\u036f]/g,""),a=t.replace(/^[\u02c6\u00a8\u00b4\u02dc\u0060]/,"");return a&&(t=a),t}(h):h;return this._removeAccents=!1,this._capsLockRemapped||this._shiftRemapped?this._output(c?a.toUpperCase():a.toLowerCase()):this._output(a),void p(t)}if(this._removeAccents=!1,f===d&&(o=l=!1,"function"==typeof(f=C.normal)&&(f=f.call(a,m,C)),f==s&&2==C.keyCap.length&&(f=C.keyCap.substr(c?1:0,1))),p(t),f!==r&&!this.hasSelection)if(f===s||"string"==typeof f){if("ctrl"==u?l=!1:"alt"==u?o=!1:"meta"==u&&(n=!1),c=m.shift,(o||l||c||n)&&"string"==typeof f&&"["==f.substr(0,2)){let e=1;c&&(e+=1),o&&(e+=2),l&&(e+=4),n&&(e+=8);let t=";"+e;f=3==f.length?"[1"+t+f.substr(2,1):f.substr(0,f.length-1)+t+f.substr(f.length-1)}else{if(f===s&&(f=C.keyCap.substr(c?1:0,1),l)){let e=C.keyCap.substr(0,1).charCodeAt(0);e>=64&&e<=95&&(f=String.fromCharCode(e-64))}let e=f.toString();if(o&&"8-bit"==this._altSendsWhat&&1==e.length){let t=e.charCodeAt(0)+128;f=String.fromCharCode(t)}(o&&"escape"==this._altSendsWhat||n&&this._metaSendsEscape)&&(f=""+e)}"string"==typeof f?this._output(f):console.warn("action is not a string",f)}else console.log("Invalid action: "+JSON.stringify(f))},this._onIME=e=>{let t=e.type,a=e.data||"";o.op("ime",{type:t,data:a}),"compositionend"==t&&this._output(a)},this._output=e=>{this._up.clear(),e&&o.op("out",{data:e})},this._capture=()=>o.op("capture",{keyIds:this._down.values}),this._configKey=e=>{let t=e.code,a=c(e.down);a&&(this._upMap[t.id]=a),this._mod(e.mod)&&(this._modsMap[t.code]=e.mod);let o=c(e.up);o&&(this._upMap[t.id]=o),"AltRight"!=t.code&&"AltLeft"!=t.code||(this._ignoreAccents[t.code]=e.ignoreAccents)},this._config=e=>{this._reset(),this._bindings.reset(),this._configKey(e.capsLock),this._configKey(e.command.left),this._configKey(e.command.right),this._configKey(e.control.left),this._configKey(e.control.right),this._configKey(e.option.left),this._configKey(e.option.right),this._configKey(e.shift.left),this._configKey(e.shift.right),this._bindings.expandFn(e.fn),this._bindings.expandCursor(e.cursor)},this._toggleCaptureMode=e=>this._captureMode=!!e,this._onToolbarMods=e=>{let t=l.UIKitFlagsToObject(e);t.alt?this._mods.Alt.add("alt"):this._mods.Alt.delete("alt"),t.ctrl?this._mods.Control.add("ctrl"):this._mods.Control.delete("ctrl"),t.shift?this._mods.Shift.add("shift"):this._mods.Shift.delete("shift"),t.meta?this._mods.Meta.add("meta"):this._mods.Meta.delete("meta")},this._onToolbarPress=e=>{let t=e.split(/:/g),a={keyCode:parseInt(t[0],10),key:t[2]||"",code:"",src:"toolbar"};this._handleKeyDownKey(a,null)},this.onKB=(e,t)=>{switch(e){case"mods-down":this._handleCapsLockDown(!0);break;case"mods-up":this._handleCapsLockDown(!1);break;case"lang":this._handleLang(t);break;case"guard-up":this._handleGuard(!0,t);break;case"guard-down":this._handleGuard(!1,t);break;case"selection":this.hasSelection=t;break;case"capture":this._toggleCaptureMode(t);break;case"toolbar-mods":this._onToolbarMods(t);break;case"toolbar-press":this._onToolbarPress(t);break;case"focus":this.focus(t);break;case"config":this._config(t)}};let e=this.element;e.setAttribute("autocomplete","off"),e.setAttribute("spellcheck","false"),e.setAttribute("autocorrect","off"),e.setAttribute("autocapitalize","none"),e.setAttribute("autofocus","true"),e.value=" ",e.addEventListener("keydown",this._onKeyDown),e.addEventListener("keyup",this._onKeyUp),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),e.addEventListener("compositionstart",this._onIME),e.addEventListener("compositionupdate",this._onIME),e.addEventListener("compositionend",this._onIME),e.addEventListener("beforeinput",this._onBeforeInput),e.addEventListener("input",this._onInput),this._capsLockRemapped=null!=this._modsMap.CapsLock||null!=this._downMap[h]||null!=this._upMap[h],this._shiftRemapped=null!=this._modsMap.Shift||"Shift"!==this._modsMap.Shift}_mod(e){switch(e){case"Escape":return this._altSendsWhat="escape","Alt";case"8-bit":return this._altSendsWhat="8-bit","Alt";case"Shift":return"Shift";case"Control":return"Control";case"Meta":return this._metaSendsEscape=!1,"Meta";case"Meta-Escape":return this._metaSendsEscape=!0,"Meta";default:return null}}focus(e){e?this.element.focus():this.element.blur()}ready(){o.op("ready",{})}_handleCapsLockDown(e){if(this._captureMode)return e?this._down.delete(h+"-capslock"):this._down.add(h+"-capslock"),void this._capture();let t=this._modsMap.CapsLock;if(e){this._down.add(h);let e=this._downMap[h];return!e||t&&this._mods[t].has(h)||this._handleKeyDownKey(e,null),t&&this._mods[t].add(h),void(this._upMap[h]&&this._up.add(h))}this._down.delete(h),t&&this._mods[t].delete(h);let a=this._upMap[h];a&&this._up.has(h)&&this._handleKeyDownKey(a,null)}_handleLang(e){this._down.clear(),this._up.clear(),this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set},this.element.value=" ",this._lang=e}_handleGuard(e,t){this.element.value=" ";let a=k[t||""]||0,o=`${a}:0`;this._captureMode&&(o+="-Key"+t.toUpperCase()),e?this._down.delete(o):this._down.add(o),this._captureMode?this._capture():e?this._removeAccents=!0:this._handleKeyDown(a,null)}_reset(){this.hasSelection=!1,this._removeAccents=!1,this._modsMap={},this._downMap={},this._upMap={},this._up.clear(),this._down.clear(),this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set},this._ignoreAccents={AltLeft:!0,AltRight:!0}}_execBinding(e,t){switch(e.type){case"hex":this._output(function(e){let t="",a=e.length;for(let o=0;o<a;o+=2)t+=String.fromCharCode(parseInt(e.substr(o,2),16));return t}(e.value));break;case"command":o.op("command",{command:e.value});break;case"press":let a=e.key,l=this._mods;this._mods={Shift:new Set,Alt:new Set,Meta:new Set,Control:new Set},e.shift&&this._mods.Shift.add("shift"),e.ctrl&&this._mods.Control.add("ctrl"),e.alt&&this._mods.Alt.add("alt"),e.meta&&this._mods.Meta.add("meta"),this._handleKeyDownKey(a,t),this._mods=l}}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=Symbol("CANCEL"),l=Symbol("DEFAULT"),n=Symbol("PASS"),r=Symbol("STRIP");function s(e,t){let a=Object.assign(Object.assign({},t),{op:e});window.webkit.messageHandlers._kb.postMessage(a)}t.KBActions={CANCEL:o,DEFAULT:l,PASS:n,STRIP:r},t.op=s;const i="",d="[",c="O",y="",h=e=>String.fromCharCode(e.charCodeAt(0)-64),m={keyCode:0,keyCap:"[UNKNOWN]",normal:n,ctrl:n,alt:n,meta:n};t.default=class{constructor(e){this._defs={},this._onCtrlNum=(e,t)=>{switch(t.keyCap.substr(0,1)){case"1":return"1";case"2":return h("@");case"3":return h("[");case"4":return h("\\");case"5":return h("]");case"6":return h("^");case"7":return h("_");case"8":return y;case"9":return"9";default:return n}},this._onAltNum=(e,t)=>l,this._onMetaNum=(e,t)=>l,this._onZoom=(e,t)=>o,this._onSel=(e,t)=>{if("[LEFT]"==t.keyCap||"hH"==t.keyCap){s("selection",{dir:"left",gran:e.shift?"word":"character"})}else if("[RIGHT]"==t.keyCap||"lL"==t.keyCap){s("selection",{dir:"right",gran:e.shift?"word":"character"})}else"[UP]"==t.keyCap||"kK"==t.keyCap?s("selection",{dir:"left",gran:"line"}):"[DOWN]"==t.keyCap||"jJ"==t.keyCap?s("selection",{dir:"right",gran:"line"}):"oO"==t.keyCap||"xX"==t.keyCap?s("selection",{command:"change"}):"nN"==t.keyCap&&e.ctrl?s("selection",{dir:"right",gran:"line"}):"pP"==t.keyCap?e.ctrl?s("selection",{dir:"left",gran:"line"}):e.shift||e.alt||e.meta||s("selection",{command:"paste"}):"bB"==t.keyCap?e.ctrl?s("selection",{dir:"left",gran:"character"}):(e.alt,s("selection",{dir:"left",gran:"word"})):"wW"==t.keyCap?e.alt?s("selection",{command:"copy"}):s("selection",{dir:"right",gran:"word"}):"fF"==t.keyCap?e.ctrl?s("selection",{dir:"right",gran:"character"}):e.alt&&s("selection",{dir:"right",gran:"word"}):"yY"==t.keyCap?s("selection",{command:"copy"}):"[ESC]"==t.keyCap&&s("selection",{command:"cancel"});return o},this._keyboard=e,this.reset()}getKeyDef(e){var t=this._defs[e];return t||(console.warn(`No definition for (keyCode ${e})`),t=m,this.addKeyDef(e,t),t)}addKeyDef(e,t){e in this._defs&&console.warn("Dup keyCode: ",e),this._defs[e]=t}reset(){this._defs={};const e=(e,t,a)=>"function"==typeof e?e.call(this,t,a):e,t=(t,a)=>(o,l)=>{let n=o.shift||o.ctrl||o.alt||o.meta?a:t;return e(n,o,l)},a=(t,a)=>(o,l)=>{let n=o.shift?a:t;return o.shift=!1,e(n,o,l)},o=(e,t)=>e,s=(t,a)=>(o,l)=>{let n=o.alt?t:a;return e(n,o,l)},p=(e,t)=>t,k=t=>(a,o)=>{let l=this._keyboard.hasSelection?this._onSel:t;return e(l,a,o)},C=e=>this.addKeyDef(e.keyCode,e);C(m),C({keyCode:27,keyCap:"[ESC]",normal:k(i),ctrl:l,alt:l,meta:l}),C({keyCode:112,keyCap:"[F1]",normal:t(c+"P",d+"P"),ctrl:l,alt:d+"23~",meta:l}),C({keyCode:113,keyCap:"[F2]",normal:t(c+"Q",d+"Q"),ctrl:l,alt:d+"24~",meta:l}),C({keyCode:114,keyCap:"[F3]",normal:t(c+"R",d+"R"),ctrl:l,alt:d+"25~",meta:l}),C({keyCode:115,keyCap:"[F4]",normal:t(c+"S",d+"S"),ctrl:l,alt:d+"26~",meta:l}),C({keyCode:116,keyCap:"[F5]",normal:d+"15~",ctrl:l,alt:d+"28~",meta:l}),C({keyCode:117,keyCap:"[F6]",normal:d+"17~",ctrl:l,alt:d+"29~",meta:l}),C({keyCode:118,keyCap:"[F7]",normal:d+"18~",ctrl:l,alt:d+"31~",meta:l}),C({keyCode:119,keyCap:"[F8]",normal:d+"19~",ctrl:l,alt:d+"32~",meta:l}),C({keyCode:120,keyCap:"[F9]",normal:d+"20~",ctrl:l,alt:d+"33~",meta:l}),C({keyCode:121,keyCap:"[F10]",normal:d+"21~",ctrl:l,alt:d+"34~",meta:l}),C({keyCode:122,keyCap:"[F11]",normal:d+"23~",ctrl:l,alt:d+"42~",meta:l}),C({keyCode:123,keyCap:"[F12]",normal:d+"24~",ctrl:l,alt:d+"43~",meta:l});const u=this._onCtrlNum,_=this._onAltNum,f=this._onMetaNum,g=this._onZoom;C({keyCode:192,keyCap:"`~",normal:l,ctrl:a(h("@"),h("^")),alt:l,meta:n}),C({keyCode:49,keyCap:"1!",normal:l,ctrl:u,alt:_,meta:f}),C({keyCode:50,keyCap:"2@",normal:l,ctrl:u,alt:_,meta:f}),C({keyCode:51,keyCap:"3#",normal:l,ctrl:u,alt:_,meta:f}),C({keyCode:52,keyCap:"4$",normal:l,ctrl:u,alt:_,meta:f}),C({keyCode:53,keyCap:"5%",normal:l,ctrl:u,alt:_,meta:f}),C({keyCode:54,keyCap:"6^",normal:l,ctrl:u,alt:_,meta:f}),C({keyCode:55,keyCap:"7&",normal:l,ctrl:u,alt:_,meta:f}),C({keyCode:56,keyCap:"8*",normal:l,ctrl:u,alt:_,meta:f}),C({keyCode:57,keyCap:"9(",normal:l,ctrl:u,alt:_,meta:f}),C({keyCode:48,keyCap:"0)",normal:l,ctrl:g,alt:_,meta:g}),C({keyCode:189,keyCap:"-_",normal:l,ctrl:a(g,h("_")),alt:l,meta:g}),C({keyCode:187,keyCap:"=+",normal:l,ctrl:g,alt:l,meta:g}),C({keyCode:8,keyCap:"[BKSP]",normal:o(y),ctrl:o("\b"),alt:l,meta:l}),C({keyCode:9,keyCap:"[TAB]",normal:a("\t",d+"Z"),ctrl:r,alt:n,meta:l}),C({keyCode:81,keyCap:"qQ",normal:l,ctrl:h("Q"),alt:l,meta:l}),C({keyCode:87,keyCap:"wW",normal:k(l),ctrl:h("W"),alt:k(l),meta:l}),C({keyCode:69,keyCap:"eE",normal:l,ctrl:h("E"),alt:l,meta:l}),C({keyCode:82,keyCap:"rR",normal:l,ctrl:h("R"),alt:l,meta:l}),C({keyCode:84,keyCap:"tT",normal:l,ctrl:h("T"),alt:l,meta:l}),C({keyCode:89,keyCap:"yY",normal:k(l),ctrl:h("Y"),alt:l,meta:l}),C({keyCode:85,keyCap:"uU",normal:l,ctrl:h("U"),alt:l,meta:l}),C({keyCode:73,keyCap:"iI",normal:l,ctrl:h("I"),alt:l,meta:l}),C({keyCode:79,keyCap:"oO",normal:k(l),ctrl:h("O"),alt:l,meta:l}),C({keyCode:80,keyCap:"pP",normal:k(l),ctrl:k(h("P")),alt:l,meta:l}),C({keyCode:219,keyCap:"[{",normal:l,ctrl:h("["),alt:l,meta:l}),C({keyCode:221,keyCap:"]}",normal:l,ctrl:h("]"),alt:l,meta:l}),C({keyCode:220,keyCap:"\\|",normal:l,ctrl:h("\\"),alt:l,meta:l}),C({keyCode:20,keyCap:"[CAPS]",normal:n,ctrl:n,alt:n,meta:l}),C({keyCode:65,keyCap:"aA",normal:l,ctrl:h("A"),alt:l,meta:l}),C({keyCode:83,keyCap:"sS",normal:l,ctrl:h("S"),alt:l,meta:l}),C({keyCode:68,keyCap:"dD",normal:l,ctrl:h("D"),alt:l,meta:l}),C({keyCode:70,keyCap:"fF",normal:l,ctrl:k(h("F")),alt:k(l),meta:l}),C({keyCode:71,keyCap:"gG",normal:l,ctrl:h("G"),alt:l,meta:l}),C({keyCode:72,keyCap:"hH",normal:k(l),ctrl:h("H"),alt:l,meta:l}),C({keyCode:74,keyCap:"jJ",normal:k(l),ctrl:h("J"),alt:l,meta:l}),C({keyCode:75,keyCap:"kK",normal:k(l),ctrl:h("K"),alt:l,meta:l}),C({keyCode:76,keyCap:"lL",normal:k(l),ctrl:h("L"),alt:l,meta:l}),C({keyCode:186,keyCap:";:",normal:l,ctrl:r,alt:l,meta:l}),C({keyCode:222,keyCap:"'\"",normal:l,ctrl:r,alt:l,meta:l}),C({keyCode:13,keyCap:"[ENTER]",normal:"\r",ctrl:l,alt:l,meta:l}),C({keyCode:16,keyCap:"[SHIFT]",normal:n,ctrl:n,alt:n,meta:l}),C({keyCode:90,keyCap:"zZ",normal:l,ctrl:h("Z"),alt:l,meta:l}),C({keyCode:88,keyCap:"xX",normal:k(l),ctrl:h("X"),alt:l,meta:l}),C({keyCode:67,keyCap:"cC",normal:l,ctrl:h("C"),alt:l,meta:n}),C({keyCode:86,keyCap:"vV",normal:l,ctrl:h("V"),alt:l,meta:n}),C({keyCode:66,keyCap:"bB",normal:k(l),ctrl:k(h("B")),alt:k(l),meta:l}),C({keyCode:78,keyCap:"nN",normal:l,ctrl:k(h("N")),alt:l,meta:l}),C({keyCode:77,keyCap:"mM",normal:l,ctrl:h("M"),alt:l,meta:l}),C({keyCode:188,keyCap:",<",normal:l,ctrl:s(r,n),alt:l,meta:l}),C({keyCode:190,keyCap:".>",normal:l,ctrl:s(r,n),alt:l,meta:l}),C({keyCode:191,keyCap:"/?",normal:l,ctrl:a(h("_"),h("?")),alt:l,meta:l}),C({keyCode:17,keyCap:"[CTRL]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:18,keyCap:"[OPT]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:91,keyCap:"[LCMD]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:32,keyCap:" ",normal:l,ctrl:h("@"),alt:l,meta:l}),C({keyCode:93,keyCap:"[RCMD]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:42,keyCap:"[PRTSCR]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:145,keyCap:"[SCRLK]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:19,keyCap:"[BREAK]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:45,keyCap:"[INSERT]",normal:d+"2~",ctrl:l,alt:l,meta:l}),C({keyCode:36,keyCap:"[HOME]",normal:i+"OH",ctrl:l,alt:l,meta:l}),C({keyCode:33,keyCap:"[PGUP]",normal:d+"5~",ctrl:l,alt:l,meta:l}),C({keyCode:46,keyCap:"[DEL]",normal:d+"3~",ctrl:l,alt:l,meta:l}),C({keyCode:35,keyCap:"[END]",normal:i+"OF",ctrl:l,alt:l,meta:l}),C({keyCode:34,keyCap:"[PGDOWN]",normal:d+"6~",ctrl:l,alt:l,meta:l}),C({keyCode:38,keyCap:"[UP]",normal:k(p(0,c+"A")),ctrl:l,alt:l,meta:l}),C({keyCode:40,keyCap:"[DOWN]",normal:k(p(0,c+"B")),ctrl:l,alt:l,meta:l}),C({keyCode:39,keyCap:"[RIGHT]",normal:k(p(0,c+"C")),ctrl:l,alt:l,meta:l}),C({keyCode:37,keyCap:"[LEFT]",normal:k(p(0,c+"D")),ctrl:l,alt:l,meta:l}),C({keyCode:144,keyCap:"[NUMLOCK]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:12,keyCap:"[CLEAR]",normal:n,ctrl:n,alt:n,meta:n}),C({keyCode:96,keyCap:"[KP0]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:97,keyCap:"[KP1]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:98,keyCap:"[KP2]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:99,keyCap:"[KP3]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:100,keyCap:"[KP4]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:101,keyCap:"[KP5]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:102,keyCap:"[KP6]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:103,keyCap:"[KP7]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:104,keyCap:"[KP8]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:105,keyCap:"[KP9]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:107,keyCap:"[KP+]",normal:l,ctrl:g,alt:l,meta:g}),C({keyCode:109,keyCap:"[KP-]",normal:l,ctrl:g,alt:l,meta:g}),C({keyCode:106,keyCap:"[KP*]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:111,keyCap:"[KP/]",normal:l,ctrl:l,alt:l,meta:l}),C({keyCode:110,keyCap:"[KP.]",normal:l,ctrl:l,alt:l,meta:l})}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=65536,l=1<<17,n=1<<18,r=1<<19,s=1<<20;t.toUIKitFlags=function(e,t=!0){let a=0;return e.shiftKey&&(a|=l),e.ctrlKey&&(a|=n),e.altKey&&(a|=r),e.metaKey&&(a|=s),t&&(a|=o),a},t.UIKitFlagsToObject=function(e){return{shift:(e&l)==l,alt:(e&r)==r,ctrl:(e&n)==n,meta:(e&s)==s}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=class{constructor(){this._stack=[],this._map={},this.expandFn=e=>{if(0==e.keys.length)return;let t=[{keyCode:121,key:"F10",code:"F10",id:"121:0"},{keyCode:112,key:"F1",code:"F1",id:"112:0"},{keyCode:113,key:"F2",code:"F2",id:"113:0"},{keyCode:114,key:"F3",code:"F3",id:"114:0"},{keyCode:115,key:"F4",code:"F4",id:"115:0"},{keyCode:116,key:"F5",code:"F5",id:"116:0"},{keyCode:117,key:"F6",code:"F6",id:"117:0"},{keyCode:118,key:"F7",code:"F7",id:"118:0"},{keyCode:119,key:"F8",code:"F8",id:"119:0"},{keyCode:120,key:"F9",code:"F9",id:"120:0"}],a=e.keys.slice();for(var o=0;o<10;o++){let l=o+48+":0",n=t[o];e.keys=a.slice(),e.keys.push(l),e.action={type:"press",key:n,alt:!1,shift:!1,ctrl:!1,meta:!1},this._expandBinding(e)}},this.expandCursor=e=>{if(0==e.keys.length)return;let t=[{keyCode:36,key:"HOME",code:"HOME",id:"36:0"},{keyCode:33,key:"PGUP",code:"PGUP",id:"33:0"},{keyCode:35,key:"END",code:"END",id:"35:0"},{keyCode:34,key:"PGDOWN",code:"PGDOWN",id:"34:0"}],a=["37:0","38:0","39:0","40:0"],o=e.keys.slice();for(var l=0;l<a.length;l++){let n=a[l],r=t[l];e.keys=o.slice(),e.keys.push(n),e.action={type:"press",key:r,alt:!1,shift:!1,ctrl:!1,meta:!1},this._expandBinding(e)}},this._expandBinding=e=>{var t=e.keys.map(e=>e.split("-")[0]);if(0==t.length)return;var a=[t.sort()],o=0;var l=[{idLeft:"16:1",idRight:"16:2",loc:e.shiftLoc},{idLeft:"17:1",idRight:"17:2",loc:e.controlLoc},{idLeft:"18:1",idRight:"18:2",loc:e.optionLoc},{idLeft:"91:1",idRight:"93:0",loc:e.commandLoc}];for(let e of l)for(o=a.length-1;o>=0;o--){var n=a[o];let t=n.indexOf(e.idLeft);if(t<0&&(t=n.indexOf(e.idRight)),t<0)continue;if(1==e.loc){n[t]=e.idLeft;continue}if(2==e.loc){n[t]=e.idRight;continue}n[t]=e.idLeft;let l=n.slice();l[t]=e.idRight,a.push(l)}for(let t of a){let a=t.sort().join(":");this._map[a]=e.action}}}reset(){this._stack=[],this._map={}}match(e){let t=e.sort().join(":");return this._map[t]}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9LZXlib2FyZC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvS2V5TWFwLnRzIiwid2VicGFjazovLy8uL3NyYy9VSUtleU1vZGlmaWVyRmxhZ3MudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0JpbmRpbmdzLnRzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwia2V5Ym9hcmQiLCJkZWZhdWx0IiwiZG9jdW1lbnQiLCJib2R5IiwiYXBwZW5kIiwiZWxlbWVudCIsImZvY3VzIiwid2luZG93IiwiX29uS0IiLCJvbktCIiwiX2tiIiwicmVhZHkiLCJLZXlNYXBfMSIsIlVJS2V5TW9kaWZpZXJGbGFnc18xIiwiQmluZGluZ3NfMSIsIkNBTkNFTCIsIktCQWN0aW9ucyIsIkRFRkFVTFQiLCJQQVNTIiwiU1RSSVAiLCJfYWN0aW9uIiwiYWN0aW9uIiwia2V5Q29kZSIsImNvZGUiLCJfaG9sZGVycyIsIlNldCIsIl9jYXBzTG9ja0lEIiwiX2tleUlkIiwiZSIsImxvYyIsImxvY2F0aW9uIiwidG9Mb3dlckNhc2UiLCJfYmxvY2tFdmVudCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiX2tleVRvQ29kZU1hcCIsIktleUMiLCJLZXlJIiwiS2V5SCIsImgiLCJLZXlNIiwiQnJhY2tldExlZnQiLCJLZXlOIiwiS2V5VSIsInUiLCJLZXlFIiwidGhpcyIsImNyZWF0ZUVsZW1lbnQiLCJfa2V5TWFwIiwiX2JpbmRpbmdzIiwiX2xhbmciLCJoYXNTZWxlY3Rpb24iLCJfbGFzdEtleURvd25FdmVudCIsIl9jYXBzTG9ja1JlbWFwcGVkIiwiX3NoaWZ0UmVtYXBwZWQiLCJfcmVtb3ZlQWNjZW50cyIsIl9tZXRhU2VuZHNFc2NhcGUiLCJfYWx0U2VuZHNXaGF0IiwiX2lnbm9yZUFjY2VudHMiLCJBbHRMZWZ0IiwiQWx0UmlnaHQiLCJfbW9kc01hcCIsIlNoaWZ0TGVmdCIsIlNoaWZ0UmlnaHQiLCJNZXRhTGVmdCIsIk1ldGFSaWdodCIsIkNvbnRyb2xMZWZ0IiwiQ29udHJvbFJpZ2h0IiwiQ2Fwc0xvY2siLCJfZG93bk1hcCIsIl91cE1hcCIsIl9tb2RzIiwiU2hpZnQiLCJBbHQiLCJNZXRhIiwiQ29udHJvbCIsIl91cCIsIl9kb3duIiwiX2NhcHR1cmVNb2RlIiwiX3ZvaWNlU3RyaW5nIiwiX3VwZGF0ZVVJS2l0TW9kc0lmTmVlZGVkIiwibW9kcyIsInR5cGUiLCJ0b1VJS2l0RmxhZ3MiLCJvcCIsIl9vbktleURvd24iLCJpc0NvbXBvc2luZyIsImV2ZW50Iiwia2V5SWQiLCJhZGQiLCJfY2FwdHVyZSIsImNvbnNvbGUiLCJsb2ciLCJiaW5kaW5nIiwibWF0Y2giLCJBcnJheSIsImZyb20iLCJoYXMiLCJkZWxldGUiLCJfZXhlY0JpbmRpbmciLCJkb3duT3ZlcnJpZGUiLCJtb2QiLCJfbW9kIiwiaGFuZGxlZCIsIl9oYW5kbGVLZXlEb3duS2V5IiwiX2hhbmRsZUtleURvd24iLCJfb25CZWZvcmVJbnB1dCIsImlucHV0VHlwZSIsIl9vdXRwdXQiLCJkYXRhIiwiX29uSW5wdXQiLCJfb25LZXlVcCIsInVwT3ZlcnJpZGUiLCJrZXlJbmZvIiwia2V5TWFwIiwiYWx0Iiwic2l6ZSIsImN0cmwiLCJtZXRhIiwic2hpZnQiLCJrZXlEb3duIiwiY3RybEtleSIsIl9wYXRjaEtleURvd24iLCJrZXlEZWYiLCJnZXRLZXlEZWYiLCJyZXNvbHZlZEFjdGlvblR5cGUiLCJnZXRBY3Rpb24iLCJzcmMiLCJ0ZXN0Iiwia2V5Q2FwIiwib3V0Iiwic3RyIiwicmVzIiwibm9ybWFsaXplIiwicmVwbGFjZSIsInRtcCIsInRvVXBwZXJDYXNlIiwibm9ybWFsIiwibGVuZ3RoIiwic3Vic3RyIiwiaW1vZCIsImNoYXJDb2RlQXQiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJhY3Rpb25TdHIiLCJ0b1N0cmluZyIsIndhcm4iLCJKU09OIiwic3RyaW5naWZ5IiwiX29uSU1FIiwiY2xlYXIiLCJrZXlJZHMiLCJ2YWx1ZXMiLCJfY29uZmlnS2V5IiwiZG93biIsImlkIiwidXAiLCJpZ25vcmVBY2NlbnRzIiwiX2NvbmZpZyIsImNmZyIsIl9yZXNldCIsInJlc2V0IiwiY2Fwc0xvY2siLCJjb21tYW5kIiwibGVmdCIsInJpZ2h0IiwiY29udHJvbCIsIm9wdGlvbiIsImV4cGFuZEZuIiwiZm4iLCJleHBhbmRDdXJzb3IiLCJjdXJzb3IiLCJfdG9nZ2xlQ2FwdHVyZU1vZGUiLCJ2YWwiLCJfb25Ub29sYmFyTW9kcyIsImZsYWdzIiwiVUlLaXRGbGFnc1RvT2JqZWN0IiwiX29uVG9vbGJhclByZXNzIiwicGFydHMiLCJzcGxpdCIsInBhcnNlSW50IiwiY21kIiwiYXJnIiwiX2hhbmRsZUNhcHNMb2NrRG93biIsIl9oYW5kbGVMYW5nIiwiX2hhbmRsZUd1YXJkIiwiaW5wdXQiLCJzZXRBdHRyaWJ1dGUiLCJhZGRFdmVudExpc3RlbmVyIiwiYmx1ciIsIm92ZXJyaWRlIiwibGFuZyIsImNoYXIiLCJoZXgiLCJsZW4iLCJoZXhfdG9fYXNjaWkiLCJhcmdzIiwibWVzc2FnZSIsImFzc2lnbiIsIndlYmtpdCIsIm1lc3NhZ2VIYW5kbGVycyIsInBvc3RNZXNzYWdlIiwiRVNDIiwiQ1NJIiwiU1MzIiwiREVMIiwiY3RsIiwiY2giLCJfdW5rbm93bktleURlZiIsIl9kZWZzIiwiX29uQ3RybE51bSIsImRlZiIsIl9vbkFsdE51bSIsIl9vbk1ldGFOdW0iLCJfb25ab29tIiwiX29uU2VsIiwiZGlyIiwiZ3JhbiIsIl9rZXlib2FyZCIsImFkZEtleURlZiIsInJlc29sdmUiLCJrIiwiYSIsImIiLCJzaCIsImJzIiwiYWMiLCJzbCIsIm9uQ3RybE51bSIsIm9uQWx0TnVtIiwib25NZXRhTnVtIiwib25ab29tIiwiVUlLZXlNb2RpZmllckFscGhhU2hpZnQiLCJVSUtleU1vZGlmaWVyU2hpZnQiLCJVSUtleU1vZGlmaWVyQ29udHJvbCIsIlVJS2V5TW9kaWZpZXJBbHRlcm5hdGUiLCJVSUtleU1vZGlmaWVyQ29tbWFuZCIsImNhcHNLZXkiLCJzaGlmdEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJfc3RhY2siLCJfbWFwIiwia2V5cyIsImZucyIsInNsaWNlIiwibnVtSWQiLCJwdXNoIiwiX2V4cGFuZEJpbmRpbmciLCJhcnJvd3MiLCJhcnJvdyIsImN1ciIsIm1hcCIsInNvcnQiLCJkb3VibGVLZXlzIiwiaWRMZWZ0IiwiaWRSaWdodCIsInNoaWZ0TG9jIiwiY29udHJvbExvYyIsIm9wdGlvbkxvYyIsImNvbW1hbmRMb2MiLCJyb3ciLCJpZHgiLCJpbmRleE9mIiwiam9pbiIsImtleXNQYXRoIl0sIm1hcHBpbmdzIjoiYUFDRSxJQUFJQSxFQUFtQixHQUd2QixTQUFTQyxFQUFvQkMsR0FHNUIsR0FBR0YsRUFBaUJFLEdBQ25CLE9BQU9GLEVBQWlCRSxHQUFVQyxRQUduQyxJQUFJQyxFQUFTSixFQUFpQkUsR0FBWSxDQUN6Q0csRUFBR0gsRUFDSEksR0FBRyxFQUNISCxRQUFTLElBVVYsT0FOQUksRUFBUUwsR0FBVU0sS0FBS0osRUFBT0QsUUFBU0MsRUFBUUEsRUFBT0QsUUFBU0YsR0FHL0RHLEVBQU9FLEdBQUksRUFHSkYsRUFBT0QsUUFLZkYsRUFBb0JRLEVBQUlGLEVBR3hCTixFQUFvQlMsRUFBSVYsRUFHeEJDLEVBQW9CVSxFQUFJ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RixLQUFNcEcsRUFBU2tHLElBQUt3RixFQUFNLE1BQU9yRixLQUFNckcsSUFDOUd3RSxFQUFJLENBQUVuRSxRQUFTLElBQUsyRyxPQUFRLE9BQVFRLE9BQVFrRSxFQUFNLE1BQU90RixLQUFNcEcsRUFBU2tHLElBQUt3RixFQUFNLE1BQU9yRixLQUFNckcsSUFDaEd3RSxFQUFJLENBQUVuRSxRQUFTLElBQUsyRyxPQUFRLE9BQVFRLE9BQVFrRSxFQUFNLE1BQU90RixLQUFNcEcsRUFBU2tHLElBQUt3RixFQUFNLE1BQU9yRixLQUFNckcsSUFDaEd3RSxFQUFJLENBQUVuRSxRQUFTLElBQUsyRyxPQUFRLE9BQVFRLE9BQVFrRSxFQUFNLE1BQU90RixLQUFNcEcsRUFBU2tHLElBQUt3RixFQUFNLE1BQU9yRixLQUFNckcsSUFDaEd3RSxFQUFJLENBQUVuRSxRQUFTLElBQUsyRyxPQUFRLE9BQVFRLE9BQVFrRSxFQUFNLE1BQU90RixLQUFNcEcsRUFBU2tHLElBQUt3RixFQUFNLE1BQU9yRixLQUFNckcsSUFDaEd3RSxFQUFJLENBQUVuRSxRQUFTLElBQUsyRyxPQUFRLE9BQVFRLE9BQVFrRSxFQUFNLE1BQU90RixLQUFNcEcsRUFBU2tHLElBQUt3RixFQUFNLE1BQU9yRixLQUFNckcsSUFDaEd3RSxFQUFJLENBQUVuRSxRQUFTLElBQUsyRyxPQUFRLFFBQVNRLE9BQVFrRSxFQUFNLE1BQU90RixLQUFNcEcsRUFBU2tHLElBQUt3RixFQUFNLE1BQU9yRixLQUFNckcsSUFDakd3RSxFQUFJLENBQUVuRSxRQUFTLElBQUsyRyxPQUFRLFFBQVNRLE9BQVFrRSxFQUFNLE1BQU90RixLQUFNcEcsRUFBU2tHLElBQUt3RixFQUFNLE1BQU9yRixLQUFNckcsSUFDakd3RSxFQUFJLENBQUVuRSxRQUFTLElBQUsyRyxPQUFRLFFBQVNRLE9BQVFrRSxFQUFNLE1BQU90RixLQUFNcEcsRUFBU2tHLElBQUt3RixFQUFNLE1BQU9yRixLQUFNckcsSUFDakcsTUFBTW1OLEVBQVl0TCxLQUFLb0ssV0FDakJtQixFQUFXdkws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QUFLdUIiLCJmaWxlIjoia2IuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMCk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IEtleWJvYXJkXzEgPSByZXF1aXJlKFwiLi9LZXlib2FyZFwiKTtcbnZhciBrZXlib2FyZCA9IG5ldyBLZXlib2FyZF8xLmRlZmF1bHQoKTtcbmZ1bmN0aW9uIGluc3RhbGwoKSB7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmQoa2V5Ym9hcmQuZWxlbWVudCk7XG4gICAga2V5Ym9hcmQuZm9jdXModHJ1ZSk7XG4gICAgd2luZG93Ll9vbktCID0ga2V5Ym9hcmQub25LQjtcbiAgICB3aW5kb3cuX2tiID0ga2V5Ym9hcmQ7XG4gICAga2V5Ym9hcmQucmVhZHkoKTtcbn1cbmluc3RhbGwoKTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgS2V5TWFwXzEgPSByZXF1aXJlKFwiLi9LZXlNYXBcIik7XG5jb25zdCBVSUtleU1vZGlmaWVyRmxhZ3NfMSA9IHJlcXVpcmUoXCIuL1VJS2V5TW9kaWZpZXJGbGFnc1wiKTtcbmNvbnN0IEJpbmRpbmdzXzEgPSByZXF1aXJlKFwiLi9CaW5kaW5nc1wiKTtcbmNvbnN0IENBTkNFTCA9IEtleU1hcF8xLktCQWN0aW9ucy5DQU5DRUw7XG5jb25zdCBERUZBVUxUID0gS2V5TWFwXzEuS0JBY3Rpb25zLkRFRkFVTFQ7XG5jb25zdCBQQVNTID0gS2V5TWFwXzEuS0JBY3Rpb25zLlBBU1M7XG5jb25zdCBTVFJJUCA9IEtleU1hcF8xLktCQWN0aW9ucy5TVFJJUDtcbmZ1bmN0aW9uIGhleF90b19hc2NpaShoZXgpIHtcbiAgICBsZXQgc3RyID0gJyc7XG4gICAgbGV0IGxlbiA9IGhleC5sZW5ndGg7XG4gICAgZm9yIChsZXQgbiA9IDA7IG4gPCBsZW47IG4gKz0gMikge1xuICAgICAgICBzdHIgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludChoZXguc3Vic3RyKG4sIDIpLCAxNikpO1xuICAgIH1cbiAgICByZXR1cm4gc3RyO1xufVxuZnVuY3Rpb24gX2FjdGlvbihhY3Rpb24pIHtcbiAgICBzd2l0Y2ggKGFjdGlvbikge1xuICAgICAgICBjYXNlICdlc2NhcGUnOlxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBrZXlDb2RlOiAyNyxcbiAgICAgICAgICAgICAgICBjb2RlOiAnW0VTQ10nLFxuICAgICAgICAgICAgICAgIGtleTogJ1tFU0NdJyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgJ3RhYic6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGtleUNvZGU6IDksXG4gICAgICAgICAgICAgICAgY29kZTogJ1tUQUJdJyxcbiAgICAgICAgICAgICAgICBrZXk6ICdbVEFCXScsXG4gICAgICAgICAgICB9O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuY29uc3QgX2hvbGRlcnMgPSBuZXcgU2V0KFtcbiAgICAnMjA6MCcsXG4gICAgJzE2OjEnLFxuICAgICcxNjoyJyxcbiAgICAnMTc6MScsXG4gICAgJzE3OjInLFxuICAgICcxODoxJyxcbiAgICAnMTg6MicsXG4gICAgJzkxOjEnLFxuICAgICc5MToyJyxcbiAgICAnOTM6MCcsXG5dKTtcbmNvbnN0IF9jYXBzTG9ja0lEID0gJzIwOjAnO1xuLy8gV2UgdHJhY2sga2V5IGJ5IGtleUNvZGUsIGNvZGUsIGxvY2F0aW9uIGFuZCBrZXlcbmZ1bmN0aW9uIF9rZXlJZChlKSB7XG4gICAgbGV0IGtleUNvZGUgPSBlLmtleUNvZGUgPT0gMjI5ID8gMCA6IGUua2V5Q29kZTtcbiAgICBsZXQgbG9jID0gZS5sb2NhdGlvbjtcbiAgICBpZiAoa2V5Q29kZSkge1xuICAgICAgICAvLyB3ZSBjYW4gaWRlbnRpdGZ5IHdpdGggcGFpciBrZXlDb2RlIGFuZCBsb2NcbiAgICAgICAgcmV0dXJuIGAke2tleUNvZGV9OiR7bG9jfWA7XG4gICAgfVxuICAgIGxldCBrZXkgPSAoZS5rZXkgfHwgJycpLnRvTG93ZXJDYXNlKCk7XG4gICAgcmV0dXJuIGAke2tleUNvZGV9OiR7bG9jfToke2tleX1gO1xufVxuZnVuY3Rpb24gX3JlbW92ZUFjY2VudHMoc3RyKSB7XG4gICAgbGV0IHJlcyA9IHN0ci5ub3JtYWxpemUoJ05GRCcpLnJlcGxhY2UoL1tcXHUwMzAwLVxcdTAzNmZdL2csICcnKTtcbiAgICBsZXQgdG1wID0gcmVzLnJlcGxhY2UoL15bXFx1MDJjNlxcdTAwYThcXHUwMGI0XFx1MDJkY1xcdTAwNjBdLywgJycpO1xuICAgIGlmICh0bXApIHtcbiAgICAgICAgcmVzID0gdG1wO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xufVxuZnVuY3Rpb24gX2Jsb2NrRXZlbnQoZSkge1xuICAgIGlmIChlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9XG59XG5jb25zdCBfa2V5VG9Db2RlTWFwID0ge1xuICAgIEtleUM6IDY3LFxuICAgIGM6IDY3LFxuICAgIEtleUk6IDczLFxuICAgIGk6IDczLFxuICAgIEtleUg6IDcyLFxuICAgIGg6IDcyLFxuICAgIEtleU06IDc3LFxuICAgIG06IDc3LFxuICAgIEJyYWNrZXRMZWZ0OiAyMTksXG4gICAgJ1snOiA3NyxcbiAgICBLZXlOOiA3OCxcbiAgICBuOiA3OCxcbiAgICBLZXlVOiA4NSxcbiAgICB1OiA4NSxcbiAgICBLZXlFOiA2OSxcbiAgICBlOiA2OSxcbn07XG5mdW5jdGlvbiBfcGF0Y2hLZXlEb3duKGtleURvd24sIGUpIHtcbiAgICBpZiAoIWUpIHtcbiAgICAgICAgcmV0dXJuIGtleURvd247XG4gICAgfVxuICAgIGlmIChlLmN0cmxLZXkpIHtcbiAgICAgICAgaWYgKChlLmtleUNvZGUgPT0gOSAmJiBlLmNvZGUgPT0gJ0tleUknKSB8fFxuICAgICAgICAgICAgKGUua2V5Q29kZSA9PSA4ICYmIGUuY29kZSA9PSAnS2V5SCcpIHx8XG4gICAgICAgICAgICAoZS5rZXlDb2RlID09IDEzICYmIGUuY29kZSA9PSAnS2V5QycpIHx8XG4gICAgICAgICAgICAoZS5rZXlDb2RlID09IDEzICYmIGUuY29kZSA9PSAnS2V5TScpIHx8XG4gICAgICAgICAgICAoZS5rZXlDb2RlID09IDI3ICYmIGUuY29kZSA9PSAnQnJhY2tldExlZnQnKSkge1xuICAgICAgICAgICAga2V5RG93bi5rZXlDb2RlID0gX2tleVRvQ29kZU1hcFtlLmNvZGVdIHx8IGtleURvd24ua2V5Q29kZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ga2V5RG93bjtcbn1cbmNsYXNzIEtleWJvYXJkIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgICAgdGhpcy5fa2V5TWFwID0gbmV3IEtleU1hcF8xLmRlZmF1bHQodGhpcyk7XG4gICAgICAgIHRoaXMuX2JpbmRpbmdzID0gbmV3IEJpbmRpbmdzXzEuZGVmYXVsdCgpO1xuICAgICAgICB0aGlzLl9sYW5nID0gJ2VuJztcbiAgICAgICAgdGhpcy5oYXNTZWxlY3Rpb24gPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fbGFzdEtleURvd25FdmVudCA9IG51bGw7XG4gICAgICAgIHRoaXMuX2NhcHNMb2NrUmVtYXBwZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fc2hpZnRSZW1hcHBlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9yZW1vdmVBY2NlbnRzID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX21ldGFTZW5kc0VzY2FwZSA9IHRydWU7XG4gICAgICAgIHRoaXMuX2FsdFNlbmRzV2hhdCA9ICdlc2NhcGUnO1xuICAgICAgICB0aGlzLl9pZ25vcmVBY2NlbnRzID0ge1xuICAgICAgICAgICAgQWx0TGVmdDogdHJ1ZSxcbiAgICAgICAgICAgIEFsdFJpZ2h0OiB0cnVlLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9tb2RzTWFwID0ge1xuICAgICAgICAgICAgU2hpZnRMZWZ0OiAnU2hpZnQnLFxuICAgICAgICAgICAgU2hpZnRSaWdodDogJ1NoaWZ0JyxcbiAgICAgICAgICAgIEFsdExlZnQ6ICdFc2NhcGUnLFxuICAgICAgICAgICAgQWx0UmlnaHQ6ICdFc2NhcGUnLFxuICAgICAgICAgICAgTWV0YUxlZnQ6ICdNZXRhJyxcbiAgICAgICAgICAgIE1ldGFSaWdodDogJ01ldGEnLFxuICAgICAgICAgICAgQ29udHJvbExlZnQ6ICdDb250cm9sJyxcbiAgICAgICAgICAgIENvbnRyb2xSaWdodDogJ0NvbnRyb2wnLFxuICAgICAgICAgICAgQ2Fwc0xvY2s6ICcnLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9kb3duTWFwID0ge307XG4gICAgICAgIHRoaXMuX3VwTWFwID0ge307XG4gICAgICAgIHRoaXMuX21vZHMgPSB7XG4gICAgICAgICAgICBTaGlmdDogbmV3IFNldCgpLFxuICAgICAgICAgICAgQWx0OiBuZXcgU2V0KCksXG4gICAgICAgICAgICBNZXRhOiBuZXcgU2V0KCksXG4gICAgICAgICAgICBDb250cm9sOiBuZXcgU2V0KCksXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX3VwID0gbmV3IFNldCgpO1xuICAgICAgICAvLyBjdXN0b20gc2hvcnRjdXRzIHRyYWNrZXJcbiAgICAgICAgdGhpcy5fZG93biA9IG5ldyBTZXQoKTtcbiAgICAgICAgLy8gUmVwb3J0cyBldmVyeSBrZXkgZG93blxuICAgICAgICB0aGlzLl9jYXB0dXJlTW9kZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLl92b2ljZVN0cmluZyA9ICcnO1xuICAgICAgICB0aGlzLl91cGRhdGVVSUtpdE1vZHNJZk5lZWRlZCA9IChlKSA9PiB7XG4gICAgICAgICAgICBsZXQgY29kZSA9IGUuY29kZTtcbiAgICAgICAgICAgIGlmICh0aGlzLl9jYXBzTG9ja1JlbWFwcGVkKSB7XG4gICAgICAgICAgICAgICAgbGV0IG1vZHM7XG4gICAgICAgICAgICAgICAgaWYgKGUudHlwZSA9PSAna2V5dXAnICYmIGNvZGUgPT0gJ0NhcHNMb2NrJykge1xuICAgICAgICAgICAgICAgICAgICBtb2RzID0gMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG1vZHMgPSBVSUtleU1vZGlmaWVyRmxhZ3NfMS50b1VJS2l0RmxhZ3MoZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIEtleU1hcF8xLm9wKCdtb2RzJywgeyBtb2RzOiBtb2RzIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNvZGUgPT0gJ0FsdExlZnQnIHx8IGNvZGUgPT0gJ0FsdFJpZ2h0Jykge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9pZ25vcmVBY2NlbnRzW2NvZGVdKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlLnR5cGUgPT0gJ2tleWRvd24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBLZXlNYXBfMS5vcCgnZ3VhcmQtaW1lLW9uJywge30pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgS2V5TWFwXzEub3AoJ2d1YXJkLWltZS1vZmYnLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgX2Jsb2NrRXZlbnQoZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9vbktleURvd24gPSAoZSkgPT4ge1xuICAgICAgICAgICAgaWYgKGUuaXNDb21wb3NpbmcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9sYXN0S2V5RG93bkV2ZW50ID0gbnVsbDtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgZXZlbnQgPSBlO1xuICAgICAgICAgICAgLy8gaU9TIHNlbmRzIDIyOSBzb21ldGltZXMgZm9yIHJlcGVhdGVkIGV2ZW50c1xuICAgICAgICAgICAgaWYgKGUua2V5Q29kZSA9PT0gMjI5KSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2xhc3RLZXlEb3duRXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQgPSB0aGlzLl9sYXN0S2V5RG93bkV2ZW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gZGVhZFxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbGFzdEtleURvd25FdmVudCA9IGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5fY2FwdHVyZU1vZGUpIHtcbiAgICAgICAgICAgICAgICBsZXQga2V5SWQgPSBfa2V5SWQgKyAnLScgKyBldmVudC5jb2RlO1xuICAgICAgICAgICAgICAgIHRoaXMuX2Rvd24uYWRkKGtleUlkKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9jYXB0dXJlKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fdXBkYXRlVUlLaXRNb2RzSWZOZWVkZWQoZXZlbnQpO1xuICAgICAgICAgICAgICAgIF9ibG9ja0V2ZW50KGUpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBrZXlJZCA9IF9rZXlJZChldmVudCk7XG4gICAgICAgICAgICB0aGlzLl9kb3duLmFkZChrZXlJZCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnZG93bicsIHRoaXMuX2Rvd24pO1xuICAgICAgICAgICAgbGV0IGJpbmRpbmcgPSB0aGlzLl9iaW5kaW5ncy5tYXRjaChBcnJheS5mcm9tKHRoaXMuX2Rvd24pKTtcbiAgICAgICAgICAgIGlmICghX2hvbGRlcnMuaGFzKGtleUlkKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2Rvd24uZGVsZXRlKGtleUlkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChiaW5kaW5nKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZXhlY0JpbmRpbmcoYmluZGluZywgZSk7XG4gICAgICAgICAgICAgICAgX2Jsb2NrRXZlbnQoZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IGRvd25PdmVycmlkZSA9IHRoaXMuX2Rvd25NYXBba2V5SWRdO1xuICAgICAgICAgICAgbGV0IG1vZCA9IHRoaXMuX21vZCh0aGlzLl9tb2RzTWFwW2V2ZW50LmNvZGVdKTtcbiAgICAgICAgICAgIGxldCBoYW5kbGVkID0gZmFsc2U7XG4gICAgICAgICAgICBpZiAoZG93bk92ZXJyaWRlKSB7XG4gICAgICAgICAgICAgICAgaGFuZGxlZCA9ICEobW9kICYmIHRoaXMuX21vZHNbbW9kXS5oYXMoa2V5SWQpKTtcbiAgICAgICAgICAgICAgICBpZiAoIWhhbmRsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faGFuZGxlS2V5RG93bktleShkb3duT3ZlcnJpZGUsIGUpO1xuICAgICAgICAgICAgICAgICAgICBoYW5kbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobW9kKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW9kc1ttb2RdLmFkZChrZXlJZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgdXBPdmVycmlkZSA9IHRoaXMuX3VwTWFwW2tleUlkXTtcbiAgICAgICAgICAgIGlmICh1cE92ZXJyaWRlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fdXAuYWRkKGtleUlkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX3VwZGF0ZVVJS2l0TW9kc0lmTmVlZGVkKGV2ZW50KTtcbiAgICAgICAgICAgIGlmICghaGFuZGxlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2hhbmRsZUtleURvd24oZXZlbnQua2V5Q29kZSwgZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX29uQmVmb3JlSW5wdXQgPSAoZSkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2xhbmcgPT0gJ2RpY3RhdGlvbicpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl92b2ljZVN0cmluZyA9IGUuZGF0YTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChlLmlucHV0VHlwZSA9PSAnaW5zZXJ0VGV4dCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9vdXRwdXQoZS5kYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF9ibG9ja0V2ZW50KGUpO1xuICAgICAgICB9O1xuICAgICAgICAvLyBwcmV2ZW50IHNpbXBsZSBpbnB1dCBmb3IgSU1FIG1vZGUgKGxpa2UgMSwgMiwgMyBrZXlzKVxuICAgICAgICB0aGlzLl9vbklucHV0ID0gKGUpID0+IF9ibG9ja0V2ZW50KGUpO1xuICAgICAgICB0aGlzLl9vbktleVVwID0gKGUpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2xhc3RLZXlEb3duRXZlbnQgPSBudWxsO1xuICAgICAgICAgICAgaWYgKHRoaXMuX2NhcHR1cmVNb2RlKSB7XG4gICAgICAgICAgICAgICAgbGV0IGtleUlkID0gX2tleUlkKGUpICsgJy0nICsgZS5jb2RlO1xuICAgICAgICAgICAgICAgIHRoaXMuX2Rvd24uZGVsZXRlKGtleUlkKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9jYXB0dXJlKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fdXBkYXRlVUlLaXRNb2RzSWZOZWVkZWQoZSk7XG4gICAgICAgICAgICAgICAgX2Jsb2NrRXZlbnQoZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IGtleUlkID0gX2tleUlkKGUpO1xuICAgICAgICAgICAgdGhpcy5fZG93bi5kZWxldGUoa2V5SWQpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ3VwJywga2V5SWQsIHRoaXMuX2Rvd24pO1xuICAgICAgICAgICAgbGV0IG1vZCA9IHRoaXMuX21vZCh0aGlzLl9tb2RzTWFwW2UuY29kZV0pO1xuICAgICAgICAgICAgaWYgKG1vZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX21vZHNbbW9kXS5kZWxldGUoa2V5SWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fdXBkYXRlVUlLaXRNb2RzSWZOZWVkZWQoZSk7XG4gICAgICAgICAgICBsZXQgdXBPdmVycmlkZSA9IHRoaXMuX3VwTWFwW2tleUlkXTtcbiAgICAgICAgICAgIGlmICh1cE92ZXJyaWRlICYmIHRoaXMuX3VwLmhhcyhrZXlJZCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9oYW5kbGVLZXlEb3duS2V5KHVwT3ZlcnJpZGUsIG51bGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX2Jsb2NrRXZlbnQoZSk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX2hhbmRsZUtleURvd24gPSAoa2V5Q29kZSwgZSkgPT4ge1xuICAgICAgICAgICAgbGV0IGtleUluZm8gPSB7XG4gICAgICAgICAgICAgICAga2V5Q29kZSxcbiAgICAgICAgICAgICAgICBrZXk6ICcnLFxuICAgICAgICAgICAgICAgIGNvZGU6ICdVbmlkZW50aWZpZWQnLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlmIChlKSB7XG4gICAgICAgICAgICAgICAga2V5SW5mby5jb2RlID0gZS5jb2RlO1xuICAgICAgICAgICAgICAgIGtleUluZm8ua2V5ID0gZS5rZXk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVLZXlEb3duS2V5KGtleUluZm8sIGUpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9oYW5kbGVLZXlEb3duS2V5ID0gKGtleUluZm8sIGUpID0+IHtcbiAgICAgICAgICAgIGxldCBrZXlNYXAgPSB0aGlzLl9rZXlNYXA7XG4gICAgICAgICAgICBsZXQgYWx0ID0gdGhpcy5fbW9kcy5BbHQuc2l6ZSA+IDA7XG4gICAgICAgICAgICBsZXQgY3RybCA9IHRoaXMuX21vZHMuQ29udHJvbC5zaXplID4gMDtcbiAgICAgICAgICAgIGxldCBtZXRhID0gdGhpcy5fbW9kcy5NZXRhLnNpemUgPiAwO1xuICAgICAgICAgICAgbGV0IHNoaWZ0ID0gdGhpcy5fbW9kcy5TaGlmdC5zaXplID4gMDtcbiAgICAgICAgICAgIGxldCBjb2RlID0ga2V5SW5mby5jb2RlO1xuICAgICAgICAgICAgbGV0IGtleSA9IGtleUluZm8ua2V5O1xuICAgICAgICAgICAgbGV0IGtleUNvZGUgPSBrZXlJbmZvLmtleUNvZGU7XG4gICAgICAgICAgICBsZXQga2V5RG93biA9IF9wYXRjaEtleURvd24oeyBrZXksIGNvZGUsIGtleUNvZGUsIGFsdCwgY3RybCwgbWV0YSwgc2hpZnQgfSwgZSk7XG4gICAgICAgICAgICBsZXQga2V5RGVmID0ga2V5TWFwLmdldEtleURlZihrZXlEb3duLmtleUNvZGUpO1xuICAgICAgICAgICAgdmFyIHJlc29sdmVkQWN0aW9uVHlwZSA9IG51bGw7XG4gICAgICAgICAgICBmdW5jdGlvbiBnZXRBY3Rpb24obmFtZSkge1xuICAgICAgICAgICAgICAgIHJlc29sdmVkQWN0aW9uVHlwZSA9IG5hbWU7XG4gICAgICAgICAgICAgICAgdmFyIGFjdGlvbiA9IGtleURlZltuYW1lXTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGFjdGlvbiA9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbiA9IGFjdGlvbi5jYWxsKGtleU1hcCwga2V5RG93biwga2V5RGVmKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGFjdGlvbiA9PT0gREVGQVVMVCAmJiBuYW1lICE9ICdub3JtYWwnKSB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbiA9IGdldEFjdGlvbignbm9ybWFsJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBhY3Rpb247XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgYWN0aW9uO1xuICAgICAgICAgICAgaWYgKGN0cmwpIHtcbiAgICAgICAgICAgICAgICBhY3Rpb24gPSBnZXRBY3Rpb24oJ2N0cmwnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGFsdCkge1xuICAgICAgICAgICAgICAgIGFjdGlvbiA9IGdldEFjdGlvbignYWx0Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChtZXRhKSB7XG4gICAgICAgICAgICAgICAgYWN0aW9uID0gZ2V0QWN0aW9uKCdtZXRhJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBhY3Rpb24gPSBnZXRBY3Rpb24oJ25vcm1hbCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCF0aGlzLmhhc1NlbGVjdGlvbiAmJlxuICAgICAgICAgICAgICAgIChhY3Rpb24gPT09IFBBU1MgfHwgKGFjdGlvbiA9PT0gREVGQVVMVCAmJiAhKGN0cmwgfHwgYWx0IHx8IG1ldGEpKSkpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGlzIGtleSBpcyBzdXBwb3NlZCB0byBiZSBoYW5kbGVkIGJ5IHRoZSBicm93c2VyLCBvciBpdCBpcyBhblxuICAgICAgICAgICAgICAgIC8vIHVubW9kaWZpZWQga2V5IHdpdGggdGhlIGRlZmF1bHQgYWN0aW9uLCB0aGVuIGV4aXQgdGhpcyBldmVudCBoYW5kbGVyLlxuICAgICAgICAgICAgICAgIC8vIElmIGl0J3MgYW4gdW5tb2RpZmllZCBrZXksIGl0J2xsIGJlIGhhbmRsZWQgaW4gb25LZXlQcmVzcyB3aGVyZSB3ZVxuICAgICAgICAgICAgICAgIC8vIGNhbiB0ZWxsIGZvciBzdXJlIHdoaWNoIEFTQ0lJIGNvZGUgdG8gaW5zZXJ0LlxuICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgLy8gVGhpcyBibG9jayBuZWVkcyB0byBjb21lIGJlZm9yZSB0aGUgU1RSSVAgdGVzdCwgb3RoZXJ3aXNlIHdlJ2xsIHN0cmlwXG4gICAgICAgICAgICAgICAgLy8gdGhlIG1vZGlmaWVyIGFuZCB0aGluayBpdCdzIG9rIHRvIGxldCB0aGUgYnJvd3NlciBoYW5kbGUgdGhlIGtleXByZXNzLlxuICAgICAgICAgICAgICAgIC8vIFRoZSBicm93c2VyIHdvbid0IGtub3cgd2UncmUgdHJ5aW5nIHRvIGlnbm9yZSB0aGUgbW9kaWZpZXJzIGFuZCBtaWdodFxuICAgICAgICAgICAgICAgIC8vIHBlcmZvcm0gc29tZSBkZWZhdWx0IGFjdGlvbi5cbiAgICAgICAgICAgICAgICAvLyAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24gPT09IFBBU1MgJiYgIWtleUluZm8uc3JjKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IG5vblByaW50YWJsZSA9IC9eXFxbXFx3K1xcXSQvLnRlc3Qoa2V5RGVmLmtleUNhcCk7XG4gICAgICAgICAgICAgICAgaWYgKG5vblByaW50YWJsZSAmJiAha2V5SW5mby5zcmMpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fcmVtb3ZlQWNjZW50cyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIFRPRE86IG1heSBiZSByZW1vdmUgYWNjZW50cyBvbmx5IGFmdGVyIG9wdGlvbnMga2V5IGlzIHByZXNzZWQuXG4gICAgICAgICAgICAgICAgbGV0IG91dCA9IHRoaXMuX3JlbW92ZUFjY2VudHMgPyBfcmVtb3ZlQWNjZW50cyhrZXkpIDoga2V5O1xuICAgICAgICAgICAgICAgIHRoaXMuX3JlbW92ZUFjY2VudHMgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fY2Fwc0xvY2tSZW1hcHBlZCB8fCB0aGlzLl9zaGlmdFJlbWFwcGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX291dHB1dChzaGlmdCA/IG91dC50b1VwcGVyQ2FzZSgpIDogb3V0LnRvTG93ZXJDYXNlKCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fb3V0cHV0KG91dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF9ibG9ja0V2ZW50KGUpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX3JlbW92ZUFjY2VudHMgPSBmYWxzZTtcbiAgICAgICAgICAgIGlmIChhY3Rpb24gPT09IFNUUklQKSB7XG4gICAgICAgICAgICAgICAgYWx0ID0gY3RybCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGFjdGlvbiA9IGtleURlZi5ub3JtYWw7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBhY3Rpb24gPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb24gPSBhY3Rpb24uY2FsbChrZXlNYXAsIGtleURvd24sIGtleURlZik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24gPT0gREVGQVVMVCAmJiBrZXlEZWYua2V5Q2FwLmxlbmd0aCA9PSAyKSB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbiA9IGtleURlZi5rZXlDYXAuc3Vic3RyKHNoaWZ0ID8gMSA6IDAsIDEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF9ibG9ja0V2ZW50KGUpO1xuICAgICAgICAgICAgaWYgKGFjdGlvbiA9PT0gQ0FOQ0VMIHx8IHRoaXMuaGFzU2VsZWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGFjdGlvbiAhPT0gREVGQVVMVCAmJiB0eXBlb2YgYWN0aW9uICE9ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0ludmFsaWQgYWN0aW9uOiAnICsgSlNPTi5zdHJpbmdpZnkoYWN0aW9uKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gU3RyaXAgdGhlIG1vZGlmaWVyIHRoYXQgaXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBhY3Rpb24sIHNpbmNlIHdlIGFzc3VtZSB0aGF0XG4gICAgICAgICAgICAvLyBtb2RpZmllciBoYXMgYWxyZWFkeSBiZWVuIGFjY291bnRlZCBmb3IgaW4gdGhlIGFjdGlvbi5cbiAgICAgICAgICAgIGlmIChyZXNvbHZlZEFjdGlvblR5cGUgPT0gJ2N0cmwnKSB7XG4gICAgICAgICAgICAgICAgY3RybCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocmVzb2x2ZWRBY3Rpb25UeXBlID09ICdhbHQnKSB7XG4gICAgICAgICAgICAgICAgYWx0ID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChyZXNvbHZlZEFjdGlvblR5cGUgPT0gJ21ldGEnKSB7XG4gICAgICAgICAgICAgICAgbWV0YSA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2hpZnQgPSBrZXlEb3duLnNoaWZ0O1xuICAgICAgICAgICAgaWYgKChhbHQgfHwgY3RybCB8fCBzaGlmdCB8fCBtZXRhKSAmJlxuICAgICAgICAgICAgICAgIHR5cGVvZiBhY3Rpb24gPT0gJ3N0cmluZycgJiZcbiAgICAgICAgICAgICAgICBhY3Rpb24uc3Vic3RyKDAsIDIpID09ICdcXHgxYlsnKSB7XG4gICAgICAgICAgICAgICAgLy8gVGhlIGFjdGlvbiBpcyBhbiBlc2NhcGUgc2VxdWVuY2UgdGhhdCBhbmQgaXQgd2FzIHRyaWdnZXJlZCBpbiB0aGVcbiAgICAgICAgICAgICAgICAvLyBwcmVzZW5jZSBvZiBhIGtleWJvYXJkIG1vZGlmaWVyLCB3ZSBtYXkgbmVlZCB0byBhbHRlciB0aGUgYWN0aW9uIHRvXG4gICAgICAgICAgICAgICAgLy8gaW5jbHVkZSB0aGUgbW9kaWZpZXIgYmVmb3JlIHNlbmRpbmcgaXQuXG4gICAgICAgICAgICAgICAgLy8gVGhlIG1hdGggaXMgZnVua3kgYnV0IGFsaWducyB3L3h0ZXJtLlxuICAgICAgICAgICAgICAgIGxldCBpbW9kID0gMTtcbiAgICAgICAgICAgICAgICBpZiAoc2hpZnQpXG4gICAgICAgICAgICAgICAgICAgIGltb2QgKz0gMTtcbiAgICAgICAgICAgICAgICBpZiAoYWx0KVxuICAgICAgICAgICAgICAgICAgICBpbW9kICs9IDI7XG4gICAgICAgICAgICAgICAgaWYgKGN0cmwpXG4gICAgICAgICAgICAgICAgICAgIGltb2QgKz0gNDtcbiAgICAgICAgICAgICAgICBpZiAobWV0YSlcbiAgICAgICAgICAgICAgICAgICAgaW1vZCArPSA4O1xuICAgICAgICAgICAgICAgIGxldCBtb2QgPSAnOycgKyBpbW9kO1xuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24ubGVuZ3RoID09IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gU29tZSBvZiB0aGUgQ1NJIHNlcXVlbmNlcyBoYXZlIHplcm8gcGFyYW1ldGVycyB1bmxlc3MgbW9kaWZpZWQuXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbiA9ICdcXHgxYlsxJyArIG1vZCArIGFjdGlvbi5zdWJzdHIoMiwgMSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBPdGhlcnMgYWx3YXlzIGhhdmUgYXQgbGVhc3Qgb25lIHBhcmFtZXRlci5cbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uID1cbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbi5zdWJzdHIoMCwgYWN0aW9uLmxlbmd0aCAtIDEpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2QgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbi5zdWJzdHIoYWN0aW9uLmxlbmd0aCAtIDEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24gPT09IERFRkFVTFQpIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uID0ga2V5RGVmLmtleUNhcC5zdWJzdHIoc2hpZnQgPyAxIDogMCwgMSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdHJsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgdW5zaGlmdGVkID0ga2V5RGVmLmtleUNhcC5zdWJzdHIoMCwgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgY29kZSA9IHVuc2hpZnRlZC5jaGFyQ29kZUF0KDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvZGUgPj0gNjQgJiYgY29kZSA8PSA5NSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbiA9IFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSAtIDY0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZXQgYWN0aW9uU3RyID0gYWN0aW9uLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgaWYgKGFsdCAmJiB0aGlzLl9hbHRTZW5kc1doYXQgPT0gJzgtYml0JyAmJiBhY3Rpb25TdHIubGVuZ3RoID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNvZGUgPSBhY3Rpb25TdHIuY2hhckNvZGVBdCgwKSArIDEyODtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uID0gU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gV2UgcmVzcGVjdCBhbHQvbWV0YVNlbmRzRXNjYXBlIGV2ZW4gaWYgdGhlIGtleW1hcCBhY3Rpb24gd2FzIGEgbGl0ZXJhbFxuICAgICAgICAgICAgICAgIC8vIHN0cmluZy4gIE90aGVyd2lzZSwgZXZlcnkgb3ZlcnJpZGRlbiBhbHQvbWV0YSBhY3Rpb24gd291bGQgaGF2ZSB0b1xuICAgICAgICAgICAgICAgIC8vIGNoZWNrIGFsdC9tZXRhU2VuZHNFc2NhcGUuXG4gICAgICAgICAgICAgICAgaWYgKChhbHQgJiYgdGhpcy5fYWx0U2VuZHNXaGF0ID09ICdlc2NhcGUnKSB8fFxuICAgICAgICAgICAgICAgICAgICAobWV0YSAmJiB0aGlzLl9tZXRhU2VuZHNFc2NhcGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbiA9ICdcXHgxYicgKyBhY3Rpb25TdHI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiBhY3Rpb24gPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9vdXRwdXQoYWN0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybignYWN0aW9uIGlzIG5vdCBhIHN0cmluZycsIGFjdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX29uSU1FID0gKGUpID0+IHtcbiAgICAgICAgICAgIGxldCB0eXBlID0gZS50eXBlO1xuICAgICAgICAgICAgbGV0IGRhdGEgPSBlLmRhdGEgfHwgJyc7XG4gICAgICAgICAgICBLZXlNYXBfMS5vcCgnaW1lJywgeyB0eXBlLCBkYXRhIH0pO1xuICAgICAgICAgICAgaWYgKHR5cGUgPT0gJ2NvbXBvc2l0aW9uZW5kJykge1xuICAgICAgICAgICAgICAgIHRoaXMuX291dHB1dChkYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fb3V0cHV0ID0gKGRhdGEpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3VwLmNsZWFyKCk7XG4gICAgICAgICAgICBpZiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIEtleU1hcF8xLm9wKCdvdXQnLCB7IGRhdGEgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX2NhcHR1cmUgPSAoKSA9PiBLZXlNYXBfMS5vcCgnY2FwdHVyZScsIHsga2V5SWRzOiB0aGlzLl9kb3duLnZhbHVlcyB9KTtcbiAgICAgICAgdGhpcy5fY29uZmlnS2V5ID0gKGtleSkgPT4ge1xuICAgICAgICAgICAgbGV0IGNvZGUgPSBrZXkuY29kZTtcbiAgICAgICAgICAgIGxldCBkb3duID0gX2FjdGlvbihrZXkuZG93bik7XG4gICAgICAgICAgICBpZiAoZG93bikge1xuICAgICAgICAgICAgICAgIHRoaXMuX3VwTWFwW2NvZGUuaWRdID0gZG93bjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBtb2QgPSB0aGlzLl9tb2Qoa2V5Lm1vZCk7XG4gICAgICAgICAgICBpZiAobW9kKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW9kc01hcFtjb2RlLmNvZGVdID0ga2V5Lm1vZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCB1cCA9IF9hY3Rpb24oa2V5LnVwKTtcbiAgICAgICAgICAgIGlmICh1cCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3VwTWFwW2NvZGUuaWRdID0gdXA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY29kZS5jb2RlID09ICdBbHRSaWdodCcgfHwgY29kZS5jb2RlID09ICdBbHRMZWZ0Jykge1xuICAgICAgICAgICAgICAgIHRoaXMuX2lnbm9yZUFjY2VudHNbY29kZS5jb2RlXSA9IGtleS5pZ25vcmVBY2NlbnRzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9jb25maWcgPSAoY2ZnKSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9yZXNldCgpO1xuICAgICAgICAgICAgdGhpcy5fYmluZGluZ3MucmVzZXQoKTtcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZ0tleShjZmcuY2Fwc0xvY2spO1xuICAgICAgICAgICAgdGhpcy5fY29uZmlnS2V5KGNmZy5jb21tYW5kLmxlZnQpO1xuICAgICAgICAgICAgdGhpcy5fY29uZmlnS2V5KGNmZy5jb21tYW5kLnJpZ2h0KTtcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZ0tleShjZmcuY29udHJvbC5sZWZ0KTtcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZ0tleShjZmcuY29udHJvbC5yaWdodCk7XG4gICAgICAgICAgICB0aGlzLl9jb25maWdLZXkoY2ZnLm9wdGlvbi5sZWZ0KTtcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZ0tleShjZmcub3B0aW9uLnJpZ2h0KTtcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZ0tleShjZmcuc2hpZnQubGVmdCk7XG4gICAgICAgICAgICB0aGlzLl9jb25maWdLZXkoY2ZnLnNoaWZ0LnJpZ2h0KTtcbiAgICAgICAgICAgIHRoaXMuX2JpbmRpbmdzLmV4cGFuZEZuKGNmZy5mbik7XG4gICAgICAgICAgICB0aGlzLl9iaW5kaW5ncy5leHBhbmRDdXJzb3IoY2ZnLmN1cnNvcik7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX3RvZ2dsZUNhcHR1cmVNb2RlID0gKHZhbCkgPT4gKHRoaXMuX2NhcHR1cmVNb2RlID0gISF2YWwpO1xuICAgICAgICB0aGlzLl9vblRvb2xiYXJNb2RzID0gKHZhbCkgPT4ge1xuICAgICAgICAgICAgbGV0IGZsYWdzID0gVUlLZXlNb2RpZmllckZsYWdzXzEuVUlLaXRGbGFnc1RvT2JqZWN0KHZhbCk7XG4gICAgICAgICAgICBpZiAoZmxhZ3MuYWx0KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW9kcy5BbHQuYWRkKCdhbHQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuX21vZHMuQWx0LmRlbGV0ZSgnYWx0Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZmxhZ3MuY3RybCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX21vZHMuQ29udHJvbC5hZGQoJ2N0cmwnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuX21vZHMuQ29udHJvbC5kZWxldGUoJ2N0cmwnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChmbGFncy5zaGlmdCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX21vZHMuU2hpZnQuYWRkKCdzaGlmdCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW9kcy5TaGlmdC5kZWxldGUoJ3NoaWZ0Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZmxhZ3MubWV0YSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX21vZHMuTWV0YS5hZGQoJ21ldGEnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuX21vZHMuTWV0YS5kZWxldGUoJ21ldGEnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fb25Ub29sYmFyUHJlc3MgPSAoa2V5SWQpID0+IHtcbiAgICAgICAgICAgIGxldCBwYXJ0cyA9IGtleUlkLnNwbGl0KC86L2cpO1xuICAgICAgICAgICAgbGV0IGtleUluZm8gPSB7XG4gICAgICAgICAgICAgICAga2V5Q29kZTogcGFyc2VJbnQocGFydHNbMF0sIDEwKSxcbiAgICAgICAgICAgICAgICBrZXk6IHBhcnRzWzJdIHx8ICcnLFxuICAgICAgICAgICAgICAgIGNvZGU6ICcnLFxuICAgICAgICAgICAgICAgIHNyYzogJ3Rvb2xiYXInLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZUtleURvd25LZXkoa2V5SW5mbywgbnVsbCk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMub25LQiA9IChjbWQsIGFyZykgPT4ge1xuICAgICAgICAgICAgc3dpdGNoIChjbWQpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdtb2RzLWRvd24nOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9oYW5kbGVDYXBzTG9ja0Rvd24odHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ21vZHMtdXAnOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9oYW5kbGVDYXBzTG9ja0Rvd24oZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICdsYW5nJzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faGFuZGxlTGFuZyhhcmcpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICdndWFyZC11cCc6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2hhbmRsZUd1YXJkKHRydWUsIGFyZyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ2d1YXJkLWRvd24nOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9oYW5kbGVHdWFyZChmYWxzZSwgYXJnKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnc2VsZWN0aW9uJzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5oYXNTZWxlY3Rpb24gPSBhcmc7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ2NhcHR1cmUnOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLl90b2dnbGVDYXB0dXJlTW9kZShhcmcpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICd0b29sYmFyLW1vZHMnOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9vblRvb2xiYXJNb2RzKGFyZyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ3Rvb2xiYXItcHJlc3MnOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9vblRvb2xiYXJQcmVzcyhhcmcpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICdmb2N1cyc6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZm9jdXMoYXJnKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnY29uZmlnJzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29uZmlnKGFyZyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBsZXQgaW5wdXQgPSB0aGlzLmVsZW1lbnQ7XG4gICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgnYXV0b2NvbXBsZXRlJywgJ29mZicpO1xuICAgICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoJ3NwZWxsY2hlY2snLCAnZmFsc2UnKTtcbiAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCdhdXRvY29ycmVjdCcsICdvZmYnKTtcbiAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCdhdXRvY2FwaXRhbGl6ZScsICdub25lJyk7XG4gICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgnYXV0b2ZvY3VzJywgJ3RydWUnKTtcbiAgICAgICAgLy8ga2VlcCBvbmUgc3BhY2UsIHNvIGRlbGV0ZSBhbHdheXMgcmVwZWF0cyBvbiBzb2Z0d2FyZSBrYlxuICAgICAgICBpbnB1dC52YWx1ZSA9ICcgJztcbiAgICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX29uS2V5RG93bik7XG4gICAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdGhpcy5fb25LZXlVcCk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5fb25LZXlEb3duKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdGhpcy5fb25LZXlVcCk7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignY29tcG9zaXRpb25zdGFydCcsIHRoaXMuX29uSU1FKTtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjb21wb3NpdGlvbnVwZGF0ZScsIHRoaXMuX29uSU1FKTtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjb21wb3NpdGlvbmVuZCcsIHRoaXMuX29uSU1FKTtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdiZWZvcmVpbnB1dCcsIHRoaXMuX29uQmVmb3JlSW5wdXQpO1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgdGhpcy5fb25JbnB1dCk7XG4gICAgICAgIHRoaXMuX2NhcHNMb2NrUmVtYXBwZWQgPVxuICAgICAgICAgICAgdGhpcy5fbW9kc01hcFsnQ2Fwc0xvY2snXSAhPSBudWxsIHx8XG4gICAgICAgICAgICAgICAgdGhpcy5fZG93bk1hcFtfY2Fwc0xvY2tJRF0gIT0gbnVsbCB8fFxuICAgICAgICAgICAgICAgIHRoaXMuX3VwTWFwW19jYXBzTG9ja0lEXSAhPSBudWxsO1xuICAgICAgICB0aGlzLl9zaGlmdFJlbWFwcGVkID1cbiAgICAgICAgICAgIHRoaXMuX21vZHNNYXBbJ1NoaWZ0J10gIT0gbnVsbCB8fCB0aGlzLl9tb2RzTWFwWydTaGlmdCddICE9PSAnU2hpZnQnO1xuICAgIH1cbiAgICBfbW9kKG1vZCkge1xuICAgICAgICBzd2l0Y2ggKG1vZCkge1xuICAgICAgICAgICAgY2FzZSAnRXNjYXBlJzpcbiAgICAgICAgICAgICAgICB0aGlzLl9hbHRTZW5kc1doYXQgPSAnZXNjYXBlJztcbiAgICAgICAgICAgICAgICByZXR1cm4gJ0FsdCc7XG4gICAgICAgICAgICBjYXNlICc4LWJpdCc6XG4gICAgICAgICAgICAgICAgdGhpcy5fYWx0U2VuZHNXaGF0ID0gJzgtYml0JztcbiAgICAgICAgICAgICAgICByZXR1cm4gJ0FsdCc7XG4gICAgICAgICAgICBjYXNlICdTaGlmdCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdTaGlmdCc7XG4gICAgICAgICAgICBjYXNlICdDb250cm9sJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ0NvbnRyb2wnO1xuICAgICAgICAgICAgY2FzZSAnTWV0YSc6XG4gICAgICAgICAgICAgICAgdGhpcy5fbWV0YVNlbmRzRXNjYXBlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuICdNZXRhJztcbiAgICAgICAgICAgIGNhc2UgJ01ldGEtRXNjYXBlJzpcbiAgICAgICAgICAgICAgICB0aGlzLl9tZXRhU2VuZHNFc2NhcGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHJldHVybiAnTWV0YSc7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvY3VzKHZhbHVlKSB7XG4gICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgdGhpcy5lbGVtZW50LmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQuYmx1cigpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlYWR5KCkge1xuICAgICAgICBLZXlNYXBfMS5vcCgncmVhZHknLCB7fSk7XG4gICAgfVxuICAgIF9oYW5kbGVDYXBzTG9ja0Rvd24oZG93bikge1xuICAgICAgICBpZiAodGhpcy5fY2FwdHVyZU1vZGUpIHtcbiAgICAgICAgICAgIGlmIChkb3duKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZG93bi5kZWxldGUoX2NhcHNMb2NrSUQgKyAnLWNhcHNsb2NrJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9kb3duLmFkZChfY2Fwc0xvY2tJRCArICctY2Fwc2xvY2snKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX2NhcHR1cmUoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgbW9kID0gdGhpcy5fbW9kc01hcFsnQ2Fwc0xvY2snXTtcbiAgICAgICAgaWYgKGRvd24pIHtcbiAgICAgICAgICAgIHRoaXMuX2Rvd24uYWRkKF9jYXBzTG9ja0lEKTtcbiAgICAgICAgICAgIGxldCBvdmVycmlkZSA9IHRoaXMuX2Rvd25NYXBbX2NhcHNMb2NrSURdO1xuICAgICAgICAgICAgaWYgKG92ZXJyaWRlICYmICEobW9kICYmIHRoaXMuX21vZHNbbW9kXS5oYXMoX2NhcHNMb2NrSUQpKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2hhbmRsZUtleURvd25LZXkob3ZlcnJpZGUsIG51bGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1vZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX21vZHNbbW9kXS5hZGQoX2NhcHNMb2NrSUQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IHVwT3ZlcnJpZGUgPSB0aGlzLl91cE1hcFtfY2Fwc0xvY2tJRF07XG4gICAgICAgICAgICBpZiAodXBPdmVycmlkZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3VwLmFkZChfY2Fwc0xvY2tJRCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fZG93bi5kZWxldGUoX2NhcHNMb2NrSUQpO1xuICAgICAgICBtb2QgJiYgdGhpcy5fbW9kc1ttb2RdLmRlbGV0ZShfY2Fwc0xvY2tJRCk7XG4gICAgICAgIGxldCB1cE92ZXJyaWRlID0gdGhpcy5fdXBNYXBbX2NhcHNMb2NrSURdO1xuICAgICAgICBpZiAodXBPdmVycmlkZSAmJiB0aGlzLl91cC5oYXMoX2NhcHNMb2NrSUQpKSB7XG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVLZXlEb3duS2V5KHVwT3ZlcnJpZGUsIG51bGwpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIEtleWJvYXJkIGxhbmd1YWdlIGNoYW5nZVxuICAgIF9oYW5kbGVMYW5nKGxhbmcpIHtcbiAgICAgICAgdGhpcy5fZG93bi5jbGVhcigpO1xuICAgICAgICB0aGlzLl91cC5jbGVhcigpO1xuICAgICAgICB0aGlzLl9tb2RzID0ge1xuICAgICAgICAgICAgU2hpZnQ6IG5ldyBTZXQoKSxcbiAgICAgICAgICAgIEFsdDogbmV3IFNldCgpLFxuICAgICAgICAgICAgTWV0YTogbmV3IFNldCgpLFxuICAgICAgICAgICAgQ29udHJvbDogbmV3IFNldCgpLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmVsZW1lbnQudmFsdWUgPSAnICc7XG4gICAgICAgIHRoaXMuX2xhbmcgPSBsYW5nO1xuICAgIH1cbiAgICBfaGFuZGxlR3VhcmQodXAsIGNoYXIpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50LnZhbHVlID0gJyAnO1xuICAgICAgICBsZXQga2V5Q29kZSA9IF9rZXlUb0NvZGVNYXBbY2hhciB8fCAnJ10gfHwgMDtcbiAgICAgICAgbGV0IGtleUlkID0gYCR7a2V5Q29kZX06MGA7XG4gICAgICAgIGlmICh0aGlzLl9jYXB0dXJlTW9kZSkge1xuICAgICAgICAgICAga2V5SWQgKz0gJy1LZXknICsgY2hhci50b1VwcGVyQ2FzZSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh1cCkge1xuICAgICAgICAgICAgdGhpcy5fZG93bi5kZWxldGUoa2V5SWQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fZG93bi5hZGQoa2V5SWQpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9jYXB0dXJlTW9kZSkge1xuICAgICAgICAgICAgdGhpcy5fY2FwdHVyZSgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh1cCkge1xuICAgICAgICAgICAgdGhpcy5fcmVtb3ZlQWNjZW50cyA9IHRydWU7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5faGFuZGxlS2V5RG93bihrZXlDb2RlLCBudWxsKTtcbiAgICB9XG4gICAgX3Jlc2V0KCkge1xuICAgICAgICB0aGlzLmhhc1NlbGVjdGlvbiA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9yZW1vdmVBY2NlbnRzID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX21vZHNNYXAgPSB7fTtcbiAgICAgICAgdGhpcy5fZG93bk1hcCA9IHt9O1xuICAgICAgICB0aGlzLl91cE1hcCA9IHt9O1xuICAgICAgICB0aGlzLl91cC5jbGVhcigpO1xuICAgICAgICB0aGlzLl9kb3duLmNsZWFyKCk7XG4gICAgICAgIHRoaXMuX21vZHMgPSB7XG4gICAgICAgICAgICBTaGlmdDogbmV3IFNldCgpLFxuICAgICAgICAgICAgQWx0OiBuZXcgU2V0KCksXG4gICAgICAgICAgICBNZXRhOiBuZXcgU2V0KCksXG4gICAgICAgICAgICBDb250cm9sOiBuZXcgU2V0KCksXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX2lnbm9yZUFjY2VudHMgPSB7XG4gICAgICAgICAgICBBbHRMZWZ0OiB0cnVlLFxuICAgICAgICAgICAgQWx0UmlnaHQ6IHRydWUsXG4gICAgICAgIH07XG4gICAgfVxuICAgIF9leGVjQmluZGluZyhhY3Rpb24sIGUpIHtcbiAgICAgICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgICAgICAgY2FzZSAnaGV4JzpcbiAgICAgICAgICAgICAgICB0aGlzLl9vdXRwdXQoaGV4X3RvX2FzY2lpKGFjdGlvbi52YWx1ZSkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnY29tbWFuZCc6XG4gICAgICAgICAgICAgICAgS2V5TWFwXzEub3AoJ2NvbW1hbmQnLCB7IGNvbW1hbmQ6IGFjdGlvbi52YWx1ZSB9KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3ByZXNzJzpcbiAgICAgICAgICAgICAgICBsZXQga2V5SW5mbyA9IGFjdGlvbi5rZXk7XG4gICAgICAgICAgICAgICAgbGV0IG1vZHMgPSB0aGlzLl9tb2RzO1xuICAgICAgICAgICAgICAgIHRoaXMuX21vZHMgPSB7XG4gICAgICAgICAgICAgICAgICAgIFNoaWZ0OiBuZXcgU2V0KCksXG4gICAgICAgICAgICAgICAgICAgIEFsdDogbmV3IFNldCgpLFxuICAgICAgICAgICAgICAgICAgICBNZXRhOiBuZXcgU2V0KCksXG4gICAgICAgICAgICAgICAgICAgIENvbnRyb2w6IG5ldyBTZXQoKSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24uc2hpZnQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbW9kcy5TaGlmdC5hZGQoJ3NoaWZ0Jyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24uY3RybCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9tb2RzLkNvbnRyb2wuYWRkKCdjdHJsJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24uYWx0KSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX21vZHMuQWx0LmFkZCgnYWx0Jyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24ubWV0YSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9tb2RzLk1ldGEuYWRkKCdtZXRhJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuX2hhbmRsZUtleURvd25LZXkoa2V5SW5mbywgZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW9kcyA9IG1vZHM7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBLZXlib2FyZDtcbiIsIlwidXNlIHN0cmljdFwiO1xuLy8gc29tZSB1c2VmdWwgcmVmc1xuLy8gaHR0cHM6Ly93d3cudzMub3JnL1RSL3VpZXZlbnRzLWNvZGUvI2tleS1mdW5jdGlvbi1zZWN0aW9uXG4vLyBodHRwczovL2dpdGh1Yi5jb20vY2hyb21pdW0vaHRlcm0vYmxvYi9tYXN0ZXIvZG9jL0NvbnRyb2xTZXF1ZW5jZXMubWRcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IENBTkNFTCA9IFN5bWJvbCgnQ0FOQ0VMJyk7XG5jb25zdCBERUZBVUxUID0gU3ltYm9sKCdERUZBVUxUJyk7XG5jb25zdCBQQVNTID0gU3ltYm9sKCdQQVNTJyk7XG5jb25zdCBTVFJJUCA9IFN5bWJvbCgnU1RSSVAnKTtcbmV4cG9ydHMuS0JBY3Rpb25zID0ge1xuICAgIENBTkNFTCxcbiAgICBERUZBVUxULFxuICAgIFBBU1MsXG4gICAgU1RSSVAsXG59O1xuZnVuY3Rpb24gb3Aob3AsIGFyZ3MpIHtcbiAgICBsZXQgbWVzc2FnZSA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgYXJncyksIHsgb3AgfSk7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLl9rYi5wb3N0TWVzc2FnZShtZXNzYWdlKTtcbn1cbmV4cG9ydHMub3AgPSBvcDtcbmNvbnN0IEVTQyA9ICdcXHgxYic7IC8vIEVzY2FwZVxuY29uc3QgQ1NJID0gJ1xceDFiWyc7IC8vIENvbW1hbmQgU3RhcnQgSW5pZGljYXRvclxuY29uc3QgU1MzID0gJ1xceDFiTyc7IC8vIFNpbmdsZS1TaGlmdCBUaHJlZVxuY29uc3QgREVMID0gJ1xceDdmJzsgLy8gRGVsZXRlXG5jb25zdCBjdGwgPSAoY2gpID0+IFN0cmluZy5mcm9tQ2hhckNvZGUoY2guY2hhckNvZGVBdCgwKSAtIDY0KTtcbmNvbnN0IF91bmtub3duS2V5RGVmID0ge1xuICAgIGtleUNvZGU6IDAsXG4gICAga2V5Q2FwOiAnW1VOS05PV05dJyxcbiAgICBub3JtYWw6IFBBU1MsXG4gICAgY3RybDogUEFTUyxcbiAgICBhbHQ6IFBBU1MsXG4gICAgbWV0YTogUEFTUyxcbn07XG5jbGFzcyBLZXlNYXAge1xuICAgIGNvbnN0cnVjdG9yKGtleWJvYXJkKSB7XG4gICAgICAgIHRoaXMuX2RlZnMgPSB7fTtcbiAgICAgICAgLy8gcHJldHRpZXItaWdub3JlXG4gICAgICAgIHRoaXMuX29uQ3RybE51bSA9IChlLCBkZWYpID0+IHtcbiAgICAgICAgICAgIHN3aXRjaCAoZGVmLmtleUNhcC5zdWJzdHIoMCwgMSkpIHtcbiAgICAgICAgICAgICAgICBjYXNlICcxJzogcmV0dXJuICcxJztcbiAgICAgICAgICAgICAgICBjYXNlICcyJzogcmV0dXJuIGN0bCgnQCcpO1xuICAgICAgICAgICAgICAgIGNhc2UgJzMnOiByZXR1cm4gY3RsKCdbJyk7XG4gICAgICAgICAgICAgICAgY2FzZSAnNCc6IHJldHVybiBjdGwoJ1xcXFwnKTtcbiAgICAgICAgICAgICAgICBjYXNlICc1JzogcmV0dXJuIGN0bCgnXScpO1xuICAgICAgICAgICAgICAgIGNhc2UgJzYnOiByZXR1cm4gY3RsKCdeJyk7XG4gICAgICAgICAgICAgICAgY2FzZSAnNyc6IHJldHVybiBjdGwoJ18nKTtcbiAgICAgICAgICAgICAgICBjYXNlICc4JzogcmV0dXJuIERFTDtcbiAgICAgICAgICAgICAgICBjYXNlICc5JzogcmV0dXJuICc5JztcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiByZXR1cm4gUEFTUztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fb25BbHROdW0gPSAoZSwgZGVmKSA9PiBERUZBVUxUO1xuICAgICAgICB0aGlzLl9vbk1ldGFOdW0gPSAoZSwgZGVmKSA9PiBERUZBVUxUO1xuICAgICAgICB0aGlzLl9vblpvb20gPSAoZSwgZGVmKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gQ0FOQ0VMO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9vblNlbCA9IChlLCBkZWYpID0+IHtcbiAgICAgICAgICAgIGlmIChkZWYua2V5Q2FwID09ICdbTEVGVF0nIHx8IGRlZi5rZXlDYXAgPT0gJ2hIJykge1xuICAgICAgICAgICAgICAgIGxldCBncmFuID0gZS5zaGlmdCA/ICd3b3JkJyA6ICdjaGFyYWN0ZXInO1xuICAgICAgICAgICAgICAgIG9wKCdzZWxlY3Rpb24nLCB7IGRpcjogJ2xlZnQnLCBncmFuIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZGVmLmtleUNhcCA9PSAnW1JJR0hUXScgfHwgZGVmLmtleUNhcCA9PSAnbEwnKSB7XG4gICAgICAgICAgICAgICAgbGV0IGdyYW4gPSBlLnNoaWZ0ID8gJ3dvcmQnIDogJ2NoYXJhY3Rlcic7XG4gICAgICAgICAgICAgICAgb3AoJ3NlbGVjdGlvbicsIHsgZGlyOiAncmlnaHQnLCBncmFuIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZGVmLmtleUNhcCA9PSAnW1VQXScgfHwgZGVmLmtleUNhcCA9PSAna0snKSB7XG4gICAgICAgICAgICAgICAgb3AoJ3NlbGVjdGlvbicsIHsgZGlyOiAnbGVmdCcsIGdyYW46ICdsaW5lJyB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGRlZi5rZXlDYXAgPT0gJ1tET1dOXScgfHwgZGVmLmtleUNhcCA9PSAnakonKSB7XG4gICAgICAgICAgICAgICAgb3AoJ3NlbGVjdGlvbicsIHsgZGlyOiAncmlnaHQnLCBncmFuOiAnbGluZScgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChkZWYua2V5Q2FwID09ICdvTycgfHwgZGVmLmtleUNhcCA9PSAneFgnKSB7XG4gICAgICAgICAgICAgICAgb3AoJ3NlbGVjdGlvbicsIHsgY29tbWFuZDogJ2NoYW5nZScgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChkZWYua2V5Q2FwID09ICduTicgJiYgZS5jdHJsKSB7XG4gICAgICAgICAgICAgICAgb3AoJ3NlbGVjdGlvbicsIHsgZGlyOiAncmlnaHQnLCBncmFuOiAnbGluZScgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChkZWYua2V5Q2FwID09ICdwUCcpIHtcbiAgICAgICAgICAgICAgICBpZiAoZS5jdHJsKSB7XG4gICAgICAgICAgICAgICAgICAgIG9wKCdzZWxlY3Rpb24nLCB7IGRpcjogJ2xlZnQnLCBncmFuOiAnbGluZScgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKCFlLnNoaWZ0ICYmICFlLmFsdCAmJiAhZS5tZXRhKSB7XG4gICAgICAgICAgICAgICAgICAgIG9wKCdzZWxlY3Rpb24nLCB7IGNvbW1hbmQ6ICdwYXN0ZScgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZGVmLmtleUNhcCA9PSAnYkInKSB7XG4gICAgICAgICAgICAgICAgaWYgKGUuY3RybCkge1xuICAgICAgICAgICAgICAgICAgICBvcCgnc2VsZWN0aW9uJywgeyBkaXI6ICdsZWZ0JywgZ3JhbjogJ2NoYXJhY3RlcicgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGUuYWx0KSB7XG4gICAgICAgICAgICAgICAgICAgIG9wKCdzZWxlY3Rpb24nLCB7IGRpcjogJ2xlZnQnLCBncmFuOiAnd29yZCcgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyA/Pz9cbiAgICAgICAgICAgICAgICAgICAgb3AoJ3NlbGVjdGlvbicsIHsgZGlyOiAnbGVmdCcsIGdyYW46ICd3b3JkJyB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChkZWYua2V5Q2FwID09ICd3VycpIHtcbiAgICAgICAgICAgICAgICBpZiAoZS5hbHQpIHtcbiAgICAgICAgICAgICAgICAgICAgb3AoJ3NlbGVjdGlvbicsIHsgY29tbWFuZDogJ2NvcHknIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgb3AoJ3NlbGVjdGlvbicsIHsgZGlyOiAncmlnaHQnLCBncmFuOiAnd29yZCcgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZGVmLmtleUNhcCA9PSAnZkYnKSB7XG4gICAgICAgICAgICAgICAgaWYgKGUuY3RybCkge1xuICAgICAgICAgICAgICAgICAgICBvcCgnc2VsZWN0aW9uJywgeyBkaXI6ICdyaWdodCcsIGdyYW46ICdjaGFyYWN0ZXInIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChlLmFsdCkge1xuICAgICAgICAgICAgICAgICAgICBvcCgnc2VsZWN0aW9uJywgeyBkaXI6ICdyaWdodCcsIGdyYW46ICd3b3JkJyB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChkZWYua2V5Q2FwID09ICd5WScpIHtcbiAgICAgICAgICAgICAgICBvcCgnc2VsZWN0aW9uJywgeyBjb21tYW5kOiAnY29weScgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChkZWYua2V5Q2FwID09ICdbRVNDXScpIHtcbiAgICAgICAgICAgICAgICBvcCgnc2VsZWN0aW9uJywgeyBjb21tYW5kOiAnY2FuY2VsJyB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBDQU5DRUw7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX2tleWJvYXJkID0ga2V5Ym9hcmQ7XG4gICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICB9XG4gICAgZ2V0S2V5RGVmKGtleUNvZGUpIHtcbiAgICAgICAgdmFyIGtleURlZiA9IHRoaXMuX2RlZnNba2V5Q29kZV07XG4gICAgICAgIGlmIChrZXlEZWYpIHtcbiAgICAgICAgICAgIHJldHVybiBrZXlEZWY7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgdGhpcyBrZXkgaGFzbid0IGJlZW4gZXhwbGljaXRseSByZWdpc3RlcmVkLCBmYWxsIGJhY2sgdG8gdGhlIHVua25vd25cbiAgICAgICAgLy8ga2V5IG1hcHBpbmcgKGtleUNvZGUgPT0gMCksIGFuZCB0aGVuIGF1dG9tYXRpY2FsbHkgcmVnaXN0ZXIgaXQgdG8gYXZvaWRcbiAgICAgICAgLy8gYW55IGZ1cnRoZXIgd2FybmluZ3MgaGVyZS5cbiAgICAgICAgY29uc29sZS53YXJuKGBObyBkZWZpbml0aW9uIGZvciAoa2V5Q29kZSAke2tleUNvZGV9KWApO1xuICAgICAgICBrZXlEZWYgPSBfdW5rbm93bktleURlZjtcbiAgICAgICAgdGhpcy5hZGRLZXlEZWYoa2V5Q29kZSwga2V5RGVmKTtcbiAgICAgICAgcmV0dXJuIGtleURlZjtcbiAgICB9XG4gICAgYWRkS2V5RGVmKGtleUNvZGUsIGRlZikge1xuICAgICAgICBpZiAoa2V5Q29kZSBpbiB0aGlzLl9kZWZzKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0R1cCBrZXlDb2RlOiAnLCBrZXlDb2RlKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9kZWZzW2tleUNvZGVdID0gZGVmO1xuICAgIH1cbiAgICAvLyBwcmV0dGllci1pZ25vcmVcbiAgICByZXNldCgpIHtcbiAgICAgICAgdGhpcy5fZGVmcyA9IHt9O1xuICAgICAgICBjb25zdCByZXNvbHZlID0gKGFjdGlvbiwgZSwgaykgPT4ge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBhY3Rpb24gPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHJldHVybiBhY3Rpb24uY2FsbCh0aGlzLCBlLCBrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBhY3Rpb247XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IG1vZCA9IChhLCBiKSA9PiAoZSwgaykgPT4ge1xuICAgICAgICAgICAgbGV0IGFjdGlvbiA9ICEoZS5zaGlmdCB8fCBlLmN0cmwgfHwgZS5hbHQgfHwgZS5tZXRhKSA/IGEgOiBiO1xuICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUoYWN0aW9uLCBlLCBrKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3Qgc2ggPSAoYSwgYikgPT4gKGUsIGspID0+IHtcbiAgICAgICAgICAgIGxldCBhY3Rpb24gPSAhZS5zaGlmdCA/IGEgOiBiO1xuICAgICAgICAgICAgZS5zaGlmdCA9IGZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUoYWN0aW9uLCBlLCBrKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgYnMgPSAoYSwgYikgPT4gYTtcbiAgICAgICAgY29uc3QgYWx0ID0gKGEsIGIpID0+IChlLCBrKSA9PiB7XG4gICAgICAgICAgICBsZXQgYWN0aW9uID0gZS5hbHQgPyBhIDogYjtcbiAgICAgICAgICAgIHJldHVybiByZXNvbHZlKGFjdGlvbiwgZSwgayk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGFrID0gKGEsIGIpID0+IGE7XG4gICAgICAgIGNvbnN0IGFjID0gKGEsIGIpID0+IGI7XG4gICAgICAgIC8vIGlmIGluIHNlbGVjdGlvbiBtb2RlLCB0aGF0IGhhbmRsZSB3aXRoIHRoaXMuX29uU2VsXG4gICAgICAgIGNvbnN0IHNsID0gKGEpID0+IChlLCBrKSA9PiB7XG4gICAgICAgICAgICBsZXQgYWN0aW9uID0gdGhpcy5fa2V5Ym9hcmQuaGFzU2VsZWN0aW9uID8gdGhpcy5fb25TZWwgOiBhO1xuICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUoYWN0aW9uLCBlLCBrKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgYWRkID0gKGRlZikgPT4gdGhpcy5hZGRLZXlEZWYoZGVmLmtleUNvZGUsIGRlZik7XG4gICAgICAgIC8vYWRkKHsga2V5Q29kZTogMCwga2V5Q2FwOiAnW1VOS05PV05dJywgbm9ybWFsOiBQQVNTLCBjdHJsOiBQQVNTLCBhbHQ6IFBBU1MsIG1ldGE6IFBBU1MgfSk7XG4gICAgICAgIGFkZChfdW5rbm93bktleURlZik7XG4gICAgICAgIC8vIGZpcnN0IHJvd1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAyNywga2V5Q2FwOiAnW0VTQ10nLCBub3JtYWw6IHNsKEVTQyksIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTEyLCBrZXlDYXA6ICdbRjFdJywgbm9ybWFsOiBtb2QoU1MzICsgJ1AnLCBDU0kgKyAnUCcpLCBjdHJsOiBERUZBVUxULCBhbHQ6IENTSSArICcyM34nLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMTMsIGtleUNhcDogJ1tGMl0nLCBub3JtYWw6IG1vZChTUzMgKyAnUScsIENTSSArICdRJyksIGN0cmw6IERFRkFVTFQsIGFsdDogQ1NJICsgJzI0ficsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDExNCwga2V5Q2FwOiAnW0YzXScsIG5vcm1hbDogbW9kKFNTMyArICdSJywgQ1NJICsgJ1InKSwgY3RybDogREVGQVVMVCwgYWx0OiBDU0kgKyAnMjV+JywgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTE1LCBrZXlDYXA6ICdbRjRdJywgbm9ybWFsOiBtb2QoU1MzICsgJ1MnLCBDU0kgKyAnUycpLCBjdHJsOiBERUZBVUxULCBhbHQ6IENTSSArICcyNn4nLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMTYsIGtleUNhcDogJ1tGNV0nLCBub3JtYWw6IENTSSArICcxNX4nLCBjdHJsOiBERUZBVUxULCBhbHQ6IENTSSArICcyOH4nLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMTcsIGtleUNhcDogJ1tGNl0nLCBub3JtYWw6IENTSSArICcxN34nLCBjdHJsOiBERUZBVUxULCBhbHQ6IENTSSArICcyOX4nLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMTgsIGtleUNhcDogJ1tGN10nLCBub3JtYWw6IENTSSArICcxOH4nLCBjdHJsOiBERUZBVUxULCBhbHQ6IENTSSArICczMX4nLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMTksIGtleUNhcDogJ1tGOF0nLCBub3JtYWw6IENTSSArICcxOX4nLCBjdHJsOiBERUZBVUxULCBhbHQ6IENTSSArICczMn4nLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMjAsIGtleUNhcDogJ1tGOV0nLCBub3JtYWw6IENTSSArICcyMH4nLCBjdHJsOiBERUZBVUxULCBhbHQ6IENTSSArICczM34nLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMjEsIGtleUNhcDogJ1tGMTBdJywgbm9ybWFsOiBDU0kgKyAnMjF+JywgY3RybDogREVGQVVMVCwgYWx0OiBDU0kgKyAnMzR+JywgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTIyLCBrZXlDYXA6ICdbRjExXScsIG5vcm1hbDogQ1NJICsgJzIzficsIGN0cmw6IERFRkFVTFQsIGFsdDogQ1NJICsgJzQyficsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDEyMywga2V5Q2FwOiAnW0YxMl0nLCBub3JtYWw6IENTSSArICcyNH4nLCBjdHJsOiBERUZBVUxULCBhbHQ6IENTSSArICc0M34nLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBjb25zdCBvbkN0cmxOdW0gPSB0aGlzLl9vbkN0cmxOdW07XG4gICAgICAgIGNvbnN0IG9uQWx0TnVtID0gdGhpcy5fb25BbHROdW07XG4gICAgICAgIGNvbnN0IG9uTWV0YU51bSA9IHRoaXMuX29uTWV0YU51bTtcbiAgICAgICAgY29uc3Qgb25ab29tID0gdGhpcy5fb25ab29tO1xuICAgICAgICAvLyBzZWNvbmQgcm93XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDE5Miwga2V5Q2FwOiAnYH4nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IHNoKGN0bCgnQCcpLCBjdGwoJ14nKSksIGFsdDogREVGQVVMVCwgbWV0YTogUEFTUyB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNDksIGtleUNhcDogJzEhJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBvbkN0cmxOdW0sIGFsdDogb25BbHROdW0sIG1ldGE6IG9uTWV0YU51bSB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNTAsIGtleUNhcDogJzJAJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBvbkN0cmxOdW0sIGFsdDogb25BbHROdW0sIG1ldGE6IG9uTWV0YU51bSB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNTEsIGtleUNhcDogJzMjJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBvbkN0cmxOdW0sIGFsdDogb25BbHROdW0sIG1ldGE6IG9uTWV0YU51bSB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNTIsIGtleUNhcDogJzQkJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBvbkN0cmxOdW0sIGFsdDogb25BbHROdW0sIG1ldGE6IG9uTWV0YU51bSB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNTMsIGtleUNhcDogJzUlJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBvbkN0cmxOdW0sIGFsdDogb25BbHROdW0sIG1ldGE6IG9uTWV0YU51bSB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNTQsIGtleUNhcDogJzZeJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBvbkN0cmxOdW0sIGFsdDogb25BbHROdW0sIG1ldGE6IG9uTWV0YU51bSB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNTUsIGtleUNhcDogJzcmJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBvbkN0cmxOdW0sIGFsdDogb25BbHROdW0sIG1ldGE6IG9uTWV0YU51bSB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNTYsIGtleUNhcDogJzgqJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBvbkN0cmxOdW0sIGFsdDogb25BbHROdW0sIG1ldGE6IG9uTWV0YU51bSB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNTcsIGtleUNhcDogJzkoJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBvbkN0cmxOdW0sIGFsdDogb25BbHROdW0sIG1ldGE6IG9uTWV0YU51bSB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNDgsIGtleUNhcDogJzApJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBvblpvb20sIGFsdDogb25BbHROdW0sIG1ldGE6IG9uWm9vbSB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTg5LCBrZXlDYXA6ICctXycsIG5vcm1hbDogREVGQVVMVCwgY3RybDogc2gob25ab29tLCBjdGwoJ18nKSksIGFsdDogREVGQVVMVCwgbWV0YTogb25ab29tIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxODcsIGtleUNhcDogJz0rJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBvblpvb20sIGFsdDogREVGQVVMVCwgbWV0YTogb25ab29tIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA4LCBrZXlDYXA6ICdbQktTUF0nLCBub3JtYWw6IGJzKERFTCwgJ1xcYicpLCBjdHJsOiBicygnXFxiJywgREVMKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICAvLyB0aGlyZCByb3dcbiAgICAgICAgYWRkKHsga2V5Q29kZTogOSwga2V5Q2FwOiAnW1RBQl0nLCBub3JtYWw6IHNoKCdcXHQnLCBDU0kgKyAnWicpLCBjdHJsOiBTVFJJUCwgYWx0OiBQQVNTLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA4MSwga2V5Q2FwOiAncVEnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnUScpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDg3LCBrZXlDYXA6ICd3VycsIG5vcm1hbDogc2woREVGQVVMVCksIGN0cmw6IGN0bCgnVycpLCBhbHQ6IHNsKERFRkFVTFQpLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA2OSwga2V5Q2FwOiAnZUUnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnRScpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDgyLCBrZXlDYXA6ICdyUicsIG5vcm1hbDogREVGQVVMVCwgY3RybDogY3RsKCdSJyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogODQsIGtleUNhcDogJ3RUJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBjdGwoJ1QnKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA4OSwga2V5Q2FwOiAneVknLCBub3JtYWw6IHNsKERFRkFVTFQpLCBjdHJsOiBjdGwoJ1knKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA4NSwga2V5Q2FwOiAndVUnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnVScpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDczLCBrZXlDYXA6ICdpSScsIG5vcm1hbDogREVGQVVMVCwgY3RybDogY3RsKCdJJyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNzksIGtleUNhcDogJ29PJywgbm9ybWFsOiBzbChERUZBVUxUKSwgY3RybDogY3RsKCdPJyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogODAsIGtleUNhcDogJ3BQJywgbm9ybWFsOiBzbChERUZBVUxUKSwgY3RybDogc2woY3RsKCdQJykpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDIxOSwga2V5Q2FwOiAnW3snLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnWycpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDIyMSwga2V5Q2FwOiAnXX0nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnXScpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDIyMCwga2V5Q2FwOiAnXFxcXHwnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnXFxcXCcpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIC8vIGZvdXJ0aCByb3dcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMjAsIGtleUNhcDogJ1tDQVBTXScsIG5vcm1hbDogUEFTUywgY3RybDogUEFTUywgYWx0OiBQQVNTLCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA2NSwga2V5Q2FwOiAnYUEnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnQScpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDgzLCBrZXlDYXA6ICdzUycsIG5vcm1hbDogREVGQVVMVCwgY3RybDogY3RsKCdTJyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNjgsIGtleUNhcDogJ2REJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBjdGwoJ0QnKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA3MCwga2V5Q2FwOiAnZkYnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IHNsKGN0bCgnRicpKSwgYWx0OiBzbChERUZBVUxUKSwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNzEsIGtleUNhcDogJ2dHJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBjdGwoJ0cnKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA3Miwga2V5Q2FwOiAnaEgnLCBub3JtYWw6IHNsKERFRkFVTFQpLCBjdHJsOiBjdGwoJ0gnKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA3NCwga2V5Q2FwOiAnakonLCBub3JtYWw6IHNsKERFRkFVTFQpLCBjdHJsOiBjdGwoJ0onKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA3NSwga2V5Q2FwOiAna0snLCBub3JtYWw6IHNsKERFRkFVTFQpLCBjdHJsOiBjdGwoJ0snKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA3Niwga2V5Q2FwOiAnbEwnLCBub3JtYWw6IHNsKERFRkFVTFQpLCBjdHJsOiBjdGwoJ0wnKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxODYsIGtleUNhcDogJzs6Jywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBTVFJJUCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAyMjIsIGtleUNhcDogJ1xcJ1wiJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBTVFJJUCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMywga2V5Q2FwOiAnW0VOVEVSXScsIG5vcm1hbDogJ1xccicsIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgLy8gZmlmdGggcm93XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDE2LCBrZXlDYXA6ICdbU0hJRlRdJywgbm9ybWFsOiBQQVNTLCBjdHJsOiBQQVNTLCBhbHQ6IFBBU1MsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDkwLCBrZXlDYXA6ICd6WicsIG5vcm1hbDogREVGQVVMVCwgY3RybDogY3RsKCdaJyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogODgsIGtleUNhcDogJ3hYJywgbm9ybWFsOiBzbChERUZBVUxUKSwgY3RybDogY3RsKCdYJyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNjcsIGtleUNhcDogJ2NDJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBjdGwoJ0MnKSwgYWx0OiBERUZBVUxULCBtZXRhOiBQQVNTIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA4Niwga2V5Q2FwOiAndlYnLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGN0bCgnVicpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IFBBU1MgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDY2LCBrZXlDYXA6ICdiQicsIG5vcm1hbDogc2woREVGQVVMVCksIGN0cmw6IHNsKGN0bCgnQicpKSwgYWx0OiBzbChERUZBVUxUKSwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNzgsIGtleUNhcDogJ25OJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBzbChjdGwoJ04nKSksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNzcsIGtleUNhcDogJ21NJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBjdGwoJ00nKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxODgsIGtleUNhcDogJyw8Jywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBhbHQoU1RSSVAsIFBBU1MpLCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDE5MCwga2V5Q2FwOiAnLj4nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IGFsdChTVFJJUCwgUEFTUyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTkxLCBrZXlDYXA6ICcvPycsIG5vcm1hbDogREVGQVVMVCwgY3RybDogc2goY3RsKCdfJyksIGN0bCgnPycpKSwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICAvLyBzaXh0aCByb3dcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTcsIGtleUNhcDogJ1tDVFJMXScsIG5vcm1hbDogUEFTUywgY3RybDogUEFTUywgYWx0OiBQQVNTLCBtZXRhOiBQQVNTIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxOCwga2V5Q2FwOiAnW09QVF0nLCBub3JtYWw6IFBBU1MsIGN0cmw6IFBBU1MsIGFsdDogUEFTUywgbWV0YTogUEFTUyB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogOTEsIGtleUNhcDogJ1tMQ01EXScsIG5vcm1hbDogUEFTUywgY3RybDogUEFTUywgYWx0OiBQQVNTLCBtZXRhOiBQQVNTIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAzMiwga2V5Q2FwOiAnICcsIG5vcm1hbDogREVGQVVMVCwgY3RybDogY3RsKCdAJyksIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogOTMsIGtleUNhcDogJ1tSQ01EXScsIG5vcm1hbDogUEFTUywgY3RybDogUEFTUywgYWx0OiBQQVNTLCBtZXRhOiBQQVNTIH0pO1xuICAgICAgICAvLyB0aGVzZSB0aGluZ3MuXG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDQyLCBrZXlDYXA6ICdbUFJUU0NSXScsIG5vcm1hbDogUEFTUywgY3RybDogUEFTUywgYWx0OiBQQVNTLCBtZXRhOiBQQVNTIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxNDUsIGtleUNhcDogJ1tTQ1JMS10nLCBub3JtYWw6IFBBU1MsIGN0cmw6IFBBU1MsIGFsdDogUEFTUywgbWV0YTogUEFTUyB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTksIGtleUNhcDogJ1tCUkVBS10nLCBub3JtYWw6IFBBU1MsIGN0cmw6IFBBU1MsIGFsdDogUEFTUywgbWV0YTogUEFTUyB9KTtcbiAgICAgICAgLy8gYmxvY2sgb2Ygc2l4IGtleXMgYWJvdmUgdGhlIGFycm93c1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA0NSwga2V5Q2FwOiAnW0lOU0VSVF0nLCBub3JtYWw6IENTSSArICcyficsIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMzYsIGtleUNhcDogJ1tIT01FXScsIG5vcm1hbDogRVNDICsgJ09IJywgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAzMywga2V5Q2FwOiAnW1BHVVBdJywgbm9ybWFsOiBDU0kgKyAnNX4nLCBjdHJsOiBERUZBVUxULCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDQ2LCBrZXlDYXA6ICdbREVMXScsIG5vcm1hbDogQ1NJICsgJzN+JywgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAzNSwga2V5Q2FwOiAnW0VORF0nLCBub3JtYWw6IEVTQyArICdPRicsIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMzQsIGtleUNhcDogJ1tQR0RPV05dJywgbm9ybWFsOiBDU0kgKyAnNn4nLCBjdHJsOiBERUZBVUxULCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIC8vIGFycm93IGtleXNcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMzgsIGtleUNhcDogJ1tVUF0nLCBub3JtYWw6IHNsKGFjKENTSSArICdBJywgU1MzICsgJ0EnKSksIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogNDAsIGtleUNhcDogJ1tET1dOXScsIG5vcm1hbDogc2woYWMoQ1NJICsgJ0InLCBTUzMgKyAnQicpKSwgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAzOSwga2V5Q2FwOiAnW1JJR0hUXScsIG5vcm1hbDogc2woYWMoQ1NJICsgJ0MnLCBTUzMgKyAnQycpKSwgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAzNywga2V5Q2FwOiAnW0xFRlRdJywgbm9ybWFsOiBzbChhYyhDU0kgKyAnRCcsIFNTMyArICdEJykpLCBjdHJsOiBERUZBVUxULCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDE0NCwga2V5Q2FwOiAnW05VTUxPQ0tdJywgbm9ybWFsOiBQQVNTLCBjdHJsOiBQQVNTLCBhbHQ6IFBBU1MsIG1ldGE6IFBBU1MgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDEyLCBrZXlDYXA6ICdbQ0xFQVJdJywgbm9ybWFsOiBQQVNTLCBjdHJsOiBQQVNTLCBhbHQ6IFBBU1MsIG1ldGE6IFBBU1MgfSk7XG4gICAgICAgIC8vIGtleXBhZCB3aXRoIG51bWxvY2tcbiAgICAgICAgYWRkKHsga2V5Q29kZTogOTYsIGtleUNhcDogJ1tLUDBdJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBERUZBVUxULCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDk3LCBrZXlDYXA6ICdbS1AxXScsIG5vcm1hbDogREVGQVVMVCwgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiA5OCwga2V5Q2FwOiAnW0tQMl0nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogOTksIGtleUNhcDogJ1tLUDNdJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBERUZBVUxULCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDEwMCwga2V5Q2FwOiAnW0tQNF0nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTAxLCBrZXlDYXA6ICdbS1A1XScsIG5vcm1hbDogREVGQVVMVCwgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMDIsIGtleUNhcDogJ1tLUDZdJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBERUZBVUxULCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDEwMywga2V5Q2FwOiAnW0tQN10nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTA0LCBrZXlDYXA6ICdbS1A4XScsIG5vcm1hbDogREVGQVVMVCwgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMDUsIGtleUNhcDogJ1tLUDldJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBERUZBVUxULCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDEwNywga2V5Q2FwOiAnW0tQK10nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IG9uWm9vbSwgYWx0OiBERUZBVUxULCBtZXRhOiBvblpvb20gfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDEwOSwga2V5Q2FwOiAnW0tQLV0nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IG9uWm9vbSwgYWx0OiBERUZBVUxULCBtZXRhOiBvblpvb20gfSk7XG4gICAgICAgIGFkZCh7IGtleUNvZGU6IDEwNiwga2V5Q2FwOiAnW0tQKl0nLCBub3JtYWw6IERFRkFVTFQsIGN0cmw6IERFRkFVTFQsIGFsdDogREVGQVVMVCwgbWV0YTogREVGQVVMVCB9KTtcbiAgICAgICAgYWRkKHsga2V5Q29kZTogMTExLCBrZXlDYXA6ICdbS1AvXScsIG5vcm1hbDogREVGQVVMVCwgY3RybDogREVGQVVMVCwgYWx0OiBERUZBVUxULCBtZXRhOiBERUZBVUxUIH0pO1xuICAgICAgICBhZGQoeyBrZXlDb2RlOiAxMTAsIGtleUNhcDogJ1tLUC5dJywgbm9ybWFsOiBERUZBVUxULCBjdHJsOiBERUZBVUxULCBhbHQ6IERFRkFVTFQsIG1ldGE6IERFRkFVTFQgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gS2V5TWFwO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBVSUtleU1vZGlmaWVyQWxwaGFTaGlmdCA9IDEgPDwgMTY7IC8vIFRoaXMgYml0IGluZGljYXRlcyBDYXBzTG9ja1xuY29uc3QgVUlLZXlNb2RpZmllclNoaWZ0ID0gMSA8PCAxNztcbmNvbnN0IFVJS2V5TW9kaWZpZXJDb250cm9sID0gMSA8PCAxODtcbmNvbnN0IFVJS2V5TW9kaWZpZXJBbHRlcm5hdGUgPSAxIDw8IDE5O1xuY29uc3QgVUlLZXlNb2RpZmllckNvbW1hbmQgPSAxIDw8IDIwO1xuY29uc3QgVUlLZXlNb2RpZmllck51bWVyaWNQYWQgPSAxIDw8IDIxO1xuZnVuY3Rpb24gdG9VSUtpdEZsYWdzKGUsIGNhcHNLZXkgPSB0cnVlKSB7XG4gICAgbGV0IHJlcyA9IDA7XG4gICAgaWYgKGUuc2hpZnRLZXkpIHtcbiAgICAgICAgcmVzIHw9IFVJS2V5TW9kaWZpZXJTaGlmdDtcbiAgICB9XG4gICAgaWYgKGUuY3RybEtleSkge1xuICAgICAgICByZXMgfD0gVUlLZXlNb2RpZmllckNvbnRyb2w7XG4gICAgfVxuICAgIGlmIChlLmFsdEtleSkge1xuICAgICAgICByZXMgfD0gVUlLZXlNb2RpZmllckFsdGVybmF0ZTtcbiAgICB9XG4gICAgaWYgKGUubWV0YUtleSkge1xuICAgICAgICByZXMgfD0gVUlLZXlNb2RpZmllckNvbW1hbmQ7XG4gICAgfVxuICAgIGlmIChjYXBzS2V5KSB7XG4gICAgICAgIHJlcyB8PSBVSUtleU1vZGlmaWVyQWxwaGFTaGlmdDtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn1cbmV4cG9ydHMudG9VSUtpdEZsYWdzID0gdG9VSUtpdEZsYWdzO1xuZnVuY3Rpb24gVUlLaXRGbGFnc1RvT2JqZWN0KGZsYWdzKSB7XG4gICAgdmFyIHNoaWZ0ID0gKGZsYWdzICYgVUlLZXlNb2RpZmllclNoaWZ0KSA9PSBVSUtleU1vZGlmaWVyU2hpZnQ7XG4gICAgdmFyIGFsdCA9IChmbGFncyAmIFVJS2V5TW9kaWZpZXJBbHRlcm5hdGUpID09IFVJS2V5TW9kaWZpZXJBbHRlcm5hdGU7XG4gICAgdmFyIGN0cmwgPSAoZmxhZ3MgJiBVSUtleU1vZGlmaWVyQ29udHJvbCkgPT0gVUlLZXlNb2RpZmllckNvbnRyb2w7XG4gICAgdmFyIG1ldGEgPSAoZmxhZ3MgJiBVSUtleU1vZGlmaWVyQ29tbWFuZCkgPT0gVUlLZXlNb2RpZmllckNvbW1hbmQ7XG4gICAgcmV0dXJuIHsgc2hpZnQsIGFsdCwgY3RybCwgbWV0YSB9O1xufVxuZXhwb3J0cy5VSUtpdEZsYWdzVG9PYmplY3QgPSBVSUtpdEZsYWdzVG9PYmplY3Q7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIEJpbmRpbmdzIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLy8gVE9ETzogbWF0Y2ggc3RhdGUgbGF0ZXJcbiAgICAgICAgdGhpcy5fc3RhY2sgPSBbXTtcbiAgICAgICAgdGhpcy5fbWFwID0ge307XG4gICAgICAgIHRoaXMuZXhwYW5kRm4gPSAoYmluZGluZykgPT4ge1xuICAgICAgICAgICAgaWYgKGJpbmRpbmcua2V5cy5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBmbnMgPSBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBrZXlDb2RlOiAxMjEsXG4gICAgICAgICAgICAgICAgICAgIGtleTogJ0YxMCcsXG4gICAgICAgICAgICAgICAgICAgIGNvZGU6ICdGMTAnLFxuICAgICAgICAgICAgICAgICAgICBpZDogJzEyMTowJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAga2V5Q29kZTogMTEyLFxuICAgICAgICAgICAgICAgICAgICBrZXk6ICdGMScsXG4gICAgICAgICAgICAgICAgICAgIGNvZGU6ICdGMScsXG4gICAgICAgICAgICAgICAgICAgIGlkOiAnMTEyOjAnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBrZXlDb2RlOiAxMTMsXG4gICAgICAgICAgICAgICAgICAgIGtleTogJ0YyJyxcbiAgICAgICAgICAgICAgICAgICAgY29kZTogJ0YyJyxcbiAgICAgICAgICAgICAgICAgICAgaWQ6ICcxMTM6MCcsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGtleUNvZGU6IDExNCxcbiAgICAgICAgICAgICAgICAgICAga2V5OiAnRjMnLFxuICAgICAgICAgICAgICAgICAgICBjb2RlOiAnRjMnLFxuICAgICAgICAgICAgICAgICAgICBpZDogJzExNDowJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAga2V5Q29kZTogMTE1LFxuICAgICAgICAgICAgICAgICAgICBrZXk6ICdGNCcsXG4gICAgICAgICAgICAgICAgICAgIGNvZGU6ICdGNCcsXG4gICAgICAgICAgICAgICAgICAgIGlkOiAnMTE1OjAnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBrZXlDb2RlOiAxMTYsXG4gICAgICAgICAgICAgICAgICAgIGtleTogJ0Y1JyxcbiAgICAgICAgICAgICAgICAgICAgY29kZTogJ0Y1JyxcbiAgICAgICAgICAgICAgICAgICAgaWQ6ICcxMTY6MCcsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGtleUNvZGU6IDExNyxcbiAgICAgICAgICAgICAgICAgICAga2V5OiAnRjYnLFxuICAgICAgICAgICAgICAgICAgICBjb2RlOiAnRjYnLFxuICAgICAgICAgICAgICAgICAgICBpZDogJzExNzowJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAga2V5Q29kZTogMTE4LFxuICAgICAgICAgICAgICAgICAgICBrZXk6ICdGNycsXG4gICAgICAgICAgICAgICAgICAgIGNvZGU6ICdGNycsXG4gICAgICAgICAgICAgICAgICAgIGlkOiAnMTE4OjAnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBrZXlDb2RlOiAxMTksXG4gICAgICAgICAgICAgICAgICAgIGtleTogJ0Y4JyxcbiAgICAgICAgICAgICAgICAgICAgY29kZTogJ0Y4JyxcbiAgICAgICAgICAgICAgICAgICAgaWQ6ICcxMTk6MCcsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGtleUNvZGU6IDEyMCxcbiAgICAgICAgICAgICAgICAgICAga2V5OiAnRjknLFxuICAgICAgICAgICAgICAgICAgICBjb2RlOiAnRjknLFxuICAgICAgICAgICAgICAgICAgICBpZDogJzEyMDowJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIGxldCBrZXlzID0gYmluZGluZy5rZXlzLnNsaWNlKCk7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcbiAgICAgICAgICAgICAgICBsZXQgbnVtSWQgPSBpICsgNDggKyAnOjAnO1xuICAgICAgICAgICAgICAgIGxldCBmbiA9IGZuc1tpXTtcbiAgICAgICAgICAgICAgICBiaW5kaW5nLmtleXMgPSBrZXlzLnNsaWNlKCk7XG4gICAgICAgICAgICAgICAgYmluZGluZy5rZXlzLnB1c2gobnVtSWQpO1xuICAgICAgICAgICAgICAgIGJpbmRpbmcuYWN0aW9uID0ge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAncHJlc3MnLFxuICAgICAgICAgICAgICAgICAgICBrZXk6IGZuLFxuICAgICAgICAgICAgICAgICAgICBhbHQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBzaGlmdDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGN0cmw6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBtZXRhOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHRoaXMuX2V4cGFuZEJpbmRpbmcoYmluZGluZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuZXhwYW5kQ3Vyc29yID0gKGJpbmRpbmcpID0+IHtcbiAgICAgICAgICAgIGlmIChiaW5kaW5nLmtleXMubGVuZ3RoID09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgY3Vyc29yID0gW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAga2V5Q29kZTogMzYsXG4gICAgICAgICAgICAgICAgICAgIGtleTogJ0hPTUUnLFxuICAgICAgICAgICAgICAgICAgICBjb2RlOiAnSE9NRScsXG4gICAgICAgICAgICAgICAgICAgIGlkOiAnMzY6MCcsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGtleUNvZGU6IDMzLFxuICAgICAgICAgICAgICAgICAgICBrZXk6ICdQR1VQJyxcbiAgICAgICAgICAgICAgICAgICAgY29kZTogJ1BHVVAnLFxuICAgICAgICAgICAgICAgICAgICBpZDogJzMzOjAnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBrZXlDb2RlOiAzNSxcbiAgICAgICAgICAgICAgICAgICAga2V5OiAnRU5EJyxcbiAgICAgICAgICAgICAgICAgICAgY29kZTogJ0VORCcsXG4gICAgICAgICAgICAgICAgICAgIGlkOiAnMzU6MCcsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGtleUNvZGU6IDM0LFxuICAgICAgICAgICAgICAgICAgICBrZXk6ICdQR0RPV04nLFxuICAgICAgICAgICAgICAgICAgICBjb2RlOiAnUEdET1dOJyxcbiAgICAgICAgICAgICAgICAgICAgaWQ6ICczNDowJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIGxldCBsZWZ0ID0gJzM3OjAnO1xuICAgICAgICAgICAgbGV0IHVwID0gJzM4OjAnO1xuICAgICAgICAgICAgbGV0IHJpZ2h0ID0gJzM5OjAnO1xuICAgICAgICAgICAgbGV0IGRvd24gPSAnNDA6MCc7XG4gICAgICAgICAgICBsZXQgYXJyb3dzID0gW2xlZnQsIHVwLCByaWdodCwgZG93bl07XG4gICAgICAgICAgICBsZXQga2V5cyA9IGJpbmRpbmcua2V5cy5zbGljZSgpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnJvd3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBsZXQgYXJyb3cgPSBhcnJvd3NbaV07XG4gICAgICAgICAgICAgICAgbGV0IGN1ciA9IGN1cnNvcltpXTtcbiAgICAgICAgICAgICAgICBiaW5kaW5nLmtleXMgPSBrZXlzLnNsaWNlKCk7XG4gICAgICAgICAgICAgICAgYmluZGluZy5rZXlzLnB1c2goYXJyb3cpO1xuICAgICAgICAgICAgICAgIGJpbmRpbmcuYWN0aW9uID0ge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAncHJlc3MnLFxuICAgICAgICAgICAgICAgICAgICBrZXk6IGN1cixcbiAgICAgICAgICAgICAgICAgICAgYWx0OiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgc2hpZnQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBjdHJsOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgbWV0YTogZmFsc2UsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB0aGlzLl9leHBhbmRCaW5kaW5nKGJpbmRpbmcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9leHBhbmRCaW5kaW5nID0gKGJpbmRpbmcpID0+IHtcbiAgICAgICAgICAgIHZhciBrZXlzID0gYmluZGluZy5rZXlzLm1hcChrID0+IGsuc3BsaXQoJy0nKVswXSk7XG4gICAgICAgICAgICBpZiAoa2V5cy5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciByZXMgPSBba2V5cy5zb3J0KCldO1xuICAgICAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICAgICAgY29uc3Qgc2hpZnQgPSB7XG4gICAgICAgICAgICAgICAgaWRMZWZ0OiAnMTY6MScsXG4gICAgICAgICAgICAgICAgaWRSaWdodDogJzE2OjInLFxuICAgICAgICAgICAgICAgIGxvYzogYmluZGluZy5zaGlmdExvYyxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb25zdCBjb250cm9sID0ge1xuICAgICAgICAgICAgICAgIGlkTGVmdDogJzE3OjEnLFxuICAgICAgICAgICAgICAgIGlkUmlnaHQ6ICcxNzoyJyxcbiAgICAgICAgICAgICAgICBsb2M6IGJpbmRpbmcuY29udHJvbExvYyxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb25zdCBvcHRpb24gPSB7XG4gICAgICAgICAgICAgICAgaWRMZWZ0OiAnMTg6MScsXG4gICAgICAgICAgICAgICAgaWRSaWdodDogJzE4OjInLFxuICAgICAgICAgICAgICAgIGxvYzogYmluZGluZy5vcHRpb25Mb2MsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY29uc3QgY29tbWFuZCA9IHtcbiAgICAgICAgICAgICAgICBpZExlZnQ6ICc5MToxJyxcbiAgICAgICAgICAgICAgICBpZFJpZ2h0OiAnOTM6MCcsXG4gICAgICAgICAgICAgICAgbG9jOiBiaW5kaW5nLmNvbW1hbmRMb2MsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmFyIGRvdWJsZUtleXMgPSBbc2hpZnQsIGNvbnRyb2wsIG9wdGlvbiwgY29tbWFuZF07XG4gICAgICAgICAgICBmb3IgKGxldCBrIG9mIGRvdWJsZUtleXMpIHtcbiAgICAgICAgICAgICAgICB2YXIgaSA9IHJlcy5sZW5ndGggLSAxO1xuICAgICAgICAgICAgICAgIGZvciAoOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcm93ID0gcmVzW2ldO1xuICAgICAgICAgICAgICAgICAgICBsZXQgaWR4ID0gcm93LmluZGV4T2Yoay5pZExlZnQpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaWR4IDwgMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWR4ID0gcm93LmluZGV4T2Yoay5pZFJpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoaWR4IDwgMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGsubG9jID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvd1tpZHhdID0gay5pZExlZnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoay5sb2MgPT0gMikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcm93W2lkeF0gPSBrLmlkUmlnaHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByb3dbaWR4XSA9IGsuaWRMZWZ0O1xuICAgICAgICAgICAgICAgICAgICBsZXQgcmlnaHQgPSByb3cuc2xpY2UoKTtcbiAgICAgICAgICAgICAgICAgICAgcmlnaHRbaWR4XSA9IGsuaWRSaWdodDtcbiAgICAgICAgICAgICAgICAgICAgcmVzLnB1c2gocmlnaHQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAobGV0IHJvdyBvZiByZXMpIHtcbiAgICAgICAgICAgICAgICBsZXQgciA9IHJvdy5zb3J0KCkuam9pbignOicpO1xuICAgICAgICAgICAgICAgIHRoaXMuX21hcFtyXSA9IGJpbmRpbmcuYWN0aW9uO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXNldCgpIHtcbiAgICAgICAgdGhpcy5fc3RhY2sgPSBbXTtcbiAgICAgICAgdGhpcy5fbWFwID0ge307XG4gICAgfVxuICAgIG1hdGNoKGtleUlkcykge1xuICAgICAgICBsZXQga2V5c1BhdGggPSBrZXlJZHMuc29ydCgpLmpvaW4oJzonKTtcbiAgICAgICAgbGV0IGFjdGlvbiA9IHRoaXMuX21hcFtrZXlzUGF0aF07XG4gICAgICAgIHJldHVybiBhY3Rpb247XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gQmluZGluZ3M7XG4iXSwic291cmNlUm9vdCI6IiJ9